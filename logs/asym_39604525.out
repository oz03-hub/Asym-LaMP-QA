Keeping ['ae', 'lp', 'sc'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:20:40.660832_ae_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:20:40.660832_ae_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:20:40.660832_ae_processed_test.json', '--batch_size', '4']

  0%|          | 0/401 [00:00<?, ?it/s]
  0%|          | 1/401 [00:00<02:01,  3.28it/s]
  0%|          | 2/401 [00:00<01:49,  3.66it/s]
  1%|          | 3/401 [00:02<08:14,  1.24s/it]
  1%|          | 4/401 [00:04<08:44,  1.32s/it]
  1%|          | 5/401 [00:05<09:00,  1.36s/it]
  1%|▏         | 6/401 [00:07<09:13,  1.40s/it]
  2%|▏         | 7/401 [00:08<09:22,  1.43s/it]
  2%|▏         | 8/401 [00:10<09:19,  1.42s/it]
  2%|▏         | 9/401 [00:11<09:21,  1.43s/it]
  2%|▏         | 10/401 [00:12<07:26,  1.14s/it]
  3%|▎         | 11/401 [00:13<08:30,  1.31s/it]
  3%|▎         | 13/401 [00:15<07:03,  1.09s/it]
  3%|▎         | 14/401 [00:18<10:44,  1.67s/it]
  4%|▎         | 15/401 [00:19<08:07,  1.26s/it]
  4%|▍         | 17/401 [00:19<04:58,  1.28it/s]
  4%|▍         | 18/401 [00:20<06:18,  1.01it/s]
  5%|▍         | 19/401 [00:22<07:21,  1.16s/it]
  5%|▍         | 20/401 [00:26<12:22,  1.95s/it]
  5%|▌         | 21/401 [00:27<09:22,  1.48s/it]
  5%|▌         | 22/401 [00:31<14:00,  2.22s/it]
  6%|▌         | 23/401 [00:32<12:57,  2.06s/it]
  6%|▌         | 24/401 [00:36<16:50,  2.68s/it]
  6%|▌         | 25/401 [00:37<12:04,  1.93s/it]
  6%|▋         | 26/401 [00:37<08:52,  1.42s/it]
  7%|▋         | 27/401 [00:41<13:55,  2.23s/it]
  7%|▋         | 28/401 [00:41<10:16,  1.65s/it]
  7%|▋         | 29/401 [00:41<07:23,  1.19s/it]
  7%|▋         | 30/401 [00:43<07:36,  1.23s/it]
  8%|▊         | 31/401 [00:44<07:24,  1.20s/it]
  8%|▊         | 32/401 [00:44<05:30,  1.11it/s]
  8%|▊         | 33/401 [00:45<05:56,  1.03it/s]
  8%|▊         | 34/401 [00:47<07:46,  1.27s/it]
  9%|▊         | 35/401 [00:47<05:37,  1.09it/s]
  9%|▉         | 37/401 [00:48<03:35,  1.69it/s]
 10%|▉         | 39/401 [00:49<03:39,  1.65it/s]
 10%|█         | 41/401 [00:50<03:51,  1.56it/s]
 10%|█         | 42/401 [00:51<03:22,  1.77it/s]
 11%|█         | 43/401 [00:51<02:59,  1.99it/s]
 11%|█         | 44/401 [00:52<03:40,  1.62it/s]
 11%|█▏        | 46/401 [00:52<02:44,  2.15it/s]
 12%|█▏        | 47/401 [00:54<04:50,  1.22it/s]
 12%|█▏        | 48/401 [00:55<04:15,  1.38it/s]
 12%|█▏        | 49/401 [00:55<03:42,  1.58it/s]
 12%|█▏        | 50/401 [00:56<03:55,  1.49it/s]
 13%|█▎        | 51/401 [00:56<03:29,  1.67it/s]
 13%|█▎        | 53/401 [00:57<02:37,  2.22it/s]
 13%|█▎        | 54/401 [00:57<02:14,  2.58it/s]
 14%|█▎        | 55/401 [01:00<05:43,  1.01it/s]
 14%|█▍        | 56/401 [01:01<06:11,  1.08s/it]
 14%|█▍        | 57/401 [01:02<05:59,  1.05s/it]
 14%|█▍        | 58/401 [01:02<04:28,  1.28it/s]
 15%|█▍        | 59/401 [01:05<07:40,  1.35s/it]
 15%|█▍        | 60/401 [01:06<06:31,  1.15s/it]
 15%|█▌        | 61/401 [01:06<05:19,  1.06it/s]
 15%|█▌        | 62/401 [01:06<04:15,  1.33it/s]
 16%|█▌        | 63/401 [01:07<03:48,  1.48it/s]
 16%|█▌        | 64/401 [01:07<03:28,  1.62it/s]
 16%|█▌        | 65/401 [01:08<03:15,  1.72it/s]
 16%|█▋        | 66/401 [01:09<04:26,  1.26it/s]
 17%|█▋        | 67/401 [01:09<03:33,  1.57it/s]
 17%|█▋        | 68/401 [01:10<02:49,  1.97it/s]
 17%|█▋        | 69/401 [01:10<02:08,  2.59it/s]
 17%|█▋        | 70/401 [01:11<03:16,  1.68it/s]
 18%|█▊        | 71/401 [01:11<02:51,  1.92it/s]
 18%|█▊        | 72/401 [01:12<03:37,  1.52it/s]
 18%|█▊        | 73/401 [01:12<03:03,  1.79it/s]
 18%|█▊        | 74/401 [01:13<03:42,  1.47it/s]
 19%|█▊        | 75/401 [01:14<04:11,  1.30it/s]
 19%|█▉        | 76/401 [01:15<04:29,  1.20it/s]
 19%|█▉        | 77/401 [01:16<04:43,  1.14it/s]
 19%|█▉        | 78/401 [01:16<03:32,  1.52it/s]
 20%|█▉        | 79/401 [01:17<04:02,  1.33it/s]
 20%|█▉        | 80/401 [01:18<04:22,  1.22it/s]
 20%|██        | 81/401 [01:19<04:16,  1.25it/s]
 20%|██        | 82/401 [01:20<04:31,  1.17it/s]
 21%|██        | 83/401 [01:21<04:44,  1.12it/s]
 21%|██        | 84/401 [01:22<04:50,  1.09it/s]
 21%|██        | 85/401 [01:22<03:58,  1.32it/s]
 21%|██▏       | 86/401 [01:23<04:17,  1.22it/s]
 22%|██▏       | 87/401 [01:26<07:19,  1.40s/it]
 22%|██▏       | 88/401 [01:27<06:38,  1.27s/it]
 22%|██▏       | 89/401 [01:29<06:40,  1.29s/it]
 22%|██▏       | 90/401 [01:29<04:59,  1.04it/s]
 23%|██▎       | 91/401 [01:29<03:41,  1.40it/s]
 23%|██▎       | 92/401 [01:30<04:05,  1.26it/s]
 23%|██▎       | 93/401 [01:30<03:10,  1.62it/s]
 23%|██▎       | 94/401 [01:32<05:16,  1.03s/it]
 24%|██▎       | 95/401 [01:33<05:39,  1.11s/it]
 24%|██▍       | 96/401 [01:34<05:26,  1.07s/it]
 24%|██▍       | 97/401 [01:35<05:16,  1.04s/it]
 24%|██▍       | 98/401 [01:36<04:16,  1.18it/s]
 25%|██▍       | 99/401 [01:36<03:14,  1.55it/s]
 25%|██▍       | 100/401 [01:36<02:41,  1.86it/s]
 25%|██▌       | 101/401 [01:37<03:03,  1.64it/s]
 25%|██▌       | 102/401 [01:37<02:19,  2.15it/s]
 26%|██▌       | 103/401 [01:37<02:14,  2.21it/s]
 26%|██▌       | 104/401 [01:38<03:00,  1.65it/s]
 26%|██▌       | 105/401 [01:39<03:31,  1.40it/s]
 27%|██▋       | 107/401 [01:40<02:30,  1.95it/s]
 27%|██▋       | 108/401 [01:40<02:03,  2.37it/s]
 27%|██▋       | 109/401 [01:41<02:45,  1.77it/s]
 27%|██▋       | 110/401 [01:41<02:08,  2.27it/s]
 28%|██▊       | 111/401 [01:42<02:49,  1.71it/s]
 28%|██▊       | 112/401 [01:43<03:20,  1.44it/s]
 28%|██▊       | 113/401 [01:44<03:16,  1.46it/s]
 28%|██▊       | 114/401 [01:44<03:09,  1.52it/s]
 29%|██▊       | 115/401 [01:45<02:33,  1.86it/s]
 29%|██▉       | 116/401 [01:46<03:08,  1.51it/s]
 29%|██▉       | 117/401 [01:46<02:52,  1.65it/s]
 29%|██▉       | 118/401 [01:46<02:16,  2.07it/s]
 30%|██▉       | 119/401 [01:47<03:15,  1.44it/s]
 30%|██▉       | 120/401 [01:48<02:32,  1.84it/s]
 30%|███       | 121/401 [01:48<02:04,  2.25it/s]
 30%|███       | 122/401 [01:48<02:17,  2.02it/s]
 31%|███       | 123/401 [01:50<03:24,  1.36it/s]
 31%|███       | 124/401 [01:51<04:10,  1.10it/s]
 31%|███       | 125/401 [01:52<04:43,  1.03s/it]
 31%|███▏      | 126/401 [01:53<03:36,  1.27it/s]
 32%|███▏      | 127/401 [01:54<04:18,  1.06it/s]
 32%|███▏      | 128/401 [01:55<04:48,  1.06s/it]
 32%|███▏      | 129/401 [01:56<04:39,  1.03s/it]
 32%|███▏      | 130/401 [01:57<05:01,  1.11s/it]
 33%|███▎      | 131/401 [01:58<04:32,  1.01s/it]
 33%|███▎      | 132/401 [01:59<03:31,  1.27it/s]
 33%|███▎      | 133/401 [02:01<06:08,  1.38s/it]
 33%|███▎      | 134/401 [02:02<05:35,  1.26s/it]
 34%|███▎      | 135/401 [02:03<05:13,  1.18s/it]
 34%|███▍      | 136/401 [02:04<04:56,  1.12s/it]
 34%|███▍      | 137/401 [02:04<03:38,  1.21it/s]
 34%|███▍      | 138/401 [02:05<03:48,  1.15it/s]
 35%|███▍      | 139/401 [02:06<03:39,  1.19it/s]
 35%|███▍      | 140/401 [02:06<02:50,  1.53it/s]
 35%|███▌      | 141/401 [02:08<04:14,  1.02it/s]
 35%|███▌      | 142/401 [02:09<04:39,  1.08s/it]
 36%|███▌      | 143/401 [02:10<03:47,  1.13it/s]
 36%|███▌      | 144/401 [02:11<03:53,  1.10it/s]
 36%|███▌      | 145/401 [02:11<03:03,  1.39it/s]
 36%|███▋      | 146/401 [02:12<03:23,  1.25it/s]
 37%|███▋      | 147/401 [02:13<03:35,  1.18it/s]
 37%|███▋      | 148/401 [02:13<03:01,  1.40it/s]
 37%|███▋      | 149/401 [02:14<03:18,  1.27it/s]
 37%|███▋      | 150/401 [02:15<03:31,  1.18it/s]
 38%|███▊      | 151/401 [02:17<04:06,  1.01it/s]
 38%|███▊      | 152/401 [02:18<04:03,  1.02it/s]
 38%|███▊      | 153/401 [02:18<03:22,  1.22it/s]
 38%|███▊      | 154/401 [02:19<02:56,  1.40it/s]
 39%|███▊      | 155/401 [02:20<03:38,  1.13it/s]
 39%|███▉      | 156/401 [02:21<04:08,  1.02s/it]
 39%|███▉      | 157/401 [02:22<04:28,  1.10s/it]
 40%|███▉      | 159/401 [02:23<03:19,  1.22it/s]
 40%|███▉      | 160/401 [02:24<02:53,  1.39it/s]
 40%|████      | 162/401 [02:25<02:42,  1.47it/s]
 41%|████      | 163/401 [02:26<02:49,  1.40it/s]
 41%|████      | 164/401 [02:27<02:52,  1.37it/s]
 41%|████      | 165/401 [02:28<03:07,  1.26it/s]
 41%|████▏     | 166/401 [02:29<03:18,  1.19it/s]
 42%|████▏     | 167/401 [02:29<02:31,  1.54it/s]
 42%|████▏     | 168/401 [02:30<02:52,  1.35it/s]
 42%|████▏     | 169/401 [02:31<03:06,  1.24it/s]
 42%|████▏     | 170/401 [02:32<03:17,  1.17it/s]
 43%|████▎     | 171/401 [02:33<03:23,  1.13it/s]
 43%|████▎     | 172/401 [02:33<02:52,  1.33it/s]
 43%|████▎     | 173/401 [02:34<03:07,  1.22it/s]
 43%|████▎     | 174/401 [02:35<03:18,  1.15it/s]
 44%|████▎     | 175/401 [02:36<03:23,  1.11it/s]
 44%|████▍     | 176/401 [02:37<03:27,  1.09it/s]
 44%|████▍     | 177/401 [02:38<03:53,  1.04s/it]
 44%|████▍     | 178/401 [02:39<03:46,  1.02s/it]
 45%|████▍     | 179/401 [02:40<03:41,  1.00it/s]
 45%|████▍     | 180/401 [02:41<03:39,  1.01it/s]
 45%|████▌     | 181/401 [02:42<03:37,  1.01it/s]
 45%|████▌     | 182/401 [02:43<03:36,  1.01it/s]
 46%|████▌     | 183/401 [02:47<06:26,  1.77s/it]
 46%|████▌     | 184/401 [02:50<08:21,  2.31s/it]
 46%|████▌     | 185/401 [02:54<09:47,  2.72s/it]
 46%|████▋     | 186/401 [02:58<10:44,  3.00s/it]
 47%|████▋     | 187/401 [03:01<11:23,  3.20s/it]
 47%|████▋     | 188/401 [03:02<08:10,  2.30s/it]
 47%|████▋     | 189/401 [03:05<09:37,  2.72s/it]
 47%|████▋     | 190/401 [03:09<10:33,  3.00s/it]
 48%|████▊     | 191/401 [03:11<09:16,  2.65s/it]
 48%|████▊     | 192/401 [03:13<08:21,  2.40s/it]
 48%|████▊     | 193/401 [03:13<06:01,  1.74s/it]
 48%|████▊     | 194/401 [03:13<04:28,  1.30s/it]
 49%|████▊     | 195/401 [03:17<06:52,  2.00s/it]
 49%|████▉     | 196/401 [03:18<06:36,  1.94s/it]
 49%|████▉     | 197/401 [03:20<06:40,  1.96s/it]
 49%|████▉     | 198/401 [03:24<08:17,  2.45s/it]
 50%|████▉     | 199/401 [03:26<07:35,  2.26s/it]
 50%|████▉     | 200/401 [03:28<07:07,  2.13s/it]
 50%|█████     | 201/401 [03:29<06:47,  2.04s/it]
 50%|█████     | 202/401 [03:31<06:31,  1.96s/it]
 51%|█████     | 203/401 [03:33<06:19,  1.92s/it]
 51%|█████     | 204/401 [03:35<06:11,  1.89s/it]
 51%|█████     | 205/401 [03:35<04:26,  1.36s/it]
 51%|█████▏    | 206/401 [03:37<04:52,  1.50s/it]
 52%|█████▏    | 207/401 [03:39<05:12,  1.61s/it]
 52%|█████▏    | 208/401 [03:41<05:20,  1.66s/it]
 52%|█████▏    | 209/401 [03:41<04:07,  1.29s/it]
 52%|█████▏    | 210/401 [03:43<04:36,  1.45s/it]
 53%|█████▎    | 211/401 [03:44<03:56,  1.25s/it]
 53%|█████▎    | 212/401 [03:44<03:17,  1.05s/it]
 53%|█████▎    | 213/401 [03:45<03:02,  1.03it/s]
 53%|█████▎    | 214/401 [03:47<03:48,  1.22s/it]
 54%|█████▎    | 215/401 [03:47<03:13,  1.04s/it]
 54%|█████▍    | 216/401 [03:49<03:27,  1.12s/it]
 54%|█████▍    | 218/401 [03:49<02:19,  1.31it/s]
 55%|█████▍    | 219/401 [03:50<02:12,  1.37it/s]
 55%|█████▍    | 220/401 [03:51<02:06,  1.43it/s]
 55%|█████▌    | 221/401 [03:53<03:46,  1.26s/it]
 55%|█████▌    | 222/401 [03:54<03:13,  1.08s/it]
 56%|█████▌    | 223/401 [03:54<02:23,  1.24it/s]
 56%|█████▌    | 224/401 [03:54<01:59,  1.48it/s]
 56%|█████▌    | 225/401 [03:55<01:31,  1.92it/s]
 56%|█████▋    | 226/401 [03:55<01:10,  2.47it/s]
 57%|█████▋    | 227/401 [03:55<01:00,  2.88it/s]
 57%|█████▋    | 228/401 [03:56<01:16,  2.26it/s]
 57%|█████▋    | 229/401 [03:56<01:02,  2.75it/s]
 57%|█████▋    | 230/401 [03:57<02:04,  1.37it/s]
 58%|█████▊    | 231/401 [03:58<01:35,  1.78it/s]
 58%|█████▊    | 232/401 [03:58<01:35,  1.77it/s]
 58%|█████▊    | 234/401 [04:02<03:13,  1.16s/it]
 59%|█████▊    | 235/401 [04:02<02:38,  1.05it/s]
 59%|█████▉    | 236/401 [04:02<02:02,  1.35it/s]
 59%|█████▉    | 237/401 [04:03<01:53,  1.44it/s]
 59%|█████▉    | 238/401 [04:03<01:42,  1.59it/s]
 60%|█████▉    | 239/401 [04:04<01:41,  1.60it/s]
 60%|█████▉    | 240/401 [04:04<01:20,  2.00it/s]
 60%|██████    | 242/401 [04:04<00:52,  3.03it/s]
 61%|██████    | 243/401 [04:05<01:08,  2.30it/s]
 61%|██████    | 244/401 [04:05<01:05,  2.39it/s]
 61%|██████    | 245/401 [04:06<00:53,  2.94it/s]
 61%|██████▏   | 246/401 [04:06<01:04,  2.40it/s]
 62%|██████▏   | 247/401 [04:07<01:13,  2.10it/s]
 62%|██████▏   | 248/401 [04:07<00:56,  2.70it/s]
 62%|██████▏   | 249/401 [04:08<01:43,  1.46it/s]
 63%|██████▎   | 251/401 [04:09<01:07,  2.21it/s]
 63%|██████▎   | 252/401 [04:09<00:55,  2.70it/s]
 63%|██████▎   | 254/401 [04:09<00:43,  3.41it/s]
 64%|██████▎   | 255/401 [04:11<01:27,  1.66it/s]
 64%|██████▍   | 256/401 [04:11<01:17,  1.88it/s]
 64%|██████▍   | 257/401 [04:12<01:09,  2.08it/s]
 64%|██████▍   | 258/401 [04:12<01:03,  2.26it/s]
 65%|██████▍   | 259/401 [04:12<00:57,  2.45it/s]
 65%|██████▌   | 261/401 [04:13<00:53,  2.60it/s]
 65%|██████▌   | 262/401 [04:13<00:51,  2.71it/s]
 66%|██████▌   | 263/401 [04:14<00:49,  2.78it/s]
 66%|██████▌   | 264/401 [04:14<00:43,  3.18it/s]
 66%|██████▌   | 265/401 [04:14<00:43,  3.13it/s]
 66%|██████▋   | 266/401 [04:14<00:43,  3.10it/s]
 67%|██████▋   | 267/401 [04:15<00:36,  3.63it/s]
 67%|██████▋   | 268/401 [04:15<00:33,  4.02it/s]
 67%|██████▋   | 269/401 [04:15<00:45,  2.89it/s]
 67%|██████▋   | 270/401 [04:16<00:55,  2.38it/s]
 68%|██████▊   | 272/401 [04:16<00:35,  3.67it/s]
 68%|██████▊   | 273/401 [04:16<00:30,  4.15it/s]
 68%|██████▊   | 274/401 [04:16<00:26,  4.77it/s]
 69%|██████▊   | 275/401 [04:17<00:23,  5.33it/s]
 69%|██████▉   | 276/401 [04:17<00:22,  5.59it/s]
 69%|██████▉   | 277/401 [04:17<00:33,  3.65it/s]
 69%|██████▉   | 278/401 [04:17<00:29,  4.22it/s]
 70%|██████▉   | 279/401 [04:17<00:24,  4.92it/s]
 70%|██████▉   | 280/401 [04:18<00:31,  3.90it/s]
 70%|███████   | 281/401 [04:18<00:26,  4.58it/s]
 70%|███████   | 282/401 [04:18<00:22,  5.35it/s]
 71%|███████   | 283/401 [04:19<00:35,  3.36it/s]
 71%|███████   | 284/401 [04:19<00:35,  3.31it/s]
 71%|███████   | 285/401 [04:19<00:31,  3.66it/s]
 71%|███████▏  | 286/401 [04:19<00:32,  3.49it/s]
 72%|███████▏  | 287/401 [04:20<00:33,  3.40it/s]
 72%|███████▏  | 288/401 [04:20<00:28,  4.02it/s]
 72%|███████▏  | 289/401 [04:20<00:26,  4.21it/s]
 73%|███████▎  | 291/401 [04:21<00:25,  4.23it/s]
 73%|███████▎  | 292/401 [04:22<00:58,  1.86it/s]
 73%|███████▎  | 293/401 [04:23<01:09,  1.54it/s]
 73%|███████▎  | 294/401 [04:26<02:19,  1.30s/it]
 74%|███████▎  | 295/401 [04:26<01:42,  1.03it/s]
 74%|███████▍  | 296/401 [04:27<01:41,  1.04it/s]
 74%|███████▍  | 297/401 [04:27<01:16,  1.37it/s]
 74%|███████▍  | 298/401 [04:28<01:04,  1.60it/s]
 75%|███████▍  | 299/401 [04:29<01:28,  1.15it/s]
 75%|███████▍  | 300/401 [04:30<01:26,  1.16it/s]
 75%|███████▌  | 301/401 [04:30<01:04,  1.54it/s]
 75%|███████▌  | 302/401 [04:30<00:48,  2.04it/s]
 76%|███████▌  | 303/401 [04:31<00:58,  1.67it/s]
 76%|███████▌  | 304/401 [04:32<01:00,  1.61it/s]
 76%|███████▌  | 305/401 [04:33<01:13,  1.30it/s]
 76%|███████▋  | 306/401 [04:34<01:14,  1.27it/s]
 77%|███████▋  | 307/401 [04:35<01:19,  1.19it/s]
 77%|███████▋  | 308/401 [04:35<01:07,  1.38it/s]
 77%|███████▋  | 309/401 [04:36<01:03,  1.44it/s]
 77%|███████▋  | 310/401 [04:36<00:55,  1.65it/s]
 78%|███████▊  | 311/401 [04:37<01:00,  1.49it/s]
 78%|███████▊  | 312/401 [04:37<00:52,  1.70it/s]
 78%|███████▊  | 313/401 [04:38<00:41,  2.14it/s]
 78%|███████▊  | 314/401 [04:38<00:39,  2.22it/s]
 79%|███████▊  | 315/401 [04:38<00:33,  2.59it/s]
 79%|███████▉  | 316/401 [04:38<00:27,  3.13it/s]
 79%|███████▉  | 317/401 [04:40<00:55,  1.52it/s]
 79%|███████▉  | 318/401 [04:40<00:50,  1.63it/s]
 80%|███████▉  | 319/401 [04:41<00:41,  1.97it/s]
 80%|███████▉  | 320/401 [04:41<00:40,  2.00it/s]
 80%|████████  | 321/401 [04:42<00:39,  2.04it/s]
 80%|████████  | 322/401 [04:42<00:38,  2.05it/s]
 81%|████████  | 323/401 [04:45<01:46,  1.37s/it]
 81%|████████  | 324/401 [04:49<02:31,  1.97s/it]
 81%|████████  | 325/401 [04:52<03:01,  2.39s/it]
 81%|████████▏ | 326/401 [04:53<02:26,  1.96s/it]
 82%|████████▏ | 327/401 [04:54<02:00,  1.62s/it]
 82%|████████▏ | 328/401 [04:54<01:34,  1.29s/it]
 82%|████████▏ | 329/401 [04:56<01:40,  1.40s/it]
 82%|████████▏ | 330/401 [05:00<02:22,  2.00s/it]
 83%|████████▎ | 331/401 [05:01<01:58,  1.69s/it]
 83%|████████▎ | 332/401 [05:04<02:33,  2.22s/it]
 83%|████████▎ | 333/401 [05:07<02:54,  2.56s/it]
 83%|████████▎ | 334/401 [05:08<02:07,  1.90s/it]
 84%|████████▎ | 335/401 [05:11<02:35,  2.36s/it]
 84%|████████▍ | 336/401 [05:14<02:53,  2.67s/it]
 84%|████████▍ | 337/401 [05:16<02:21,  2.21s/it]
 84%|████████▍ | 338/401 [05:16<01:47,  1.71s/it]
 85%|████████▍ | 339/401 [05:17<01:24,  1.36s/it]
 85%|████████▍ | 340/401 [05:17<01:00,  1.00it/s]
 85%|████████▌ | 341/401 [05:17<00:43,  1.37it/s]
 85%|████████▌ | 342/401 [05:17<00:35,  1.65it/s]
 86%|████████▌ | 343/401 [05:18<00:33,  1.73it/s]
 86%|████████▌ | 344/401 [05:18<00:28,  2.00it/s]
 86%|████████▌ | 345/401 [05:20<00:44,  1.27it/s]
 86%|████████▋ | 346/401 [05:20<00:36,  1.49it/s]
 87%|████████▋ | 347/401 [05:20<00:31,  1.74it/s]
 87%|████████▋ | 348/401 [05:21<00:28,  1.89it/s]
 87%|████████▋ | 349/401 [05:21<00:23,  2.24it/s]
 87%|████████▋ | 350/401 [05:24<01:03,  1.24s/it]
 88%|████████▊ | 351/401 [05:27<01:34,  1.88s/it]
 88%|████████▊ | 352/401 [05:28<01:07,  1.38s/it]
 88%|████████▊ | 353/401 [05:31<01:37,  2.02s/it]
 89%|████████▊ | 355/401 [05:32<00:54,  1.19s/it]
 89%|████████▉ | 356/401 [05:35<01:14,  1.66s/it]
 89%|████████▉ | 357/401 [05:35<01:02,  1.41s/it]
 89%|████████▉ | 358/401 [05:37<00:57,  1.34s/it]
 90%|████████▉ | 359/401 [05:38<00:51,  1.23s/it]
 90%|████████▉ | 360/401 [05:38<00:46,  1.14s/it]
 90%|█████████ | 361/401 [05:39<00:37,  1.06it/s]
 90%|█████████ | 362/401 [05:39<00:29,  1.33it/s]
 91%|█████████ | 363/401 [05:39<00:23,  1.63it/s]
 91%|█████████ | 364/401 [05:40<00:18,  2.06it/s]
 91%|█████████ | 365/401 [05:41<00:30,  1.16it/s]
 91%|█████████▏| 366/401 [05:42<00:23,  1.48it/s]
 92%|█████████▏| 367/401 [05:42<00:21,  1.61it/s]
 92%|█████████▏| 368/401 [05:42<00:15,  2.13it/s]
 92%|█████████▏| 369/401 [05:43<00:13,  2.43it/s]
 92%|█████████▏| 370/401 [05:44<00:24,  1.25it/s]
 93%|█████████▎| 371/401 [05:46<00:32,  1.08s/it]
 93%|█████████▎| 372/401 [05:46<00:23,  1.25it/s]
 93%|█████████▎| 373/401 [05:48<00:30,  1.08s/it]
 93%|█████████▎| 374/401 [05:50<00:34,  1.27s/it]
 94%|█████████▎| 375/401 [05:51<00:36,  1.41s/it]
 94%|█████████▍| 376/401 [05:54<00:47,  1.90s/it]
 94%|█████████▍| 377/401 [05:55<00:34,  1.46s/it]
 94%|█████████▍| 378/401 [05:58<00:45,  1.96s/it]
 95%|█████████▍| 379/401 [06:01<00:52,  2.39s/it]
 95%|█████████▍| 380/401 [06:03<00:46,  2.20s/it]
 95%|█████████▌| 382/401 [06:06<00:36,  1.90s/it]
 96%|█████████▌| 383/401 [06:09<00:39,  2.20s/it]
 96%|█████████▌| 384/401 [06:12<00:38,  2.24s/it]
 96%|█████████▌| 385/401 [06:15<00:40,  2.55s/it]
 96%|█████████▋| 386/401 [06:16<00:31,  2.08s/it]
 97%|█████████▋| 387/401 [06:17<00:25,  1.85s/it]
 97%|█████████▋| 388/401 [06:18<00:21,  1.64s/it]
 97%|█████████▋| 389/401 [06:19<00:15,  1.30s/it]
 97%|█████████▋| 390/401 [06:19<00:11,  1.08s/it]
 98%|█████████▊| 391/401 [06:20<00:08,  1.21it/s]
 98%|█████████▊| 392/401 [06:21<00:08,  1.09it/s]
 98%|█████████▊| 393/401 [06:21<00:05,  1.42it/s]
 98%|█████████▊| 394/401 [06:21<00:03,  1.75it/s]
 99%|█████████▊| 395/401 [06:21<00:02,  2.01it/s]
 99%|█████████▉| 396/401 [06:25<00:06,  1.40s/it]
 99%|█████████▉| 397/401 [06:25<00:04,  1.07s/it]
 99%|█████████▉| 398/401 [06:29<00:05,  1.81s/it]
100%|█████████▉| 399/401 [06:32<00:04,  2.30s/it]
100%|█████████▉| 400/401 [06:32<00:01,  1.67s/it]
100%|██████████| 401/401 [06:33<00:00,  1.21s/it]
100%|██████████| 401/401 [06:33<00:00,  1.02it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:20:40.660832_ae_processed_test.json', '--output_addr', 'data/out/rag/full_profile/ae_rag_full_profile_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  3.15 examples/s]
Generating train split: 401 examples [00:00, 567.24 examples/s]
INFO 07-09 14:27:41 config.py:510] This model supports multiple tasks: {'score', 'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 07-09 14:27:41 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:27:43 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:27:44 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:27:44 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:06<00:18,  6.21s/it]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:12<00:12,  6.47s/it]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:19<00:06,  6.52s/it]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:25<00:00,  6.48s/it]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:25<00:00,  6.47s/it]

INFO 07-09 14:29:59 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:30:01 worker.py:241] Memory profiling takes 2.09 seconds
INFO 07-09 14:30:01 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:30:01 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:30:01 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:30:01 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:30:04 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:11,  3.03it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:10,  3.27it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:00<00:09,  3.32it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:09,  3.35it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:08,  3.35it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:01<00:08,  3.40it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:02<00:08,  3.43it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:08,  3.30it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:02<00:07,  3.33it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:02<00:07,  3.39it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:06,  3.44it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:03<00:06,  3.49it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:03<00:06,  3.51it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:04<00:05,  3.52it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:04<00:06,  3.31it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:04<00:06,  3.13it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:05<00:05,  3.08it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:05<00:05,  3.08it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:05<00:05,  3.06it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:06<00:04,  3.04it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:06<00:04,  3.05it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:06<00:04,  3.07it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:07<00:03,  3.07it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:07<00:03,  3.05it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:07<00:03,  3.02it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:08<00:02,  3.03it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:08<00:02,  3.05it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:08<00:02,  3.05it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:09<00:01,  3.07it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:09<00:01,  3.10it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:09<00:01,  3.10it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:10<00:00,  3.03it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:10<00:00,  2.98it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:10<00:00,  3.01it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:11<00:00,  3.05it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:11<00:00,  3.17it/s]
INFO 07-09 14:30:15 model_runner.py:1535] Graph capturing finished in 11 secs, took 0.22 GiB
INFO 07-09 14:30:15 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 15.91 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Is Boogiepop series connected to the Boogie music genre? Looking up the Oxford dictionary, the definition of "boogie" is:  A style of blues played on the piano with a strong, fast beat.From Wikipedia it is defined as:  Boogie (sometimes called post-disco) is a rhythm and blues genre of electronic dance music with close ties to the post-disco styleAs I am unfamiliar with the genre, I tried a few sample of boogie music. I don't really see it matches the atmosphere of the anime (neither the 2000 nor 2019 adaptation). Boogiepop himself "seems fond of whistling the prelude to Wagner's Die Meistersinger von Nürnberg" which is also not related to boogie genre.Also I don't see it too related to pop genre either.

Boogiepop and Others Promotional Trailer references 2019's "Boogiepop and Others" TV series has a promotional trailer. However the trailer is kind of "fake", because many footage are not present in the actual TV show.The main ones are:On Opera stageA man fighting a fire ability userBoogiepop walking closer to another girl, and the background switches with each swing from BoogiepopAre these referencing other unadapted stories in the series? If yes, which are those?

Meaning of telegraph code in the song "Planetes" The song Planetes in Guilty Crown begins with some telegraph encoding, which I think is Wabun code.Here is the YouTube link.My transcription is:-•-• -••-- •-- --•-- •- --•-• •-•-- -•--•which decodes to this:ni-yu-ya a-i-shi-te-ruNiyuya didn't make sense. Did I get something wrong?

In Master Keaton, is TV news being used as secret code based on real world practice? Vol.8 of Master Keaton starts with the TV broadcasting a news segment about 'a Lion was accidentally trapped inside the cage of leopards in some zoo near River Seine.' This was later explained that it symbolizes a royal family member being in danger overseas, and is used by the British government to secretly notify the related parties (agents?)Was this based on some real world practice?
# Current post question:
Are the two music notes a reference?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
What happened to Hibiya and Hiyori after they broke out of the time loop? (It's been over four years since I watched Mekaku City Actors and it wasn't the most coherent anime, so please forgive me if I've gotten any details wrong or missed something obvious.)In the episode "Heat Haze Daze", Hibiya and Hiyori are trapped in an infinite time loop in which Hiyori keeps dying, and Hibiya keeps trying and failing to save her. They finally break out of the time loop (I presume) when   Hibiya sacrifices himself to save Hiyori's life.The next time we see them is when Haruka breaks open the back of a van to find them bound and gagged inside. I don't recall there ever being an explanation of how they got there.What happened to Hibiya and Hiyori between them breaking out of the time loop and Haruka finding them in the van? Who put them there, and why?

Why didn't Roberta kill these characters? In Part 4 of Black Lagoon: Roberta's Blood Trail, Shenhua attacks Roberta and is swiftly backed up by Sawyer and Rotton. Roberta breaks Sawyer's chainsaw and one of Shenhua's kukris, has the two held at gunpoint... then just kicks Rotton in the balls and walks away, sparing all three of them.I haven't watched Part 5 yet, but so far this is the only time Roberta has shown mercy in the entire OVA. Later on in Part 4, she reacts to Eda helping her by promising to kill her painlessly, yet here she spares three random strangers who were trying to kill her, two-thirds of whom were still armed in some capacity. I don't understand why.It could be that Roberta's just trying to catch up to the American soldiers and/or Garcia, and doesn't want to waste time killing them, but she doesn't seem to be in that much of a hurry - as I noted, she walks away from the incident in question. It could also just be that she's gone completely insane at this point, and trying to analyse her actions is a waste of time. But I'd like to try anyway.Why didn't Roberta kill Shenhua, Sawyer, and Rotton?To repeat: I haven't seen Part 5 yet, so I don't want to Google anything in case I stumble across any spoilers. If the answer is "watch Part 5", so be it.

Why wasn't this character killed immediately? In Persona 5, after you   steal Okumura's Treasure, his Shadow is killed by an unseen assassin. This happens in the very same cutscene, literally two seconds after the Phantom Thieves have left the room.By my understanding, this should have resulted in    an immediate mental shutdown.And yet nothing happens until   the press conference on October 12th. Depending on how long it took you to clear the Palace, that's up to three weeks later.Now, I understand that the out-of-universe reason for this is that if   Okumura had died the moment you cleared the Palaceit would have completely messed up the game's timeline of events. But in-universe, it doesn't make sense, especially considering that   the villains were relying on Okumura dying at exactly that moment, in order to implicate the Phantom Thieves in his death.How should this be reconciled? In-universe, why didn't this character die immediately?

How to trick the reader into thinking they're following a redshirt instead of the protagonist? I'm currently planning a "magical girl" story, and I thought of an interesting way to start it, rather than launching straight into the backstory. It opens with a woman in her mid-thirties, complete with ponytail of death, walking through a city market while being stalked by a shadowy monster.What I want readers to expect is that the woman is either going to be killed by the monster, or saved from it in the nick of time by the heroine. What actually happens is that when the monster finally attacks, the woman transforms into a magical girl, beats the everloving crap out of the monster, and then destroys it with a magical laser beam. Surprise! She is the heroine.I want to try and preserve this surprise as best I can, and make the readers think they're following a redshirt or one-off character instead of the protagonist. Not referring to her by name until after the reveal will help, but it's probably not enough. What else can I do to achieve this?(I'm aware of answers on other questions to the effect of "don't trick your readers". In my case, this is supposed to be a pleasant surprise, so I feel like it's okay.)
# Current post question:
How come Neiru hasn't revived her sister yet?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Who was able to resist more punches from Saitama, Boros or Garou? It's known few characteres can resist punches from Saitama when he's half serious (probably only Boros, Garou and Orochi until now)Who was able to resist more punches from Saitama, Boros or Garou?

Was Suiryu or Garou who defeated Saitama in Virtual Reality? In OVA #4 season 2, Saitama is defeating playing Virtual Reality and Genos says the one who defeated might be able to defeat Saitama in real life. Then we see those moving to the finals of the competition are Suiryu and Garou.Was Suiryu or Garou who defeated Saitama in Virtual Reality?

Why Saitama was so poorly promoted after he defeated this insanely powerful enemy? So, in the battle between the Hero Association and the Monster Association,   Saitama defeated Garou.Why was he only promoted to Class A? 

Is Garou actually evil? So, Garou apparently doesn't kill his opponents.Later in the manga, he   saves a kid from monsters.And in the webcomic, Saitama says what Garou actually wanted to be is    a hero.Is Garou actually supposed to be evil?
# Current post question:
Was Saitama sweating with worry when he saw Garou in this scene?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/401 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/401 [00:18<2:00:27, 18.07s/it, est. speed input: 48.15 toks/s, output: 5.42 toks/s]
Processed prompts:   0%|          | 2/401 [00:18<50:54,  7.65s/it, est. speed input: 122.55 toks/s, output: 10.96 toks/s]
Processed prompts:   1%|          | 4/401 [00:18<19:13,  2.91s/it, est. speed input: 199.58 toks/s, output: 22.10 toks/s]
Processed prompts:   1%|          | 5/401 [00:18<13:32,  2.05s/it, est. speed input: 258.36 toks/s, output: 27.59 toks/s]
Processed prompts:   1%|▏         | 6/401 [00:19<10:04,  1.53s/it, est. speed input: 284.76 toks/s, output: 32.95 toks/s]
Processed prompts:   2%|▏         | 7/401 [00:19<07:25,  1.13s/it, est. speed input: 341.03 toks/s, output: 38.49 toks/s]
Processed prompts:   2%|▏         | 10/401 [00:19<03:33,  1.84it/s, est. speed input: 435.44 toks/s, output: 55.42 toks/s]
Processed prompts:   3%|▎         | 12/401 [00:19<02:37,  2.46it/s, est. speed input: 491.02 toks/s, output: 66.26 toks/s]
Processed prompts:   3%|▎         | 14/401 [00:20<01:52,  3.43it/s, est. speed input: 571.41 toks/s, output: 77.58 toks/s]
Processed prompts:   4%|▍         | 16/401 [00:20<01:28,  4.34it/s, est. speed input: 640.62 toks/s, output: 88.51 toks/s]
Processed prompts:   5%|▍         | 19/401 [00:20<01:06,  5.78it/s, est. speed input: 734.08 toks/s, output: 104.87 toks/s]
Processed prompts:   5%|▌         | 22/401 [00:20<00:56,  6.71it/s, est. speed input: 831.45 toks/s, output: 120.91 toks/s]
Processed prompts:   7%|▋         | 28/401 [00:21<00:36, 10.10it/s, est. speed input: 1047.69 toks/s, output: 154.41 toks/s]
Processed prompts:   7%|▋         | 30/401 [00:21<00:36, 10.28it/s, est. speed input: 1139.74 toks/s, output: 165.03 toks/s]
Processed prompts:   8%|▊         | 32/401 [00:21<00:41,  8.81it/s, est. speed input: 1206.09 toks/s, output: 174.24 toks/s]
Processed prompts:  10%|▉         | 39/401 [00:22<00:31, 11.33it/s, est. speed input: 1429.51 toks/s, output: 211.54 toks/s]
Processed prompts:  10%|█         | 41/401 [00:22<00:34, 10.33it/s, est. speed input: 1467.31 toks/s, output: 220.61 toks/s]
Processed prompts:  11%|█         | 43/401 [00:22<00:35, 10.23it/s, est. speed input: 1517.07 toks/s, output: 230.28 toks/s]
Processed prompts:  11%|█▏        | 46/401 [00:22<00:36,  9.72it/s, est. speed input: 1590.84 toks/s, output: 244.13 toks/s]
Processed prompts:  12%|█▏        | 50/401 [00:23<00:29, 11.90it/s, est. speed input: 1741.91 toks/s, output: 265.02 toks/s]
Processed prompts:  13%|█▎        | 52/401 [00:23<00:33, 10.42it/s, est. speed input: 1786.71 toks/s, output: 273.30 toks/s]
Processed prompts:  14%|█▎        | 55/401 [00:23<00:28, 12.19it/s, est. speed input: 1859.01 toks/s, output: 288.77 toks/s]
Processed prompts:  15%|█▌        | 61/401 [00:24<00:29, 11.51it/s, est. speed input: 2018.06 toks/s, output: 316.01 toks/s]
Processed prompts:  16%|█▋        | 66/401 [00:24<00:29, 11.55it/s, est. speed input: 2177.75 toks/s, output: 338.44 toks/s]
Processed prompts:  17%|█▋        | 70/401 [00:24<00:27, 11.86it/s, est. speed input: 2277.89 toks/s, output: 356.72 toks/s]
Processed prompts:  18%|█▊        | 72/401 [00:25<00:30, 10.85it/s, est. speed input: 2354.40 toks/s, output: 364.29 toks/s]
Processed prompts:  18%|█▊        | 74/401 [00:25<00:33,  9.81it/s, est. speed input: 2399.75 toks/s, output: 371.44 toks/s]
Processed prompts:  19%|█▉        | 77/401 [00:25<00:30, 10.53it/s, est. speed input: 2447.68 toks/s, output: 384.80 toks/s]
Processed prompts:  20%|█▉        | 79/401 [00:25<00:28, 11.21it/s, est. speed input: 2541.60 toks/s, output: 393.99 toks/s]
Processed prompts:  20%|██        | 81/401 [00:25<00:27, 11.45it/s, est. speed input: 2572.36 toks/s, output: 402.78 toks/s]
Processed prompts:  21%|██▏       | 86/401 [00:26<00:34,  9.14it/s, est. speed input: 2678.34 toks/s, output: 420.01 toks/s]
Processed prompts:  22%|██▏       | 88/401 [00:26<00:34,  8.98it/s, est. speed input: 2786.49 toks/s, output: 427.28 toks/s]
Processed prompts:  22%|██▏       | 90/401 [00:27<00:35,  8.69it/s, est. speed input: 2848.74 toks/s, output: 434.21 toks/s]
Processed prompts:  24%|██▍       | 96/401 [00:27<00:32,  9.47it/s, est. speed input: 2952.53 toks/s, output: 457.71 toks/s]
Processed prompts:  24%|██▍       | 98/401 [00:27<00:29, 10.34it/s, est. speed input: 2984.49 toks/s, output: 466.67 toks/s]
Processed prompts:  26%|██▌       | 103/401 [00:28<00:28, 10.51it/s, est. speed input: 3093.92 toks/s, output: 485.92 toks/s]
Processed prompts:  26%|██▋       | 106/401 [00:28<00:27, 10.79it/s, est. speed input: 3184.00 toks/s, output: 497.67 toks/s]
Processed prompts:  27%|██▋       | 110/401 [00:29<00:30,  9.63it/s, est. speed input: 3236.79 toks/s, output: 510.24 toks/s]
Processed prompts:  29%|██▉       | 117/401 [00:29<00:23, 11.92it/s, est. speed input: 3400.99 toks/s, output: 539.87 toks/s]
Processed prompts:  30%|███       | 121/401 [00:29<00:25, 10.93it/s, est. speed input: 3449.66 toks/s, output: 552.71 toks/s]
Processed prompts:  31%|███       | 123/401 [00:30<00:25, 10.93it/s, est. speed input: 3483.12 toks/s, output: 559.89 toks/s]
Processed prompts:  31%|███       | 125/401 [00:30<00:25, 10.62it/s, est. speed input: 3514.98 toks/s, output: 566.51 toks/s]
Processed prompts:  32%|███▏      | 128/401 [00:30<00:24, 11.16it/s, est. speed input: 3664.37 toks/s, output: 577.91 toks/s]
Processed prompts:  33%|███▎      | 134/401 [00:31<00:24, 11.11it/s, est. speed input: 3830.06 toks/s, output: 598.94 toks/s]
Processed prompts:  34%|███▍      | 137/401 [00:31<00:23, 11.19it/s, est. speed input: 3896.73 toks/s, output: 609.56 toks/s]
Processed prompts:  36%|███▌      | 143/401 [00:31<00:23, 11.10it/s, est. speed input: 3981.36 toks/s, output: 630.15 toks/s]
Processed prompts:  36%|███▋      | 146/401 [00:32<00:20, 12.60it/s, est. speed input: 4079.11 toks/s, output: 643.22 toks/s]
Processed prompts:  38%|███▊      | 151/401 [00:32<00:15, 16.38it/s, est. speed input: 4181.47 toks/s, output: 666.60 toks/s]
Processed prompts:  40%|████      | 162/401 [00:32<00:08, 28.25it/s, est. speed input: 4471.30 toks/s, output: 721.79 toks/s]
Processed prompts:  43%|████▎     | 174/401 [00:32<00:05, 41.17it/s, est. speed input: 4842.81 toks/s, output: 782.93 toks/s]
Processed prompts:  45%|████▌     | 181/401 [00:32<00:04, 44.24it/s, est. speed input: 5052.35 toks/s, output: 817.90 toks/s]
Processed prompts:  48%|████▊     | 194/401 [00:32<00:03, 54.38it/s, est. speed input: 5413.07 toks/s, output: 885.19 toks/s]
Processed prompts:  51%|█████▏    | 206/401 [00:32<00:02, 65.17it/s, est. speed input: 5815.55 toks/s, output: 948.99 toks/s]
Processed prompts:  53%|█████▎    | 214/401 [00:33<00:03, 47.34it/s, est. speed input: 6068.85 toks/s, output: 985.80 toks/s]
Processed prompts:  55%|█████▌    | 221/401 [00:33<00:04, 36.29it/s, est. speed input: 6212.83 toks/s, output: 1017.24 toks/s]
Processed prompts:  56%|█████▋    | 226/401 [00:33<00:05, 34.05it/s, est. speed input: 6374.96 toks/s, output: 1042.27 toks/s]
Processed prompts:  58%|█████▊    | 233/401 [00:33<00:04, 37.25it/s, est. speed input: 6570.61 toks/s, output: 1081.07 toks/s]
Processed prompts:  59%|█████▉    | 238/401 [00:33<00:04, 34.88it/s, est. speed input: 6704.18 toks/s, output: 1106.98 toks/s]
Processed prompts:  60%|██████    | 242/401 [00:34<00:06, 24.70it/s, est. speed input: 6753.13 toks/s, output: 1121.44 toks/s]
Processed prompts:  61%|██████▏   | 246/401 [00:34<00:07, 20.50it/s, est. speed input: 6807.18 toks/s, output: 1134.60 toks/s]
Processed prompts:  62%|██████▏   | 249/401 [00:35<00:10, 14.72it/s, est. speed input: 6832.05 toks/s, output: 1141.08 toks/s]
Processed prompts:  63%|██████▎   | 251/401 [00:35<00:10, 13.66it/s, est. speed input: 6858.38 toks/s, output: 1145.38 toks/s]
Processed prompts:  64%|██████▎   | 255/401 [00:35<00:09, 15.13it/s, est. speed input: 6926.10 toks/s, output: 1153.68 toks/s]
Processed prompts:  64%|██████▍   | 257/401 [00:35<00:10, 13.84it/s, est. speed input: 6968.67 toks/s, output: 1155.13 toks/s]
Processed prompts:  65%|██████▍   | 260/401 [00:35<00:09, 14.81it/s, est. speed input: 7038.93 toks/s, output: 1165.44 toks/s]
Processed prompts:  65%|██████▌   | 262/401 [00:36<00:10, 13.49it/s, est. speed input: 7067.08 toks/s, output: 1166.50 toks/s]
Processed prompts:  67%|██████▋   | 268/401 [00:36<00:06, 19.30it/s, est. speed input: 7241.93 toks/s, output: 1185.07 toks/s]
Processed prompts:  68%|██████▊   | 274/401 [00:36<00:04, 25.55it/s, est. speed input: 7398.35 toks/s, output: 1208.89 toks/s]
Processed prompts:  69%|██████▉   | 278/401 [00:36<00:04, 27.70it/s, est. speed input: 7501.77 toks/s, output: 1225.90 toks/s]
Processed prompts:  71%|███████   | 283/401 [00:36<00:03, 29.99it/s, est. speed input: 7609.85 toks/s, output: 1241.76 toks/s]
Processed prompts:  72%|███████▏  | 287/401 [00:36<00:03, 31.48it/s, est. speed input: 7725.42 toks/s, output: 1255.20 toks/s]
Processed prompts:  73%|███████▎  | 292/401 [00:36<00:03, 35.21it/s, est. speed input: 7855.11 toks/s, output: 1273.55 toks/s]
Processed prompts:  74%|███████▍  | 298/401 [00:36<00:02, 40.88it/s, est. speed input: 8072.62 toks/s, output: 1295.28 toks/s]
Processed prompts:  77%|███████▋  | 308/401 [00:36<00:01, 55.96it/s, est. speed input: 8377.47 toks/s, output: 1337.37 toks/s]
Processed prompts:  79%|███████▊  | 315/401 [00:37<00:01, 56.24it/s, est. speed input: 8660.81 toks/s, output: 1364.79 toks/s]
Processed prompts:  82%|████████▏ | 328/401 [00:37<00:01, 72.54it/s, est. speed input: 9146.87 toks/s, output: 1424.32 toks/s]
Processed prompts:  84%|████████▍ | 337/401 [00:37<00:00, 74.98it/s, est. speed input: 9453.54 toks/s, output: 1464.22 toks/s]
Processed prompts:  87%|████████▋ | 347/401 [00:37<00:00, 80.67it/s, est. speed input: 9674.90 toks/s, output: 1508.33 toks/s]
Processed prompts:  89%|████████▉ | 356/401 [00:37<00:00, 60.79it/s, est. speed input: 10006.16 toks/s, output: 1552.10 toks/s]
Processed prompts:  91%|█████████ | 363/401 [00:37<00:00, 58.84it/s, est. speed input: 10204.16 toks/s, output: 1588.51 toks/s]
Processed prompts:  93%|█████████▎| 374/401 [00:37<00:00, 68.76it/s, est. speed input: 10572.20 toks/s, output: 1645.22 toks/s]
Processed prompts:  95%|█████████▌| 382/401 [00:38<00:00, 58.56it/s, est. speed input: 10847.66 toks/s, output: 1683.61 toks/s]
Processed prompts:  97%|█████████▋| 389/401 [00:38<00:00, 49.33it/s, est. speed input: 11082.04 toks/s, output: 1717.82 toks/s]
Processed prompts:  99%|█████████▊| 395/401 [00:39<00:00, 16.21it/s, est. speed input: 10951.15 toks/s, output: 1711.09 toks/s]
Processed prompts: 100%|█████████▉| 400/401 [00:40<00:00, 11.18it/s, est. speed input: 10874.53 toks/s, output: 1719.47 toks/s]
Processed prompts: 100%|██████████| 401/401 [00:41<00:00,  9.56it/s, est. speed input: 10532.72 toks/s, output: 1669.34 toks/s]
[rank0]:[W709 14:30:59.018583595 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/full_profile/ae_rag_full_profile_test_4_output.json
Cleaned temporary files.
Keeping ['ae', 'lp', 'sc'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:31:03.234983_lp_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:31:03.234983_lp_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:31:03.234983_lp_processed_test.json', '--batch_size', '4']

  0%|          | 0/526 [00:00<?, ?it/s]
  0%|          | 1/526 [00:00<02:35,  3.37it/s]
  1%|          | 3/526 [00:00<01:21,  6.44it/s]
  1%|          | 5/526 [00:00<00:56,  9.20it/s]
  1%|▏         | 7/526 [00:00<00:44, 11.60it/s]
  2%|▏         | 9/526 [00:01<01:46,  4.87it/s]
  2%|▏         | 11/526 [00:01<01:20,  6.38it/s]
  2%|▏         | 13/526 [00:02<01:33,  5.47it/s]
  3%|▎         | 15/526 [00:02<01:18,  6.50it/s]
  3%|▎         | 16/526 [00:02<01:20,  6.30it/s]
  3%|▎         | 18/526 [00:02<01:04,  7.89it/s]
  4%|▍         | 20/526 [00:03<01:19,  6.35it/s]
  4%|▍         | 21/526 [00:04<02:55,  2.88it/s]
  4%|▍         | 22/526 [00:04<03:02,  2.76it/s]
  4%|▍         | 23/526 [00:05<03:46,  2.22it/s]
  5%|▍         | 24/526 [00:06<04:23,  1.91it/s]
  5%|▍         | 25/526 [00:07<05:34,  1.50it/s]
  5%|▍         | 26/526 [00:07<04:44,  1.76it/s]
  5%|▌         | 27/526 [00:07<03:45,  2.21it/s]
  5%|▌         | 28/526 [00:08<03:39,  2.27it/s]
  6%|▌         | 30/526 [00:09<04:51,  1.70it/s]
  6%|▌         | 31/526 [00:10<04:43,  1.75it/s]
  6%|▌         | 32/526 [00:10<04:01,  2.05it/s]
  6%|▋         | 33/526 [00:11<05:47,  1.42it/s]
  6%|▋         | 34/526 [00:12<06:01,  1.36it/s]
  7%|▋         | 35/526 [00:13<06:38,  1.23it/s]
  7%|▋         | 36/526 [00:13<05:09,  1.58it/s]
  7%|▋         | 37/526 [00:14<04:28,  1.82it/s]
  7%|▋         | 39/526 [00:14<02:37,  3.10it/s]
  8%|▊         | 40/526 [00:14<02:20,  3.45it/s]
  8%|▊         | 42/526 [00:14<01:47,  4.50it/s]
  8%|▊         | 43/526 [00:15<02:26,  3.30it/s]
  9%|▊         | 45/526 [00:15<01:44,  4.62it/s]
  9%|▊         | 46/526 [00:15<01:50,  4.32it/s]
  9%|▉         | 47/526 [00:15<02:08,  3.73it/s]
  9%|▉         | 48/526 [00:16<02:42,  2.94it/s]
 10%|▉         | 50/526 [00:16<02:07,  3.74it/s]
 10%|▉         | 52/526 [00:17<01:37,  4.85it/s]
 10%|█         | 53/526 [00:18<03:28,  2.27it/s]
 10%|█         | 54/526 [00:21<08:51,  1.13s/it]
 11%|█         | 56/526 [00:21<05:29,  1.43it/s]
 11%|█         | 58/526 [00:22<04:27,  1.75it/s]
 11%|█         | 59/526 [00:23<04:45,  1.64it/s]
 11%|█▏        | 60/526 [00:24<05:07,  1.52it/s]
 12%|█▏        | 61/526 [00:24<05:02,  1.54it/s]
 12%|█▏        | 62/526 [00:25<06:05,  1.27it/s]
 12%|█▏        | 63/526 [00:27<07:27,  1.03it/s]
 12%|█▏        | 64/526 [00:27<06:03,  1.27it/s]
 12%|█▏        | 65/526 [00:27<04:36,  1.67it/s]
 13%|█▎        | 66/526 [00:28<03:54,  1.97it/s]
 13%|█▎        | 67/526 [00:28<03:43,  2.05it/s]
 13%|█▎        | 68/526 [00:29<04:47,  1.59it/s]
 13%|█▎        | 69/526 [00:29<03:39,  2.08it/s]
 13%|█▎        | 70/526 [00:31<05:50,  1.30it/s]
 13%|█▎        | 71/526 [00:31<05:59,  1.27it/s]
 14%|█▎        | 72/526 [00:32<05:33,  1.36it/s]
 14%|█▍        | 73/526 [00:33<06:21,  1.19it/s]
 14%|█▍        | 74/526 [00:35<07:44,  1.03s/it]
 14%|█▍        | 75/526 [00:35<05:45,  1.30it/s]
 14%|█▍        | 76/526 [00:35<04:18,  1.74it/s]
 15%|█▍        | 77/526 [00:36<05:25,  1.38it/s]
 15%|█▍        | 78/526 [00:37<07:01,  1.06it/s]
 15%|█▌        | 79/526 [00:38<05:10,  1.44it/s]
 15%|█▌        | 80/526 [00:38<04:13,  1.76it/s]
 16%|█▌        | 82/526 [00:39<04:28,  1.66it/s]
 16%|█▌        | 84/526 [00:40<04:16,  1.72it/s]
 16%|█▌        | 85/526 [00:42<06:13,  1.18it/s]
 16%|█▋        | 86/526 [00:42<05:17,  1.39it/s]
 17%|█▋        | 87/526 [00:43<05:48,  1.26it/s]
 17%|█▋        | 88/526 [00:44<04:51,  1.50it/s]
 17%|█▋        | 89/526 [00:44<04:10,  1.74it/s]
 17%|█▋        | 90/526 [00:44<03:42,  1.96it/s]
 17%|█▋        | 91/526 [00:45<03:29,  2.07it/s]
 17%|█▋        | 92/526 [00:45<02:45,  2.62it/s]
 18%|█▊        | 93/526 [00:45<02:09,  3.35it/s]
 18%|█▊        | 95/526 [00:45<01:27,  4.93it/s]
 18%|█▊        | 96/526 [00:46<01:57,  3.65it/s]
 18%|█▊        | 97/526 [00:46<02:43,  2.62it/s]
 19%|█▊        | 98/526 [00:49<08:03,  1.13s/it]
 19%|█▉        | 99/526 [00:53<12:17,  1.73s/it]
 19%|█▉        | 101/526 [00:53<07:33,  1.07s/it]
 19%|█▉        | 102/526 [00:54<06:28,  1.09it/s]
 20%|█▉        | 103/526 [00:54<05:58,  1.18it/s]
 20%|█▉        | 104/526 [00:56<06:53,  1.02it/s]
 20%|██        | 106/526 [00:56<04:44,  1.47it/s]
 21%|██        | 108/526 [00:57<03:32,  1.97it/s]
 21%|██        | 109/526 [00:57<03:16,  2.13it/s]
 21%|██        | 110/526 [00:58<04:13,  1.64it/s]
 21%|██        | 111/526 [00:59<03:54,  1.77it/s]
 21%|██▏       | 112/526 [00:59<03:40,  1.87it/s]
 21%|██▏       | 113/526 [00:59<02:51,  2.40it/s]
 22%|██▏       | 114/526 [00:59<02:21,  2.91it/s]
 22%|██▏       | 115/526 [00:59<01:57,  3.51it/s]
 22%|██▏       | 116/526 [00:59<01:35,  4.31it/s]
 22%|██▏       | 117/526 [01:01<03:37,  1.88it/s]
 22%|██▏       | 118/526 [01:02<05:05,  1.33it/s]
 23%|██▎       | 119/526 [01:02<04:15,  1.59it/s]
 23%|██▎       | 120/526 [01:03<05:01,  1.35it/s]
 23%|██▎       | 121/526 [01:04<03:58,  1.70it/s]
 23%|██▎       | 122/526 [01:05<05:20,  1.26it/s]
 23%|██▎       | 123/526 [01:06<05:56,  1.13it/s]
 24%|██▎       | 124/526 [01:07<06:48,  1.02s/it]
 24%|██▍       | 125/526 [01:07<05:01,  1.33it/s]
 24%|██▍       | 127/526 [01:08<03:09,  2.10it/s]
 24%|██▍       | 128/526 [01:08<02:39,  2.50it/s]
 25%|██▍       | 129/526 [01:08<02:37,  2.52it/s]
 25%|██▍       | 130/526 [01:09<02:36,  2.53it/s]
 25%|██▍       | 131/526 [01:09<02:18,  2.86it/s]
 25%|██▌       | 132/526 [01:09<01:54,  3.43it/s]
 25%|██▌       | 133/526 [01:09<01:40,  3.92it/s]
 26%|██▌       | 135/526 [01:10<01:30,  4.34it/s]
 26%|██▌       | 136/526 [01:10<01:39,  3.94it/s]
 26%|██▌       | 138/526 [01:10<01:20,  4.81it/s]
 26%|██▋       | 139/526 [01:11<01:31,  4.25it/s]
 27%|██▋       | 140/526 [01:11<01:23,  4.61it/s]
 27%|██▋       | 141/526 [01:11<01:22,  4.69it/s]
 27%|██▋       | 142/526 [01:11<01:16,  5.05it/s]
 27%|██▋       | 143/526 [01:12<01:58,  3.22it/s]
 27%|██▋       | 144/526 [01:12<01:40,  3.79it/s]
 28%|██▊       | 145/526 [01:13<03:28,  1.82it/s]
 28%|██▊       | 146/526 [01:13<03:02,  2.08it/s]
 28%|██▊       | 147/526 [01:14<02:51,  2.21it/s]
 28%|██▊       | 149/526 [01:14<02:09,  2.91it/s]
 29%|██▊       | 150/526 [01:14<01:50,  3.41it/s]
 29%|██▊       | 151/526 [01:14<01:35,  3.91it/s]
 29%|██▉       | 152/526 [01:15<01:26,  4.34it/s]
 29%|██▉       | 154/526 [01:16<02:16,  2.72it/s]
 29%|██▉       | 155/526 [01:17<03:04,  2.01it/s]
 30%|██▉       | 156/526 [01:18<03:52,  1.59it/s]
 30%|██▉       | 157/526 [01:18<03:29,  1.76it/s]
 30%|███       | 159/526 [01:18<02:07,  2.88it/s]
 30%|███       | 160/526 [01:20<03:38,  1.68it/s]
 31%|███       | 161/526 [01:20<03:09,  1.93it/s]
 31%|███       | 162/526 [01:22<05:33,  1.09it/s]
 31%|███       | 164/526 [01:22<03:40,  1.64it/s]
 32%|███▏      | 166/526 [01:23<02:29,  2.40it/s]
 32%|███▏      | 167/526 [01:23<02:22,  2.52it/s]
 32%|███▏      | 168/526 [01:24<03:32,  1.68it/s]
 32%|███▏      | 169/526 [01:24<03:07,  1.90it/s]
 33%|███▎      | 171/526 [01:26<04:21,  1.36it/s]
 33%|███▎      | 172/526 [01:27<03:35,  1.64it/s]
 33%|███▎      | 173/526 [01:27<03:08,  1.87it/s]
 33%|███▎      | 174/526 [01:27<02:53,  2.02it/s]
 33%|███▎      | 175/526 [01:27<02:19,  2.52it/s]
 33%|███▎      | 176/526 [01:28<03:10,  1.84it/s]
 34%|███▎      | 177/526 [01:29<02:28,  2.35it/s]
 34%|███▍      | 178/526 [01:29<01:59,  2.92it/s]
 34%|███▍      | 179/526 [01:29<01:39,  3.50it/s]
 34%|███▍      | 180/526 [01:30<03:19,  1.74it/s]
 34%|███▍      | 181/526 [01:30<02:34,  2.23it/s]
 35%|███▍      | 182/526 [01:32<04:17,  1.34it/s]
 35%|███▍      | 183/526 [01:32<03:12,  1.78it/s]
 35%|███▍      | 184/526 [01:32<03:11,  1.78it/s]
 35%|███▌      | 186/526 [01:34<04:06,  1.38it/s]
 36%|███▌      | 187/526 [01:35<03:39,  1.54it/s]
 36%|███▌      | 188/526 [01:35<03:23,  1.66it/s]
 36%|███▌      | 190/526 [01:35<02:10,  2.58it/s]
 36%|███▋      | 191/526 [01:35<01:52,  2.97it/s]
 37%|███▋      | 192/526 [01:36<01:37,  3.43it/s]
 37%|███▋      | 193/526 [01:36<01:20,  4.11it/s]
 37%|███▋      | 194/526 [01:36<01:09,  4.74it/s]
 37%|███▋      | 195/526 [01:37<02:47,  1.98it/s]
 37%|███▋      | 196/526 [01:38<03:53,  1.41it/s]
 37%|███▋      | 197/526 [01:39<03:09,  1.74it/s]
 38%|███▊      | 198/526 [01:39<02:51,  1.91it/s]
 38%|███▊      | 199/526 [01:41<05:09,  1.06it/s]
 38%|███▊      | 200/526 [01:41<04:00,  1.35it/s]
 38%|███▊      | 201/526 [01:42<04:10,  1.30it/s]
 38%|███▊      | 202/526 [01:42<03:18,  1.63it/s]
 39%|███▊      | 203/526 [01:43<03:36,  1.49it/s]
 39%|███▉      | 205/526 [01:43<02:06,  2.54it/s]
 39%|███▉      | 206/526 [01:43<01:46,  2.99it/s]
 39%|███▉      | 207/526 [01:44<01:37,  3.28it/s]
 40%|███▉      | 210/526 [01:44<00:53,  5.92it/s]
 40%|████      | 212/526 [01:45<01:39,  3.14it/s]
 41%|████      | 214/526 [01:45<01:19,  3.92it/s]
 41%|████      | 215/526 [01:46<01:42,  3.04it/s]
 41%|████      | 216/526 [01:46<01:42,  3.03it/s]
 41%|████▏     | 217/526 [01:47<02:29,  2.07it/s]
 41%|████▏     | 218/526 [01:48<03:08,  1.64it/s]
 42%|████▏     | 219/526 [01:49<03:19,  1.54it/s]
 42%|████▏     | 220/526 [01:49<02:33,  1.99it/s]
 42%|████▏     | 222/526 [01:49<01:35,  3.18it/s]
 42%|████▏     | 223/526 [01:50<02:25,  2.08it/s]
 43%|████▎     | 224/526 [01:50<02:01,  2.49it/s]
 43%|████▎     | 225/526 [01:51<01:59,  2.53it/s]
 43%|████▎     | 227/526 [01:51<01:37,  3.06it/s]
 43%|████▎     | 228/526 [01:51<01:23,  3.57it/s]
 44%|████▎     | 229/526 [01:52<01:32,  3.21it/s]
 44%|████▎     | 230/526 [01:52<01:23,  3.55it/s]
 44%|████▍     | 231/526 [01:53<02:19,  2.12it/s]
 44%|████▍     | 232/526 [01:53<01:49,  2.69it/s]
 44%|████▍     | 233/526 [01:53<01:32,  3.17it/s]
 44%|████▍     | 234/526 [01:54<02:51,  1.70it/s]
 45%|████▍     | 235/526 [01:55<02:42,  1.79it/s]
 45%|████▍     | 236/526 [01:55<02:06,  2.29it/s]
 45%|████▌     | 237/526 [01:55<01:59,  2.42it/s]
 45%|████▌     | 238/526 [01:56<01:40,  2.87it/s]
 46%|████▌     | 240/526 [01:56<01:03,  4.49it/s]
 46%|████▌     | 241/526 [01:57<02:00,  2.37it/s]
 46%|████▌     | 243/526 [01:57<01:42,  2.77it/s]
 46%|████▋     | 244/526 [01:58<01:44,  2.69it/s]
 47%|████▋     | 245/526 [01:59<02:27,  1.90it/s]
 47%|████▋     | 246/526 [01:59<02:11,  2.14it/s]
 47%|████▋     | 247/526 [01:59<01:48,  2.58it/s]
 47%|████▋     | 248/526 [02:00<02:07,  2.19it/s]
 47%|████▋     | 249/526 [02:01<02:47,  1.65it/s]
 48%|████▊     | 250/526 [02:01<02:11,  2.10it/s]
 48%|████▊     | 251/526 [02:02<02:47,  1.64it/s]
 48%|████▊     | 252/526 [02:02<02:24,  1.89it/s]
 48%|████▊     | 253/526 [02:02<01:55,  2.35it/s]
 48%|████▊     | 255/526 [02:04<02:07,  2.13it/s]
 49%|████▊     | 256/526 [02:04<01:52,  2.40it/s]
 49%|████▉     | 257/526 [02:05<02:51,  1.56it/s]
 49%|████▉     | 258/526 [02:06<03:13,  1.38it/s]
 49%|████▉     | 259/526 [02:06<02:29,  1.79it/s]
 49%|████▉     | 260/526 [02:06<01:57,  2.27it/s]
 50%|████▉     | 261/526 [02:07<02:02,  2.17it/s]
 50%|████▉     | 262/526 [02:07<01:34,  2.79it/s]
 50%|█████     | 263/526 [02:08<02:21,  1.86it/s]
 50%|█████     | 264/526 [02:09<02:44,  1.59it/s]
 50%|█████     | 265/526 [02:09<02:06,  2.06it/s]
 51%|█████     | 266/526 [02:09<02:16,  1.90it/s]
 51%|█████     | 267/526 [02:10<02:24,  1.80it/s]
 51%|█████     | 268/526 [02:10<01:51,  2.32it/s]
 51%|█████     | 269/526 [02:10<01:34,  2.72it/s]
 51%|█████▏    | 270/526 [02:11<01:47,  2.38it/s]
 52%|█████▏    | 271/526 [02:11<01:29,  2.85it/s]
 52%|█████▏    | 272/526 [02:12<01:42,  2.49it/s]
 52%|█████▏    | 273/526 [02:13<02:25,  1.74it/s]
 52%|█████▏    | 274/526 [02:13<02:12,  1.90it/s]
 52%|█████▏    | 275/526 [02:16<05:36,  1.34s/it]
 52%|█████▏    | 276/526 [02:17<04:09,  1.00it/s]
 53%|█████▎    | 277/526 [02:17<03:08,  1.32it/s]
 53%|█████▎    | 278/526 [02:17<03:05,  1.33it/s]
 53%|█████▎    | 279/526 [02:21<06:07,  1.49s/it]
 53%|█████▎    | 280/526 [02:24<08:11,  2.00s/it]
 53%|█████▎    | 281/526 [02:27<09:37,  2.36s/it]
 54%|█████▎    | 282/526 [02:30<10:38,  2.62s/it]
 54%|█████▍    | 283/526 [02:34<11:19,  2.80s/it]
 54%|█████▍    | 284/526 [02:37<11:45,  2.92s/it]
 54%|█████▍    | 285/526 [02:37<08:44,  2.18s/it]
 54%|█████▍    | 286/526 [02:38<07:06,  1.78s/it]
 55%|█████▍    | 287/526 [02:38<05:09,  1.30s/it]
 55%|█████▍    | 288/526 [02:38<03:53,  1.02it/s]
 55%|█████▍    | 289/526 [02:39<02:55,  1.35it/s]
 55%|█████▌    | 291/526 [02:40<02:32,  1.54it/s]
 56%|█████▌    | 292/526 [02:40<02:05,  1.86it/s]
 56%|█████▌    | 293/526 [02:41<02:15,  1.71it/s]
 56%|█████▌    | 294/526 [02:41<01:58,  1.97it/s]
 56%|█████▌    | 295/526 [02:41<01:44,  2.21it/s]
 56%|█████▋    | 296/526 [02:42<01:35,  2.40it/s]
 57%|█████▋    | 298/526 [02:45<03:37,  1.05it/s]
 57%|█████▋    | 299/526 [02:48<05:34,  1.47s/it]
 57%|█████▋    | 300/526 [02:49<05:32,  1.47s/it]
 57%|█████▋    | 301/526 [02:50<05:04,  1.35s/it]
 57%|█████▋    | 302/526 [02:52<05:07,  1.37s/it]
 58%|█████▊    | 303/526 [02:53<05:12,  1.40s/it]
 58%|█████▊    | 304/526 [02:54<04:01,  1.09s/it]
 58%|█████▊    | 305/526 [02:55<04:24,  1.20s/it]
 58%|█████▊    | 306/526 [02:56<04:36,  1.26s/it]
 58%|█████▊    | 307/526 [02:58<04:48,  1.32s/it]
 59%|█████▊    | 308/526 [02:59<04:57,  1.36s/it]
 59%|█████▊    | 309/526 [03:00<03:44,  1.04s/it]
 59%|█████▉    | 310/526 [03:01<03:35,  1.00it/s]
 59%|█████▉    | 311/526 [03:01<02:45,  1.30it/s]
 59%|█████▉    | 312/526 [03:02<03:31,  1.01it/s]
 60%|█████▉    | 313/526 [03:04<04:02,  1.14s/it]
 60%|█████▉    | 314/526 [03:05<04:33,  1.29s/it]
 60%|█████▉    | 315/526 [03:09<06:29,  1.85s/it]
 60%|██████    | 316/526 [03:09<04:38,  1.33s/it]
 60%|██████    | 317/526 [03:10<04:07,  1.19s/it]
 60%|██████    | 318/526 [03:10<03:45,  1.08s/it]
 61%|██████    | 319/526 [03:11<02:59,  1.15it/s]
 61%|██████    | 320/526 [03:11<02:14,  1.53it/s]
 61%|██████    | 321/526 [03:13<03:18,  1.03it/s]
 61%|██████    | 322/526 [03:13<02:40,  1.27it/s]
 61%|██████▏   | 323/526 [03:13<02:05,  1.62it/s]
 62%|██████▏   | 324/526 [03:13<01:42,  1.97it/s]
 62%|██████▏   | 325/526 [03:14<01:27,  2.30it/s]
 62%|██████▏   | 326/526 [03:14<01:08,  2.91it/s]
 62%|██████▏   | 327/526 [03:14<01:08,  2.91it/s]
 62%|██████▏   | 328/526 [03:14<00:57,  3.45it/s]
 63%|██████▎   | 330/526 [03:14<00:37,  5.27it/s]
 63%|██████▎   | 331/526 [03:15<00:40,  4.82it/s]
 63%|██████▎   | 332/526 [03:15<00:57,  3.36it/s]
 63%|██████▎   | 333/526 [03:15<00:52,  3.66it/s]
 63%|██████▎   | 334/526 [03:17<01:48,  1.78it/s]
 64%|██████▎   | 335/526 [03:17<01:47,  1.78it/s]
 64%|██████▍   | 336/526 [03:19<02:28,  1.28it/s]
 64%|██████▍   | 337/526 [03:19<02:25,  1.29it/s]
 64%|██████▍   | 338/526 [03:20<02:17,  1.37it/s]
 64%|██████▍   | 339/526 [03:20<01:59,  1.56it/s]
 65%|██████▍   | 340/526 [03:24<04:22,  1.41s/it]
 65%|██████▍   | 341/526 [03:24<03:10,  1.03s/it]
 65%|██████▌   | 342/526 [03:24<02:39,  1.15it/s]
 65%|██████▌   | 343/526 [03:25<02:37,  1.17it/s]
 66%|██████▌   | 345/526 [03:32<06:12,  2.06s/it]
 66%|██████▌   | 346/526 [03:35<07:01,  2.34s/it]
 66%|██████▌   | 347/526 [03:42<10:26,  3.50s/it]
 66%|██████▌   | 348/526 [03:43<08:22,  2.82s/it]
 66%|██████▋   | 349/526 [03:44<06:22,  2.16s/it]
 67%|██████▋   | 350/526 [03:50<10:17,  3.51s/it]
 67%|██████▋   | 351/526 [03:54<09:59,  3.42s/it]
 67%|██████▋   | 352/526 [03:54<07:13,  2.49s/it]
 67%|██████▋   | 353/526 [03:54<05:13,  1.81s/it]
 67%|██████▋   | 355/526 [03:55<03:09,  1.11s/it]
 68%|██████▊   | 356/526 [03:55<02:27,  1.15it/s]
 68%|██████▊   | 357/526 [03:55<02:14,  1.25it/s]
 68%|██████▊   | 358/526 [03:56<02:04,  1.35it/s]
 68%|██████▊   | 359/526 [03:56<01:41,  1.65it/s]
 68%|██████▊   | 360/526 [03:56<01:18,  2.13it/s]
 69%|██████▊   | 361/526 [03:57<01:06,  2.47it/s]
 69%|██████▉   | 363/526 [03:57<01:02,  2.60it/s]
 69%|██████▉   | 364/526 [03:57<00:55,  2.94it/s]
 69%|██████▉   | 365/526 [03:58<01:06,  2.42it/s]
 70%|██████▉   | 366/526 [04:00<02:01,  1.31it/s]
 70%|██████▉   | 367/526 [04:00<01:33,  1.71it/s]
 70%|██████▉   | 368/526 [04:00<01:13,  2.16it/s]
 70%|███████   | 369/526 [04:01<01:11,  2.21it/s]
 70%|███████   | 370/526 [04:07<05:57,  2.29s/it]
 71%|███████   | 371/526 [04:14<09:21,  3.63s/it]
 71%|███████   | 372/526 [04:21<11:36,  4.52s/it]
 71%|███████   | 374/526 [04:21<06:18,  2.49s/it]
 71%|███████▏  | 375/526 [04:28<08:54,  3.54s/it]
 71%|███████▏  | 376/526 [04:28<06:37,  2.65s/it]
 72%|███████▏  | 377/526 [04:28<05:12,  2.09s/it]
 72%|███████▏  | 379/526 [04:29<03:09,  1.29s/it]
 72%|███████▏  | 380/526 [04:29<02:31,  1.04s/it]
 72%|███████▏  | 381/526 [04:36<05:55,  2.45s/it]
 73%|███████▎  | 382/526 [04:36<04:37,  1.93s/it]
 73%|███████▎  | 383/526 [04:37<03:36,  1.51s/it]
 73%|███████▎  | 384/526 [04:43<07:02,  2.97s/it]
 73%|███████▎  | 385/526 [04:50<09:35,  4.08s/it]
 73%|███████▎  | 386/526 [04:51<07:25,  3.18s/it]
 74%|███████▎  | 387/526 [04:51<05:23,  2.32s/it]
 74%|███████▍  | 388/526 [04:52<04:01,  1.75s/it]
 74%|███████▍  | 389/526 [04:52<03:14,  1.42s/it]
 74%|███████▍  | 390/526 [04:53<02:40,  1.18s/it]
 74%|███████▍  | 391/526 [04:53<01:57,  1.15it/s]
 75%|███████▍  | 392/526 [04:53<01:26,  1.55it/s]
 75%|███████▍  | 393/526 [04:54<01:24,  1.58it/s]
 75%|███████▍  | 394/526 [04:54<01:03,  2.08it/s]
 75%|███████▌  | 396/526 [04:54<00:39,  3.29it/s]
 75%|███████▌  | 397/526 [04:54<00:33,  3.80it/s]
 76%|███████▌  | 398/526 [04:55<00:33,  3.77it/s]
 76%|███████▌  | 399/526 [05:01<04:20,  2.05s/it]
 76%|███████▌  | 400/526 [05:02<03:10,  1.51s/it]
 76%|███████▌  | 401/526 [05:08<06:21,  3.05s/it]
 76%|███████▋  | 402/526 [05:09<04:46,  2.31s/it]
 77%|███████▋  | 403/526 [05:09<03:33,  1.74s/it]
 77%|███████▋  | 404/526 [05:10<02:36,  1.28s/it]
 77%|███████▋  | 405/526 [05:10<01:56,  1.04it/s]
 77%|███████▋  | 406/526 [05:15<04:20,  2.17s/it]
 78%|███████▊  | 408/526 [05:15<02:24,  1.23s/it]
 78%|███████▊  | 409/526 [05:16<02:05,  1.07s/it]
 78%|███████▊  | 410/526 [05:16<01:36,  1.20it/s]
 78%|███████▊  | 411/526 [05:23<04:42,  2.45s/it]
 78%|███████▊  | 412/526 [05:23<03:27,  1.82s/it]
 79%|███████▊  | 414/526 [05:23<01:58,  1.06s/it]
 79%|███████▉  | 415/526 [05:23<01:38,  1.12it/s]
 79%|███████▉  | 417/526 [05:24<01:08,  1.60it/s]
 79%|███████▉  | 418/526 [05:26<01:34,  1.14it/s]
 80%|███████▉  | 419/526 [05:26<01:14,  1.43it/s]
 80%|████████  | 421/526 [05:29<02:03,  1.18s/it]
 80%|████████  | 422/526 [05:30<01:37,  1.07it/s]
 80%|████████  | 423/526 [05:30<01:20,  1.28it/s]
 81%|████████  | 424/526 [05:30<01:02,  1.62it/s]
 81%|████████  | 425/526 [05:30<00:48,  2.08it/s]
 81%|████████  | 426/526 [05:30<00:41,  2.42it/s]
 81%|████████  | 427/526 [05:30<00:33,  2.96it/s]
 81%|████████▏ | 428/526 [05:31<00:26,  3.66it/s]
 82%|████████▏ | 429/526 [05:31<00:22,  4.25it/s]
 82%|████████▏ | 431/526 [05:32<00:35,  2.71it/s]
 82%|████████▏ | 433/526 [05:32<00:25,  3.63it/s]
 83%|████████▎ | 435/526 [05:35<00:59,  1.54it/s]
 83%|████████▎ | 436/526 [05:36<01:03,  1.41it/s]
 83%|████████▎ | 438/526 [05:37<00:56,  1.57it/s]
 83%|████████▎ | 439/526 [05:37<00:58,  1.48it/s]
 84%|████████▎ | 440/526 [05:38<00:57,  1.48it/s]
 84%|████████▍ | 442/526 [05:39<00:42,  1.97it/s]
 84%|████████▍ | 444/526 [05:40<00:52,  1.57it/s]
 85%|████████▍ | 445/526 [05:42<01:08,  1.18it/s]
 85%|████████▍ | 446/526 [05:42<00:57,  1.40it/s]
 85%|████████▍ | 447/526 [05:43<00:49,  1.59it/s]
 85%|████████▌ | 448/526 [05:43<00:40,  1.94it/s]
 86%|████████▌ | 450/526 [05:43<00:25,  3.00it/s]
 86%|████████▌ | 451/526 [05:43<00:21,  3.52it/s]
 86%|████████▌ | 453/526 [05:43<00:14,  4.99it/s]
 86%|████████▋ | 454/526 [05:44<00:20,  3.58it/s]
 87%|████████▋ | 456/526 [05:44<00:15,  4.51it/s]
 87%|████████▋ | 458/526 [05:44<00:12,  5.28it/s]
 87%|████████▋ | 459/526 [05:45<00:13,  5.07it/s]
 87%|████████▋ | 460/526 [05:45<00:18,  3.62it/s]
 88%|████████▊ | 461/526 [05:45<00:15,  4.19it/s]
 88%|████████▊ | 462/526 [05:46<00:14,  4.33it/s]
 88%|████████▊ | 463/526 [05:46<00:16,  3.71it/s]
 88%|████████▊ | 465/526 [05:46<00:13,  4.45it/s]
 89%|████████▊ | 466/526 [05:47<00:15,  3.85it/s]
 89%|████████▉ | 467/526 [05:47<00:17,  3.28it/s]
 89%|████████▉ | 468/526 [05:47<00:14,  3.87it/s]
 89%|████████▉ | 470/526 [05:47<00:10,  5.44it/s]
 90%|████████▉ | 471/526 [05:47<00:09,  6.05it/s]
 90%|████████▉ | 472/526 [05:48<00:12,  4.29it/s]
 90%|█████████ | 474/526 [05:48<00:08,  6.03it/s]
 90%|█████████ | 475/526 [05:49<00:16,  3.14it/s]
 90%|█████████ | 476/526 [05:49<00:16,  2.98it/s]
 91%|█████████ | 478/526 [05:49<00:10,  4.59it/s]
 91%|█████████ | 479/526 [05:50<00:17,  2.76it/s]
 91%|█████████▏| 480/526 [05:51<00:17,  2.67it/s]
 91%|█████████▏| 481/526 [05:52<00:29,  1.52it/s]
 92%|█████████▏| 482/526 [05:52<00:24,  1.78it/s]
 92%|█████████▏| 483/526 [05:53<00:20,  2.12it/s]
 92%|█████████▏| 484/526 [05:53<00:16,  2.47it/s]
 92%|█████████▏| 485/526 [05:53<00:14,  2.80it/s]
 92%|█████████▏| 486/526 [05:53<00:11,  3.37it/s]
 93%|█████████▎| 487/526 [05:53<00:10,  3.75it/s]
 93%|█████████▎| 489/526 [05:54<00:07,  4.85it/s]
 93%|█████████▎| 490/526 [05:54<00:07,  4.90it/s]
 93%|█████████▎| 491/526 [05:55<00:11,  3.11it/s]
 94%|█████████▎| 493/526 [05:58<00:32,  1.02it/s]
 94%|█████████▍| 495/526 [05:59<00:20,  1.49it/s]
 94%|█████████▍| 496/526 [05:59<00:16,  1.78it/s]
 94%|█████████▍| 497/526 [06:00<00:19,  1.45it/s]
 95%|█████████▍| 498/526 [06:02<00:26,  1.07it/s]
 95%|█████████▍| 499/526 [06:03<00:31,  1.17s/it]
 95%|█████████▌| 500/526 [06:04<00:23,  1.12it/s]
 95%|█████████▌| 501/526 [06:04<00:17,  1.42it/s]
 96%|█████████▌| 503/526 [06:04<00:10,  2.26it/s]
 96%|█████████▌| 504/526 [06:04<00:08,  2.49it/s]
 96%|█████████▌| 505/526 [06:05<00:08,  2.37it/s]
 96%|█████████▌| 506/526 [06:05<00:07,  2.71it/s]
 96%|█████████▋| 507/526 [06:05<00:05,  3.27it/s]
 97%|█████████▋| 508/526 [06:06<00:06,  2.90it/s]
 97%|█████████▋| 510/526 [06:07<00:06,  2.30it/s]
 97%|█████████▋| 511/526 [06:07<00:06,  2.15it/s]
 97%|█████████▋| 512/526 [06:07<00:05,  2.56it/s]
 98%|█████████▊| 513/526 [06:08<00:06,  1.97it/s]
 98%|█████████▊| 514/526 [06:09<00:05,  2.16it/s]
 98%|█████████▊| 515/526 [06:09<00:04,  2.24it/s]
 98%|█████████▊| 516/526 [06:09<00:03,  2.78it/s]
 98%|█████████▊| 517/526 [06:09<00:03,  2.68it/s]
 98%|█████████▊| 518/526 [06:10<00:02,  2.91it/s]
 99%|█████████▊| 519/526 [06:10<00:02,  3.49it/s]
 99%|█████████▉| 520/526 [06:11<00:02,  2.02it/s]
 99%|█████████▉| 521/526 [06:11<00:01,  2.64it/s]
 99%|█████████▉| 522/526 [06:14<00:05,  1.27s/it]
 99%|█████████▉| 523/526 [06:18<00:05,  1.89s/it]
100%|█████████▉| 524/526 [06:21<00:04,  2.36s/it]
100%|█████████▉| 525/526 [06:22<00:01,  1.75s/it]
100%|██████████| 526/526 [06:25<00:00,  2.23s/it]
100%|██████████| 526/526 [06:25<00:00,  1.36it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:31:03.234983_lp_processed_test.json', '--output_addr', 'data/out/rag/full_profile/lp_rag_full_profile_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  3.41 examples/s]
Generating train split: 526 examples [00:00, 781.58 examples/s]
INFO 07-09 14:37:53 config.py:510] This model supports multiple tasks: {'generate', 'embed', 'classify', 'score', 'reward'}. Defaulting to 'generate'.
INFO 07-09 14:37:53 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:37:55 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:37:55 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:37:56 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:01,  1.66it/s]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.57it/s]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.59it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.56it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.57it/s]

INFO 07-09 14:37:59 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:38:01 worker.py:241] Memory profiling takes 2.10 seconds
INFO 07-09 14:38:01 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:38:01 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:38:01 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:38:01 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:38:04 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:11,  3.07it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:10,  3.24it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:00<00:09,  3.32it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:09,  3.40it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:08,  3.45it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:01<00:08,  3.49it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:02<00:07,  3.51it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:07,  3.52it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:02<00:07,  3.51it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:02<00:07,  3.51it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:06,  3.53it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:03<00:06,  3.55it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:03<00:06,  3.54it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:04<00:05,  3.56it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:04<00:05,  3.57it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:04<00:05,  3.57it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:04<00:04,  3.62it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:05<00:04,  3.65it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:05<00:04,  3.67it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:05<00:04,  3.69it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:05<00:03,  3.71it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:06<00:03,  3.72it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:06<00:03,  3.73it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:06<00:02,  3.72it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:06<00:02,  3.74it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:07<00:02,  3.75it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:07<00:02,  3.76it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:07<00:01,  3.76it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:08<00:01,  3.78it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:08<00:01,  3.80it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:08<00:01,  3.79it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:08<00:00,  3.81it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:09<00:00,  3.75it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:09<00:00,  3.78it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.78it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.64it/s]
INFO 07-09 14:38:13 model_runner.py:1535] Graph capturing finished in 10 secs, took 0.22 GiB
INFO 07-09 14:38:13 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 14.47 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Is giving child ride considered spoiling? My sister lives 15-20min walk from her school but my mom gives her a ride in the car every morning.  Is this considered spoiling the child or no.  In my opinion it is because I think it's a perfectly close enough distance to walk.

Is investing all your savings into a small number of individual stocks risky? I want to invest 90% of my savings into stock market and split between 4-6 stocks.  How risky is this and is it a bad idea.  I feel like the stock market goes up over time so unless something like 2008 depression happens again there is actually not that much risk?Note that I'm trying to turn this into a form of income and not simply getting decent returns for retirement etc.  I am okay with reasonable risk so I can work less hopefully.

bread made with egg safe to leave outside? I have some bread that has egg in it.  Safe to leave the bread at room temp after baking?  Im asking because I wouldn't leave scrambled eggs at room temp but is bread ok?

What causes a stock to make an EXTREMELY big move in a short period? Today (8/19/20) I was paper trading a stock REDU.  I was in a short position without a stop loss and stock went from 6.74 to 7.48 or over 10% in a span of less than 30 seconds, faster than I could react to get out.  Is this due to low trade volume and the bid and ask became so wide?  or someone manipulating the market?My question is how can I avoid this scenario in the future.  Would a stop loss work to get me out? or avoid these types of stocks in general.
# Current post question:
Is cycling on this 35mph road too dangerous?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
First time repairing a rear wheel hub, I am hearing bearing on bearing rattle/clicks when spinning For the sake of doing a restoration I just serviced a rear wheel: new bearings, new grease, new axle and new dust caps.I think I have put enough grease. When spinning the wheel before putting it on the bike I was feeling a bit of crunchiness but no noise. After putting the wheel on, truing it, setting the brakes, I did a spin test: there is no resistance, the wheel does spin for a while with a single push. Unfortunately there is a significant metal on metal noise, feels like a bearing on bearing friction. The wheel has also a tiny bit of play but it is attached safety to the bike.Here is a video with audio: https://imgur.com/a/BTmexIYAlso, I had to replace the dust caps by a wee bit smaller ones (25mm vs 28mm), but I do not think this is to blame.

New DIY project: restoring this bike from the bins. How can I service this back wheel? I picked a broken bike from the garbage around the block. The bike has some damage. It looks like a stolen bike (spray paint awfully over original color), so it must have had some tough love. I have identified the brand and model from its parts but no one has reported it stolen, yet. It will turn into a restoration job soon.I am not the sharpest bike wrench so I could use some advice. Most parts are in good state. Obviously it needs new brake pads and new tires, and most probably a new chain, as this one is full or rust. The rear derailleur was so bent into the spokes that it broke. Definitely needs replacement by a new one.The work that needs to be done on the rear wheel is not clear to me. The spokes are unbroken but it needs truing. I found it with some of its bearings opened, the ones on the non-driving side. When looking inside: not much contamination but some of the balls seem to be missing. I already have grease. Can I just buy any balls bearings? How do I know how many I need? Also the lock ring on these bearings is crooked? See pictures. Will it close? Or do I need a new one? Is it needed to buy a new axle + bearings? Is it simpler?Here are some pictures https://imgur.com/a/UbB8NrlMany thanks.

How/where can I find replacements for these 'wheel bearing caps'? I have started the restoration of a bike picked up from the bins. The bike has taken some abuse. The rear wheel axle was broken, same for the two "bearings" caps or dust seals. I am not sure how to name these. I am providing pictures here for illustration https://imgur.com/a/fKflsyxIt was really to get a replacement for the bearings and the axle, but that cap piece - maybe because of not knowing its name - I am not able to see it for sale anywhere. I am not sure how standard or custom these pieces are. The hub has no brand or logo. The bike is a carrera zelos if this helps.

What type of bottom bracket is this (pictures)? What tools do I need to replace it? This bike has a lot of play on the bottom bracket. Here are pictures:What replacement can I buy for it? It looks like a square tapper BB to me, how do I measure which size I need? I do not have the tools to open it and read on the piece at this stage. Hence, what tools do I need to replace it?
# Current post question:
Shimano crankset is near end of life, can I use a Tiagra 4700 replacement?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
How to care for bent avocado tree I have an avocado tree I started from a pit. It has lived in upstate New York indoors and has grown tall and skinny. I recently moved to Atlanta, Georgia and so can have it outdoors more. The tree is somewhat crooked. Should I prune it? (Possibly even cutting off the top half of the tree?)Should I get a bigger pot?Should I get some kind of system going to stabilize and/or straighten it out? Should I keep it outside all of the time?

Trees for southern Idaho/northern Utah mountain environment My goal is to find trees that would survive in the fairly harsh climate of the mountains of northern Utah/southern Idaho (near Bear Lake). Being in the mountains, it is around 7,000 feet. The trees need to be able to withstand cold temperatures of roughly -20 degrees Fahrenheit as well as be drought resistant. However, we can water them once or twice per week in the summer. What kind of trees meet the bill?We have had some success with aspen trees and some, but less, success with pine trees.

What to do with this Meyer Lemon Tree? I have a Meyer Lemon Tree that used to be doing well, but has lately been losing most of its leaves. See How to tell if indoor lemons are ready to pick for what it used to look like. I had it outside for a while, then brought it inside when it got cold. Since then, it has been not doing well. Around the time of when I brought it in, I harvested two big lemons from it. The first image shows what it looks like. The second is a closeup. There are lots of new buds---are those for lemons or for new leaves?

How to politely tell someone they did not hit "reply to all" in an email? It happens sometimes that somebody (likely) meant to reply all in an email chain, but (likely) accidentally just replied to the last person that sent the email. What is a polite way to inform them of this/ask if they actually intended to reply all?
# Current post question:
Repair Marin Hawk Hill (cracked frame) or get new bike?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/526 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/526 [00:18<2:42:00, 18.52s/it, est. speed input: 27.49 toks/s, output: 4.86 toks/s]
Processed prompts:   0%|          | 2/526 [00:18<1:08:33,  7.85s/it, est. speed input: 78.73 toks/s, output: 9.89 toks/s]
Processed prompts:   1%|          | 3/526 [00:19<38:02,  4.36s/it, est. speed input: 120.05 toks/s, output: 15.01 toks/s]
Processed prompts:   1%|          | 4/526 [00:19<24:29,  2.81s/it, est. speed input: 151.41 toks/s, output: 20.15 toks/s]
Processed prompts:   1%|          | 5/526 [00:19<16:29,  1.90s/it, est. speed input: 198.60 toks/s, output: 25.46 toks/s]
Processed prompts:   1%|▏         | 7/526 [00:20<08:54,  1.03s/it, est. speed input: 262.08 toks/s, output: 36.28 toks/s]
Processed prompts:   2%|▏         | 8/526 [00:20<07:00,  1.23it/s, est. speed input: 335.81 toks/s, output: 41.74 toks/s]
Processed prompts:   2%|▏         | 11/526 [00:20<03:40,  2.34it/s, est. speed input: 488.00 toks/s, output: 58.64 toks/s]
Processed prompts:   2%|▏         | 13/526 [00:20<02:49,  3.02it/s, est. speed input: 553.16 toks/s, output: 69.64 toks/s]
Processed prompts:   3%|▎         | 16/526 [00:21<01:50,  4.60it/s, est. speed input: 639.64 toks/s, output: 86.83 toks/s]
Processed prompts:   3%|▎         | 17/526 [00:21<01:56,  4.37it/s, est. speed input: 710.88 toks/s, output: 91.68 toks/s]
Processed prompts:   4%|▍         | 21/526 [00:21<01:11,  7.03it/s, est. speed input: 891.58 toks/s, output: 114.71 toks/s]
Processed prompts:   4%|▍         | 23/526 [00:21<01:10,  7.16it/s, est. speed input: 944.03 toks/s, output: 125.29 toks/s]
Processed prompts:   5%|▍         | 25/526 [00:22<01:07,  7.47it/s, est. speed input: 1029.81 toks/s, output: 136.06 toks/s]
Processed prompts:   6%|▌         | 30/526 [00:22<00:46, 10.63it/s, est. speed input: 1192.79 toks/s, output: 164.63 toks/s]
Processed prompts:   6%|▋         | 33/526 [00:22<00:44, 10.98it/s, est. speed input: 1277.21 toks/s, output: 180.86 toks/s]
Processed prompts:   7%|▋         | 37/526 [00:22<00:37, 13.10it/s, est. speed input: 1422.95 toks/s, output: 203.29 toks/s]
Processed prompts:   8%|▊         | 40/526 [00:23<00:44, 10.81it/s, est. speed input: 1526.83 toks/s, output: 217.65 toks/s]
Processed prompts:   8%|▊         | 42/526 [00:23<00:45, 10.68it/s, est. speed input: 1585.15 toks/s, output: 227.95 toks/s]
Processed prompts:   9%|▉         | 48/526 [00:23<00:40, 11.81it/s, est. speed input: 1813.05 toks/s, output: 259.36 toks/s]
Processed prompts:  10%|▉         | 50/526 [00:24<00:43, 10.87it/s, est. speed input: 1887.98 toks/s, output: 268.57 toks/s]
Processed prompts:  11%|█         | 58/526 [00:24<00:39, 11.86it/s, est. speed input: 2124.82 toks/s, output: 308.77 toks/s]
Processed prompts:  12%|█▏        | 62/526 [00:25<00:40, 11.59it/s, est. speed input: 2263.28 toks/s, output: 327.54 toks/s]
Processed prompts:  13%|█▎        | 66/526 [00:25<00:40, 11.28it/s, est. speed input: 2354.99 toks/s, output: 345.76 toks/s]
Processed prompts:  13%|█▎        | 69/526 [00:25<00:36, 12.51it/s, est. speed input: 2481.36 toks/s, output: 361.06 toks/s]
Processed prompts:  14%|█▍        | 74/526 [00:26<00:34, 13.15it/s, est. speed input: 2620.11 toks/s, output: 384.95 toks/s]
Processed prompts:  15%|█▌        | 81/526 [00:26<00:29, 15.18it/s, est. speed input: 2829.12 toks/s, output: 419.56 toks/s]
Processed prompts:  16%|█▌        | 85/526 [00:26<00:29, 14.78it/s, est. speed input: 2922.16 toks/s, output: 437.66 toks/s]
Processed prompts:  17%|█▋        | 90/526 [00:26<00:26, 16.38it/s, est. speed input: 3111.81 toks/s, output: 462.18 toks/s]
Processed prompts:  17%|█▋        | 92/526 [00:27<00:27, 15.74it/s, est. speed input: 3163.67 toks/s, output: 470.92 toks/s]
Processed prompts:  18%|█▊        | 95/526 [00:27<00:27, 15.55it/s, est. speed input: 3225.67 toks/s, output: 484.46 toks/s]
Processed prompts:  18%|█▊        | 97/526 [00:27<00:30, 13.90it/s, est. speed input: 3256.70 toks/s, output: 492.08 toks/s]
Processed prompts:  20%|█▉        | 104/526 [00:27<00:28, 14.67it/s, est. speed input: 3451.57 toks/s, output: 523.33 toks/s]
Processed prompts:  20%|██        | 106/526 [00:28<00:31, 13.35it/s, est. speed input: 3498.02 toks/s, output: 530.47 toks/s]
Processed prompts:  21%|██        | 111/526 [00:28<00:29, 14.28it/s, est. speed input: 3610.07 toks/s, output: 552.53 toks/s]
Processed prompts:  22%|██▏       | 114/526 [00:28<00:30, 13.44it/s, est. speed input: 3680.96 toks/s, output: 564.10 toks/s]
Processed prompts:  23%|██▎       | 119/526 [00:28<00:26, 15.25it/s, est. speed input: 3784.38 toks/s, output: 586.88 toks/s]
Processed prompts:  23%|██▎       | 121/526 [00:29<00:27, 14.97it/s, est. speed input: 3835.24 toks/s, output: 595.08 toks/s]
Processed prompts:  23%|██▎       | 123/526 [00:29<00:25, 15.67it/s, est. speed input: 3896.61 toks/s, output: 604.14 toks/s]
Processed prompts:  24%|██▍       | 125/526 [00:29<00:29, 13.60it/s, est. speed input: 3933.77 toks/s, output: 610.86 toks/s]
Processed prompts:  25%|██▍       | 129/526 [00:29<00:35, 11.14it/s, est. speed input: 3996.38 toks/s, output: 623.41 toks/s]
Processed prompts:  25%|██▌       | 132/526 [00:30<00:36, 10.94it/s, est. speed input: 4081.45 toks/s, output: 633.93 toks/s]
Processed prompts:  26%|██▌       | 135/526 [00:30<00:29, 13.04it/s, est. speed input: 4142.30 toks/s, output: 647.80 toks/s]
Processed prompts:  26%|██▌       | 138/526 [00:30<00:31, 12.49it/s, est. speed input: 4219.94 toks/s, output: 658.63 toks/s]
Processed prompts:  27%|██▋       | 141/526 [00:30<00:31, 12.35it/s, est. speed input: 4297.96 toks/s, output: 669.72 toks/s]
Processed prompts:  28%|██▊       | 146/526 [00:31<00:35, 10.65it/s, est. speed input: 4385.94 toks/s, output: 685.01 toks/s]
Processed prompts:  28%|██▊       | 148/526 [00:31<00:33, 11.22it/s, est. speed input: 4456.44 toks/s, output: 692.96 toks/s]
Processed prompts:  29%|██▉       | 154/526 [00:31<00:30, 12.14it/s, est. speed input: 4560.73 toks/s, output: 715.83 toks/s]
Processed prompts:  30%|██▉       | 157/526 [00:32<00:29, 12.34it/s, est. speed input: 4606.38 toks/s, output: 726.97 toks/s]
Processed prompts:  30%|███       | 159/526 [00:32<00:30, 11.97it/s, est. speed input: 4653.98 toks/s, output: 733.56 toks/s]
Processed prompts:  31%|███       | 164/526 [00:32<00:31, 11.49it/s, est. speed input: 4720.18 toks/s, output: 750.25 toks/s]
Processed prompts:  32%|███▏      | 168/526 [00:33<00:28, 12.68it/s, est. speed input: 4781.90 toks/s, output: 766.28 toks/s]
Processed prompts:  33%|███▎      | 172/526 [00:33<00:26, 13.37it/s, est. speed input: 4872.37 toks/s, output: 781.73 toks/s]
Processed prompts:  33%|███▎      | 176/526 [00:33<00:27, 12.71it/s, est. speed input: 4964.86 toks/s, output: 795.05 toks/s]
Processed prompts:  34%|███▍      | 179/526 [00:33<00:26, 13.14it/s, est. speed input: 5011.26 toks/s, output: 806.40 toks/s]
Processed prompts:  35%|███▍      | 182/526 [00:34<00:29, 11.58it/s, est. speed input: 5046.51 toks/s, output: 814.31 toks/s]
Processed prompts:  35%|███▌      | 186/526 [00:34<00:29, 11.47it/s, est. speed input: 5129.29 toks/s, output: 827.26 toks/s]
Processed prompts:  36%|███▌      | 189/526 [00:34<00:32, 10.26it/s, est. speed input: 5157.84 toks/s, output: 834.18 toks/s]
Processed prompts:  37%|███▋      | 192/526 [00:35<00:29, 11.32it/s, est. speed input: 5200.35 toks/s, output: 845.53 toks/s]
Processed prompts:  37%|███▋      | 194/526 [00:35<00:33,  9.95it/s, est. speed input: 5241.37 toks/s, output: 849.10 toks/s]
Processed prompts:  37%|███▋      | 196/526 [00:35<00:35,  9.29it/s, est. speed input: 5253.88 toks/s, output: 853.50 toks/s]
Processed prompts:  38%|███▊      | 200/526 [00:35<00:29, 11.06it/s, est. speed input: 5380.17 toks/s, output: 868.71 toks/s]
Processed prompts:  39%|███▉      | 204/526 [00:36<00:30, 10.52it/s, est. speed input: 5401.81 toks/s, output: 879.97 toks/s]
Processed prompts:  39%|███▉      | 206/526 [00:36<00:35,  8.97it/s, est. speed input: 5401.02 toks/s, output: 882.16 toks/s]
Processed prompts:  40%|███▉      | 208/526 [00:36<00:33,  9.60it/s, est. speed input: 5462.17 toks/s, output: 888.98 toks/s]
Processed prompts:  40%|███▉      | 210/526 [00:37<00:37,  8.32it/s, est. speed input: 5489.24 toks/s, output: 891.47 toks/s]
Processed prompts:  40%|████      | 212/526 [00:37<00:39,  7.92it/s, est. speed input: 5485.48 toks/s, output: 895.31 toks/s]
Processed prompts:  41%|████      | 214/526 [00:37<00:38,  8.13it/s, est. speed input: 5524.24 toks/s, output: 900.61 toks/s]
Processed prompts:  42%|████▏     | 219/526 [00:38<00:32,  9.36it/s, est. speed input: 5613.11 toks/s, output: 916.74 toks/s]
Processed prompts:  42%|████▏     | 222/526 [00:38<00:34,  8.93it/s, est. speed input: 5642.09 toks/s, output: 924.03 toks/s]
Processed prompts:  43%|████▎     | 226/526 [00:38<00:31,  9.38it/s, est. speed input: 5704.20 toks/s, output: 936.40 toks/s]
Processed prompts:  43%|████▎     | 227/526 [00:39<00:35,  8.49it/s, est. speed input: 5696.04 toks/s, output: 936.99 toks/s]
Processed prompts:  44%|████▎     | 229/526 [00:39<00:31,  9.44it/s, est. speed input: 5724.81 toks/s, output: 944.58 toks/s]
Processed prompts:  44%|████▎     | 230/526 [00:39<00:36,  8.22it/s, est. speed input: 5726.98 toks/s, output: 945.02 toks/s]
Processed prompts:  44%|████▍     | 232/526 [00:39<00:35,  8.25it/s, est. speed input: 5747.93 toks/s, output: 950.31 toks/s]
Processed prompts:  44%|████▍     | 234/526 [00:39<00:30,  9.48it/s, est. speed input: 5801.35 toks/s, output: 958.03 toks/s]
Processed prompts:  45%|████▍     | 236/526 [00:40<00:30,  9.64it/s, est. speed input: 5817.33 toks/s, output: 964.27 toks/s]
Processed prompts:  45%|████▌     | 238/526 [00:40<00:46,  6.15it/s, est. speed input: 5780.38 toks/s, output: 961.26 toks/s]
Processed prompts:  45%|████▌     | 239/526 [00:40<00:46,  6.15it/s, est. speed input: 5822.14 toks/s, output: 963.16 toks/s]
Processed prompts:  46%|████▌     | 240/526 [00:41<00:46,  6.16it/s, est. speed input: 5861.12 toks/s, output: 965.13 toks/s]
Processed prompts:  46%|████▌     | 241/526 [00:41<00:54,  5.27it/s, est. speed input: 5848.40 toks/s, output: 964.26 toks/s]
Processed prompts:  46%|████▌     | 243/526 [00:41<01:09,  4.05it/s, est. speed input: 5796.74 toks/s, output: 957.32 toks/s]
Processed prompts:  46%|████▋     | 244/526 [00:42<01:07,  4.19it/s, est. speed input: 5783.76 toks/s, output: 955.44 toks/s]
Processed prompts:  47%|████▋     | 245/526 [00:42<01:13,  3.80it/s, est. speed input: 5758.00 toks/s, output: 950.44 toks/s]
Processed prompts:  47%|████▋     | 247/526 [00:42<00:56,  4.92it/s, est. speed input: 5772.78 toks/s, output: 954.59 toks/s]
Processed prompts:  47%|████▋     | 248/526 [00:42<00:57,  4.87it/s, est. speed input: 5760.88 toks/s, output: 953.26 toks/s]
Processed prompts:  48%|████▊     | 252/526 [00:43<00:37,  7.35it/s, est. speed input: 5805.27 toks/s, output: 957.84 toks/s]
Processed prompts:  48%|████▊     | 253/526 [00:43<00:38,  7.03it/s, est. speed input: 5801.35 toks/s, output: 957.26 toks/s]
Processed prompts:  49%|████▊     | 256/526 [00:43<00:31,  8.54it/s, est. speed input: 5849.12 toks/s, output: 961.05 toks/s]
Processed prompts:  49%|████▉     | 257/526 [00:43<00:32,  8.19it/s, est. speed input: 5844.40 toks/s, output: 961.01 toks/s]
Processed prompts:  49%|████▉     | 260/526 [00:44<00:34,  7.76it/s, est. speed input: 5838.21 toks/s, output: 961.48 toks/s]
Processed prompts:  50%|████▉     | 261/526 [00:44<00:35,  7.40it/s, est. speed input: 5848.23 toks/s, output: 960.27 toks/s]
Processed prompts:  50%|████▉     | 262/526 [00:44<00:34,  7.73it/s, est. speed input: 5854.11 toks/s, output: 961.29 toks/s]
Processed prompts:  50%|█████     | 263/526 [00:44<00:39,  6.72it/s, est. speed input: 5863.18 toks/s, output: 960.00 toks/s]
Processed prompts:  50%|█████     | 265/526 [00:44<00:34,  7.56it/s, est. speed input: 5880.66 toks/s, output: 961.97 toks/s]
Processed prompts:  51%|█████     | 266/526 [00:45<00:33,  7.70it/s, est. speed input: 5881.27 toks/s, output: 962.50 toks/s]
Processed prompts:  51%|█████     | 267/526 [00:45<00:35,  7.36it/s, est. speed input: 5891.55 toks/s, output: 961.95 toks/s]
Processed prompts:  51%|█████     | 268/526 [00:45<01:10,  3.65it/s, est. speed input: 5818.78 toks/s, output: 950.71 toks/s]
Processed prompts:  52%|█████▏    | 273/526 [00:46<00:34,  7.26it/s, est. speed input: 5908.13 toks/s, output: 960.70 toks/s]
Processed prompts:  52%|█████▏    | 276/526 [00:46<00:26,  9.52it/s, est. speed input: 5942.41 toks/s, output: 970.18 toks/s]
Processed prompts:  53%|█████▎    | 279/526 [00:46<00:20, 11.78it/s, est. speed input: 5986.48 toks/s, output: 979.39 toks/s]
Processed prompts:  54%|█████▍    | 286/526 [00:46<00:12, 19.88it/s, est. speed input: 6117.35 toks/s, output: 1001.13 toks/s]
Processed prompts:  55%|█████▍    | 289/526 [00:46<00:11, 20.46it/s, est. speed input: 6171.30 toks/s, output: 1009.48 toks/s]
Processed prompts:  56%|█████▋    | 296/526 [00:46<00:08, 28.22it/s, est. speed input: 6274.87 toks/s, output: 1028.17 toks/s]
Processed prompts:  58%|█████▊    | 303/526 [00:47<00:06, 34.64it/s, est. speed input: 6418.34 toks/s, output: 1049.36 toks/s]
Processed prompts:  60%|█████▉    | 315/526 [00:47<00:04, 50.10it/s, est. speed input: 6772.98 toks/s, output: 1086.15 toks/s]
Processed prompts:  61%|██████    | 321/526 [00:47<00:04, 49.62it/s, est. speed input: 6887.67 toks/s, output: 1104.33 toks/s]
Processed prompts:  63%|██████▎   | 332/526 [00:47<00:03, 60.70it/s, est. speed input: 7101.13 toks/s, output: 1137.19 toks/s]
Processed prompts:  64%|██████▍   | 339/526 [00:47<00:03, 55.28it/s, est. speed input: 7357.70 toks/s, output: 1165.52 toks/s]
Processed prompts:  66%|██████▋   | 349/526 [00:47<00:02, 63.99it/s, est. speed input: 7580.36 toks/s, output: 1197.70 toks/s]
Processed prompts:  68%|██████▊   | 356/526 [00:47<00:02, 64.36it/s, est. speed input: 7801.26 toks/s, output: 1218.72 toks/s]
Processed prompts:  69%|██████▉   | 363/526 [00:47<00:02, 65.33it/s, est. speed input: 7976.56 toks/s, output: 1240.09 toks/s]
Processed prompts:  70%|███████   | 370/526 [00:48<00:02, 66.41it/s, est. speed input: 8100.13 toks/s, output: 1261.86 toks/s]
Processed prompts:  73%|███████▎  | 384/526 [00:48<00:01, 79.86it/s, est. speed input: 8406.71 toks/s, output: 1308.38 toks/s]
Processed prompts:  75%|███████▌  | 395/526 [00:48<00:01, 82.14it/s, est. speed input: 8597.36 toks/s, output: 1345.57 toks/s]
Processed prompts:  77%|███████▋  | 404/526 [00:48<00:01, 75.49it/s, est. speed input: 8775.82 toks/s, output: 1376.44 toks/s]
Processed prompts:  78%|███████▊  | 412/526 [00:48<00:01, 66.86it/s, est. speed input: 8926.65 toks/s, output: 1404.01 toks/s]
Processed prompts:  80%|███████▉  | 419/526 [00:48<00:01, 54.05it/s, est. speed input: 9053.01 toks/s, output: 1426.87 toks/s]
Processed prompts:  81%|████████▏ | 428/526 [00:48<00:01, 58.78it/s, est. speed input: 9264.33 toks/s, output: 1460.20 toks/s]
Processed prompts:  83%|████████▎ | 437/526 [00:49<00:01, 63.09it/s, est. speed input: 9438.57 toks/s, output: 1492.76 toks/s]
Processed prompts:  85%|████████▌ | 448/526 [00:49<00:01, 71.70it/s, est. speed input: 9669.70 toks/s, output: 1531.35 toks/s]
Processed prompts:  87%|████████▋ | 456/526 [00:49<00:00, 72.01it/s, est. speed input: 9871.86 toks/s, output: 1559.99 toks/s]
Processed prompts:  88%|████████▊ | 464/526 [00:49<00:00, 63.06it/s, est. speed input: 10029.90 toks/s, output: 1583.68 toks/s]
Processed prompts:  90%|████████▉ | 471/526 [00:49<00:00, 56.86it/s, est. speed input: 10155.29 toks/s, output: 1604.95 toks/s]
Processed prompts:  91%|█████████ | 477/526 [00:49<00:01, 41.63it/s, est. speed input: 10229.04 toks/s, output: 1617.48 toks/s]
Processed prompts:  92%|█████████▏| 482/526 [00:50<00:01, 35.10it/s, est. speed input: 10300.82 toks/s, output: 1634.71 toks/s]
Processed prompts:  93%|█████████▎| 487/526 [00:50<00:01, 36.09it/s, est. speed input: 10417.39 toks/s, output: 1649.33 toks/s]
Processed prompts:  94%|█████████▎| 493/526 [00:50<00:00, 40.69it/s, est. speed input: 10528.15 toks/s, output: 1668.74 toks/s]
Processed prompts:  95%|█████████▍| 498/526 [00:50<00:00, 31.19it/s, est. speed input: 10625.07 toks/s, output: 1688.10 toks/s]
Processed prompts:  95%|█████████▌| 502/526 [00:50<00:00, 31.72it/s, est. speed input: 10722.26 toks/s, output: 1702.08 toks/s]
Processed prompts:  96%|█████████▌| 506/526 [00:50<00:00, 33.28it/s, est. speed input: 10789.50 toks/s, output: 1716.54 toks/s]
Processed prompts:  97%|█████████▋| 511/526 [00:50<00:00, 36.05it/s, est. speed input: 10894.70 toks/s, output: 1737.05 toks/s]
Processed prompts:  98%|█████████▊| 515/526 [00:51<00:00, 25.12it/s, est. speed input: 10942.04 toks/s, output: 1751.36 toks/s]
Processed prompts:  99%|█████████▊| 519/526 [00:51<00:00, 14.28it/s, est. speed input: 10928.43 toks/s, output: 1752.48 toks/s]
Processed prompts:  99%|█████████▉| 522/526 [00:52<00:00, 11.43it/s, est. speed input: 10948.29 toks/s, output: 1760.52 toks/s]
Processed prompts: 100%|█████████▉| 524/526 [00:53<00:00,  6.51it/s, est. speed input: 10797.57 toks/s, output: 1745.58 toks/s]
Processed prompts: 100%|██████████| 526/526 [00:54<00:00,  4.23it/s, est. speed input: 10629.41 toks/s, output: 1725.79 toks/s]
Processed prompts: 100%|██████████| 526/526 [00:54<00:00,  9.69it/s, est. speed input: 10629.41 toks/s, output: 1725.79 toks/s]
{  "personalized_answer": "It sounds like you're dealing with a challenging situation where some of your teammates are not only unappreciative but also actively trying to undermine your efforts. Here are some steps you can take to address this issue:\n\n1. **Document Specific Incidents:** Keep a record of instances where your teammates have intentionally tried to hold you back or brought you down. This will help you present a clear and factual case when you need to discuss the issue.\n\n2. **Communicate Your Feelings:** Schedule a private meeting with the individuals involved to discuss your feelings. Use "I" statements to express how their actions make you feel, such as 'I feel disrespected when...'. Avoid blaming or accusing language to keep the conversation constructive.\n\n3. **Seek Support from Management:** If the behavior continues, consider speaking to your manager or HR about the situation. Provide them with the documented evidence and express your concerns. They can help mediate the situation and ensure that everyone is held accountable for their behavior.\n\n4. **Set Clear Boundaries:** Clearly communicate your boundaries and expectations. Let them know that you are willing to help, but you need to be recognized for your efforts and that you cannot continue to go the extra mile without acknowledgment.\n\n5. **Focus on Your Goals:** Continue to focus on your goals and the positive impact you are making. Surround yourself with supportive colleagues and seek out mentors or allies who can provide encouragement and guidance.\n\n6. **Professional Development:** Consider taking courses or workshops to improve your skills and confidence. This can help you feel more empowered and less vulnerable to negative behavior from others.\n\nBy taking these steps, you can address the issue in a professional manner and work towards a more positive and supportive work environment."}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.33s/it, est. speed input: 462.33 toks/s, output: 82.91 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.33s/it, est. speed input: 462.33 toks/s, output: 82.91 toks/s]
{  "personalized_answer": "It sounds like you're dealing with a challenging situation where some of your teammates are not only unappreciative but also actively trying to undermine your efforts. Here are some steps you can take to address this issue:\n\n1. **Document Specific Incidents:** Keep a record of instances where your teammates have intentionally held you back or brought you down. This will help you provide concrete examples when you need to discuss the issue.\n\n2. **Schedule a Private Meeting:** Request a one-on-one meeting with the individuals involved to discuss your concerns. Approach the conversation with a focus on understanding their perspective and expressing your own feelings.\n\n3. **Be Clear and Direct:** When discussing the issue, be clear and direct about how their behavior is affecting you and the team. Use "I" statements to express your feelings, such as 'I feel frustrated when...'\n\n4. **Seek Support from Management:** If the behavior continues, consider involving your manager or HR. Provide them with the documented incidents and express your concerns. They can help mediate the situation and ensure that everyone is working in a positive and supportive environment.\n\n5. **Focus on Team Goals:** Emphasize the importance of teamwork and how everyone's contributions are crucial for the success of the team. Encourage a culture of mutual support and recognition.\n\n6. **Set Boundaries:** Clearly communicate your boundaries and what you are and are not willing to do. If someone consistently tries to hold you back, it might be necessary to set firm limits on how much you can help.\n\nBy taking these steps, you can address the issue in a constructive manner and work towards a more positive and supportive team environment."}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.75s/it, est. speed input: 421.18 toks/s, output: 83.10 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.75s/it, est. speed input: 421.18 toks/s, output: 83.10 toks/s]
{  "personalized_answer": "It sounds like you're dealing with a challenging situation where some of your teammates are not only unappreciative of your efforts but are also actively trying to undermine your progress. Here are some steps you can take to address this issue:\n\n1. **Document Specific Incidents:** Keep a record of instances where your teammates have intentionally tried to hold you back. This will help you present a clear and factual case when you need to address the issue.\n\n2. **Communicate Your Feelings:** Schedule a private meeting with the individuals involved to discuss your feelings. Be specific about the behaviors that are causing you distress and how they are impacting your work. Use "I" statements to express your feelings without blaming them.\n\n3. **Seek Support from Your Manager:** If the issue persists, consider speaking to your manager about the situation. Provide them with the documented evidence and express your concerns. Ask for their guidance on how to handle the situation and ensure that your contributions are recognized.\n\n4. **Set Boundaries:** Clearly communicate your boundaries and expectations. Let them know that you are willing to help, but you need their support and respect to do so. For example, you could say, 'I am committed to helping, but I need your support and respect to do so effectively.'\n\n5. **Focus on Your Goals:** Continue to focus on your goals and the value you bring to the team. Highlight your achievements and the positive impact you have on the team's success. This will help you maintain your motivation and confidence.\n\n6. **Consider Team Dynamics:** Reflect on the overall team dynamics. If the issue is widespread, it might be worth discussing with your manager to see if there are underlying issues that need to be addressed.\n\nBy taking these steps, you can address the situation more effectively and ensure that your contributions are recognized and valued."}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.75s/it, est. speed input: 421.40 toks/s, output: 82.93 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:04<00:00,  4.75s/it, est. speed input: 421.40 toks/s, output: 82.93 toks/s]
[rank0]:[W709 14:39:24.686092805 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/full_profile/lp_rag_full_profile_test_4_output.json
Cleaned temporary files.
Keeping ['ae', 'lp', 'sc'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:39:27.695755_sc_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:39:27.695755_sc_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:39:27.695755_sc_processed_test.json', '--batch_size', '4']

  0%|          | 0/424 [00:00<?, ?it/s]
  0%|          | 1/424 [00:00<03:02,  2.32it/s]
  0%|          | 2/424 [00:01<05:06,  1.38it/s]
  1%|          | 3/424 [00:01<03:06,  2.26it/s]
  1%|          | 4/424 [00:03<06:31,  1.07it/s]
  1%|          | 5/424 [00:03<04:49,  1.44it/s]
  2%|▏         | 7/424 [00:04<04:07,  1.68it/s]
  2%|▏         | 8/424 [00:05<04:10,  1.66it/s]
  2%|▏         | 9/424 [00:05<03:15,  2.13it/s]
  2%|▏         | 10/424 [00:05<02:52,  2.40it/s]
  3%|▎         | 11/424 [00:05<02:19,  2.95it/s]
  3%|▎         | 12/424 [00:05<02:14,  3.05it/s]
  3%|▎         | 13/424 [00:07<05:10,  1.32it/s]
  3%|▎         | 14/424 [00:07<03:59,  1.71it/s]
  4%|▎         | 15/424 [00:08<03:14,  2.10it/s]
  4%|▍         | 16/424 [00:08<03:26,  1.97it/s]
  4%|▍         | 17/424 [00:08<02:57,  2.29it/s]
  4%|▍         | 18/424 [00:09<02:33,  2.65it/s]
  4%|▍         | 19/424 [00:09<02:59,  2.25it/s]
  5%|▍         | 20/424 [00:09<02:26,  2.76it/s]
  5%|▍         | 21/424 [00:10<01:59,  3.38it/s]
  5%|▌         | 22/424 [00:10<02:39,  2.52it/s]
  5%|▌         | 23/424 [00:12<04:48,  1.39it/s]
  6%|▌         | 24/424 [00:12<04:35,  1.45it/s]
  6%|▌         | 25/424 [00:13<05:03,  1.32it/s]
  6%|▌         | 26/424 [00:14<04:45,  1.40it/s]
  6%|▋         | 27/424 [00:16<06:38,  1.00s/it]
  7%|▋         | 28/424 [00:16<05:51,  1.13it/s]
  7%|▋         | 29/424 [00:16<04:37,  1.43it/s]
  7%|▋         | 30/424 [00:17<03:35,  1.83it/s]
  7%|▋         | 31/424 [00:17<03:41,  1.77it/s]
  8%|▊         | 33/424 [00:17<02:11,  2.97it/s]
  8%|▊         | 34/424 [00:18<02:03,  3.15it/s]
  8%|▊         | 36/424 [00:18<01:22,  4.70it/s]
  9%|▊         | 37/424 [00:18<02:09,  2.99it/s]
  9%|▉         | 38/424 [00:19<02:03,  3.12it/s]
  9%|▉         | 40/424 [00:19<01:33,  4.11it/s]
 10%|▉         | 41/424 [00:19<01:33,  4.11it/s]
 10%|▉         | 42/424 [00:20<02:08,  2.98it/s]
 10%|█         | 43/424 [00:20<01:48,  3.50it/s]
 10%|█         | 44/424 [00:22<04:07,  1.53it/s]
 11%|█         | 45/424 [00:22<04:02,  1.56it/s]
 11%|█         | 46/424 [00:23<03:21,  1.87it/s]
 11%|█         | 47/424 [00:23<03:28,  1.81it/s]
 11%|█▏        | 48/424 [00:24<03:36,  1.74it/s]
 12%|█▏        | 49/424 [00:24<03:38,  1.72it/s]
 12%|█▏        | 51/424 [00:25<02:53,  2.15it/s]
 12%|█▏        | 52/424 [00:25<02:52,  2.15it/s]
 12%|█▎        | 53/424 [00:26<03:04,  2.01it/s]
 13%|█▎        | 54/424 [00:27<03:43,  1.66it/s]
 13%|█▎        | 55/424 [00:27<03:07,  1.96it/s]
 13%|█▎        | 56/424 [00:28<03:17,  1.87it/s]
 14%|█▎        | 58/424 [00:28<01:58,  3.08it/s]
 14%|█▍        | 59/424 [00:30<03:57,  1.54it/s]
 15%|█▍        | 62/424 [00:33<05:14,  1.15it/s]
 15%|█▍        | 63/424 [00:33<04:56,  1.22it/s]
 15%|█▌        | 64/424 [00:34<04:12,  1.43it/s]
 15%|█▌        | 65/424 [00:34<03:20,  1.79it/s]
 16%|█▌        | 66/424 [00:35<04:59,  1.20it/s]
 16%|█▌        | 67/424 [00:36<03:58,  1.49it/s]
 16%|█▌        | 68/424 [00:36<03:47,  1.56it/s]
 16%|█▋        | 69/424 [00:38<05:26,  1.09it/s]
 17%|█▋        | 70/424 [00:38<04:26,  1.33it/s]
 17%|█▋        | 71/424 [00:39<03:44,  1.57it/s]
 17%|█▋        | 72/424 [00:39<03:13,  1.82it/s]
 17%|█▋        | 73/424 [00:39<02:51,  2.05it/s]
 17%|█▋        | 74/424 [00:40<02:34,  2.27it/s]
 18%|█▊        | 75/424 [00:42<05:17,  1.10it/s]
 18%|█▊        | 77/424 [00:42<03:21,  1.72it/s]
 18%|█▊        | 78/424 [00:42<02:42,  2.13it/s]
 19%|█▉        | 80/424 [00:42<01:48,  3.16it/s]
 19%|█▉        | 81/424 [00:43<02:28,  2.31it/s]
 19%|█▉        | 82/424 [00:44<02:57,  1.92it/s]
 20%|█▉        | 83/424 [00:45<03:37,  1.57it/s]
 20%|█▉        | 84/424 [00:45<02:47,  2.03it/s]
 20%|██        | 85/424 [00:46<03:34,  1.58it/s]
 20%|██        | 86/424 [00:47<03:54,  1.44it/s]
 21%|██        | 87/424 [00:48<04:21,  1.29it/s]
 21%|██        | 88/424 [00:48<03:40,  1.53it/s]
 21%|██        | 89/424 [00:49<04:11,  1.33it/s]
 21%|██        | 90/424 [00:49<03:14,  1.72it/s]
 21%|██▏       | 91/424 [00:50<03:56,  1.41it/s]
 22%|██▏       | 92/424 [00:51<04:22,  1.26it/s]
 22%|██▏       | 93/424 [00:52<04:03,  1.36it/s]
 22%|██▏       | 94/424 [00:53<04:25,  1.24it/s]
 22%|██▏       | 95/424 [00:53<03:17,  1.66it/s]
 23%|██▎       | 96/424 [00:53<02:50,  1.92it/s]
 23%|██▎       | 98/424 [00:54<01:44,  3.12it/s]
 23%|██▎       | 99/424 [00:54<01:30,  3.58it/s]
 24%|██▎       | 100/424 [00:54<01:54,  2.82it/s]
 24%|██▍       | 101/424 [00:56<03:20,  1.61it/s]
 24%|██▍       | 102/424 [00:56<02:49,  1.90it/s]
 24%|██▍       | 103/424 [00:56<02:21,  2.26it/s]
 25%|██▍       | 104/424 [00:56<01:56,  2.74it/s]
 25%|██▍       | 105/424 [00:57<02:23,  2.23it/s]
 25%|██▌       | 106/424 [00:57<01:51,  2.85it/s]
 25%|██▌       | 107/424 [00:58<02:19,  2.27it/s]
 26%|██▌       | 109/424 [01:01<05:24,  1.03s/it]
 26%|██▌       | 110/424 [01:03<06:12,  1.19s/it]
 26%|██▌       | 111/424 [01:03<05:17,  1.01s/it]
 26%|██▋       | 112/424 [01:03<04:00,  1.30it/s]
 27%|██▋       | 114/424 [01:04<02:23,  2.16it/s]
 27%|██▋       | 116/424 [01:04<01:40,  3.07it/s]
 28%|██▊       | 118/424 [01:04<01:18,  3.89it/s]
 28%|██▊       | 119/424 [01:04<01:14,  4.11it/s]
 29%|██▊       | 121/424 [01:05<01:00,  4.99it/s]
 29%|██▉       | 122/424 [01:11<07:43,  1.53s/it]
 29%|██▉       | 123/424 [01:18<13:44,  2.74s/it]
 29%|██▉       | 124/424 [01:25<18:43,  3.75s/it]
 29%|██▉       | 125/424 [01:32<22:37,  4.54s/it]
 30%|██▉       | 126/424 [01:39<25:45,  5.18s/it]
 30%|██▉       | 127/424 [01:45<28:00,  5.66s/it]
 30%|███       | 128/424 [01:46<21:19,  4.32s/it]
 30%|███       | 129/424 [01:47<16:24,  3.34s/it]
 31%|███       | 130/424 [01:48<12:51,  2.63s/it]
 31%|███       | 131/424 [01:49<10:25,  2.14s/it]
 31%|███       | 132/424 [01:50<07:59,  1.64s/it]
 31%|███▏      | 133/424 [01:50<06:32,  1.35s/it]
 32%|███▏      | 134/424 [01:50<04:44,  1.02it/s]
 32%|███▏      | 135/424 [01:51<03:34,  1.35it/s]
 32%|███▏      | 136/424 [01:51<02:45,  1.74it/s]
 32%|███▏      | 137/424 [01:51<02:11,  2.18it/s]
 33%|███▎      | 138/424 [01:51<01:46,  2.67it/s]
 33%|███▎      | 139/424 [01:51<01:29,  3.17it/s]
 33%|███▎      | 140/424 [01:51<01:12,  3.92it/s]
 33%|███▎      | 141/424 [01:52<01:05,  4.34it/s]
 33%|███▎      | 142/424 [01:52<01:01,  4.59it/s]
 34%|███▎      | 143/424 [01:52<00:58,  4.81it/s]
 34%|███▍      | 144/424 [01:52<00:56,  4.98it/s]
 34%|███▍      | 145/424 [01:52<00:53,  5.23it/s]
 34%|███▍      | 146/424 [01:53<00:51,  5.37it/s]
 35%|███▍      | 147/424 [01:53<00:51,  5.43it/s]
 35%|███▍      | 148/424 [01:53<00:50,  5.45it/s]
 35%|███▌      | 149/424 [01:53<00:50,  5.47it/s]
 35%|███▌      | 150/424 [01:53<00:50,  5.45it/s]
 36%|███▌      | 151/424 [01:53<00:50,  5.42it/s]
 36%|███▌      | 152/424 [01:54<00:49,  5.47it/s]
 36%|███▌      | 153/424 [01:54<00:49,  5.49it/s]
 36%|███▋      | 154/424 [01:54<00:48,  5.52it/s]
 37%|███▋      | 155/424 [01:54<00:48,  5.54it/s]
 37%|███▋      | 156/424 [01:54<00:48,  5.52it/s]
 37%|███▋      | 157/424 [01:54<00:48,  5.52it/s]
 37%|███▋      | 158/424 [01:55<00:48,  5.50it/s]
 38%|███▊      | 159/424 [01:55<00:48,  5.48it/s]
 38%|███▊      | 160/424 [01:57<02:59,  1.47it/s]
 38%|███▊      | 161/424 [01:57<02:19,  1.89it/s]
 38%|███▊      | 162/424 [01:57<01:52,  2.34it/s]
 38%|███▊      | 163/424 [01:57<01:31,  2.84it/s]
 39%|███▊      | 164/424 [01:57<01:18,  3.30it/s]
 39%|███▉      | 165/424 [01:58<01:08,  3.76it/s]
 39%|███▉      | 166/424 [01:58<00:57,  4.51it/s]
 39%|███▉      | 167/424 [01:58<00:54,  4.73it/s]
 40%|███▉      | 168/424 [01:58<01:01,  4.17it/s]
 40%|███▉      | 169/424 [01:59<01:08,  3.70it/s]
 40%|████      | 170/424 [01:59<01:11,  3.53it/s]
 40%|████      | 171/424 [01:59<01:22,  3.06it/s]
 41%|████      | 172/424 [01:59<01:07,  3.75it/s]
 41%|████      | 174/424 [02:00<01:27,  2.84it/s]
 41%|████▏     | 175/424 [02:00<01:12,  3.43it/s]
 42%|████▏     | 176/424 [02:01<01:03,  3.89it/s]
 42%|████▏     | 177/424 [02:01<00:56,  4.36it/s]
 42%|████▏     | 178/424 [02:01<01:00,  4.04it/s]
 42%|████▏     | 179/424 [02:01<01:00,  4.06it/s]
 42%|████▏     | 180/424 [02:02<01:10,  3.48it/s]
 43%|████▎     | 181/424 [02:02<01:00,  4.05it/s]
 43%|████▎     | 182/424 [02:02<00:57,  4.20it/s]
 43%|████▎     | 183/424 [02:02<00:56,  4.26it/s]
 43%|████▎     | 184/424 [02:03<01:18,  3.07it/s]
 44%|████▎     | 185/424 [02:03<01:39,  2.41it/s]
 44%|████▍     | 186/424 [02:04<01:43,  2.31it/s]
 44%|████▍     | 187/424 [02:04<01:37,  2.43it/s]
 44%|████▍     | 188/424 [02:05<01:35,  2.47it/s]
 45%|████▍     | 189/424 [02:06<02:59,  1.31it/s]
 45%|████▍     | 190/424 [02:10<06:54,  1.77s/it]
 45%|████▌     | 191/424 [02:11<05:15,  1.36s/it]
 45%|████▌     | 192/424 [02:12<05:35,  1.45s/it]
 46%|████▌     | 194/424 [02:13<03:23,  1.13it/s]
 46%|████▌     | 196/424 [02:14<02:28,  1.53it/s]
 46%|████▋     | 197/424 [02:14<02:09,  1.76it/s]
 47%|████▋     | 198/424 [02:14<01:48,  2.08it/s]
 47%|████▋     | 199/424 [02:15<02:04,  1.81it/s]
 47%|████▋     | 200/424 [02:15<01:42,  2.18it/s]
 47%|████▋     | 201/424 [02:17<02:54,  1.28it/s]
 48%|████▊     | 202/424 [02:17<02:16,  1.63it/s]
 48%|████▊     | 203/424 [02:18<03:24,  1.08it/s]
 48%|████▊     | 204/424 [02:22<05:46,  1.57s/it]
 48%|████▊     | 205/424 [02:22<04:37,  1.27s/it]
 49%|████▊     | 206/424 [02:25<06:32,  1.80s/it]
 49%|████▉     | 207/424 [02:25<04:52,  1.35s/it]
 49%|████▉     | 208/424 [02:26<03:45,  1.04s/it]
 49%|████▉     | 209/424 [02:26<02:48,  1.27it/s]
 50%|████▉     | 210/424 [02:26<02:17,  1.56it/s]
 50%|█████     | 212/424 [02:26<01:21,  2.61it/s]
 50%|█████     | 213/424 [02:27<01:28,  2.38it/s]
 50%|█████     | 214/424 [02:28<01:35,  2.19it/s]
 51%|█████     | 215/424 [02:28<01:57,  1.78it/s]
 51%|█████     | 216/424 [02:29<01:33,  2.23it/s]
 51%|█████     | 217/424 [02:29<01:18,  2.64it/s]
 51%|█████▏    | 218/424 [02:29<01:12,  2.85it/s]
 52%|█████▏    | 219/424 [02:29<01:06,  3.08it/s]
 52%|█████▏    | 220/424 [02:30<01:36,  2.10it/s]
 52%|█████▏    | 221/424 [02:30<01:26,  2.35it/s]
 52%|█████▏    | 222/424 [02:31<01:19,  2.54it/s]
 53%|█████▎    | 223/424 [02:31<01:11,  2.79it/s]
 53%|█████▎    | 224/424 [02:31<01:08,  2.91it/s]
 53%|█████▎    | 225/424 [02:33<02:21,  1.40it/s]
 54%|█████▎    | 227/424 [02:33<01:32,  2.14it/s]
 54%|█████▍    | 229/424 [02:33<01:02,  3.11it/s]
 54%|█████▍    | 230/424 [02:37<03:05,  1.04it/s]
 54%|█████▍    | 231/424 [02:37<02:45,  1.17it/s]
 55%|█████▍    | 232/424 [02:37<02:07,  1.51it/s]
 55%|█████▍    | 233/424 [02:39<02:57,  1.08it/s]
 55%|█████▌    | 234/424 [02:46<08:14,  2.60s/it]
 55%|█████▌    | 235/424 [02:47<06:36,  2.10s/it]
 56%|█████▌    | 236/424 [02:47<05:00,  1.60s/it]
 56%|█████▌    | 238/424 [02:47<02:49,  1.10it/s]
 57%|█████▋    | 240/424 [02:49<02:44,  1.12it/s]
 57%|█████▋    | 241/424 [02:50<02:41,  1.14it/s]
 57%|█████▋    | 242/424 [02:50<02:08,  1.42it/s]
 57%|█████▋    | 243/424 [02:50<01:52,  1.61it/s]
 58%|█████▊    | 244/424 [02:51<01:53,  1.58it/s]
 58%|█████▊    | 245/424 [02:51<01:28,  2.03it/s]
 58%|█████▊    | 246/424 [02:51<01:18,  2.26it/s]
 58%|█████▊    | 247/424 [02:53<02:20,  1.26it/s]
 58%|█████▊    | 248/424 [02:53<01:44,  1.68it/s]
 59%|█████▊    | 249/424 [02:53<01:19,  2.21it/s]
 59%|█████▉    | 250/424 [02:54<01:29,  1.94it/s]
 59%|█████▉    | 251/424 [02:54<01:11,  2.42it/s]
 59%|█████▉    | 252/424 [02:54<00:55,  3.09it/s]
 60%|█████▉    | 253/424 [02:54<00:44,  3.83it/s]
 60%|█████▉    | 254/424 [02:55<00:36,  4.65it/s]
 60%|██████    | 255/424 [02:55<00:30,  5.51it/s]
 60%|██████    | 256/424 [02:55<00:27,  6.18it/s]
 61%|██████    | 257/424 [02:55<00:24,  6.83it/s]
 61%|██████    | 258/424 [02:55<00:22,  7.32it/s]
 61%|██████    | 259/424 [02:55<00:30,  5.48it/s]
 61%|██████▏   | 260/424 [02:56<01:07,  2.41it/s]
 62%|██████▏   | 261/424 [02:56<00:52,  3.12it/s]
 62%|██████▏   | 263/424 [02:57<01:05,  2.44it/s]
 62%|██████▏   | 264/424 [02:57<00:53,  2.98it/s]
 62%|██████▎   | 265/424 [02:58<00:43,  3.65it/s]
 63%|██████▎   | 266/424 [02:58<00:47,  3.31it/s]
 63%|██████▎   | 267/424 [02:58<00:39,  4.01it/s]
 63%|██████▎   | 268/424 [02:58<00:32,  4.76it/s]
 63%|██████▎   | 269/424 [02:59<00:59,  2.59it/s]
 64%|██████▎   | 270/424 [02:59<00:47,  3.27it/s]
 64%|██████▍   | 272/424 [02:59<00:30,  5.00it/s]
 64%|██████▍   | 273/424 [02:59<00:30,  5.01it/s]
 65%|██████▍   | 275/424 [03:00<00:21,  7.05it/s]
 65%|██████▌   | 277/424 [03:00<00:17,  8.37it/s]
 66%|██████▌   | 279/424 [03:01<00:40,  3.58it/s]
 66%|██████▌   | 280/424 [03:01<00:43,  3.29it/s]
 66%|██████▋   | 281/424 [03:02<00:46,  3.08it/s]
 67%|██████▋   | 283/424 [03:05<01:55,  1.22it/s]
 67%|██████▋   | 284/424 [03:05<01:34,  1.49it/s]
 67%|██████▋   | 285/424 [03:05<01:15,  1.85it/s]
 68%|██████▊   | 287/424 [03:06<00:56,  2.43it/s]
 68%|██████▊   | 288/424 [03:06<00:54,  2.51it/s]
 68%|██████▊   | 289/424 [03:06<00:49,  2.70it/s]
 69%|██████▊   | 291/424 [03:07<00:36,  3.65it/s]
 69%|██████▉   | 292/424 [03:07<00:30,  4.26it/s]
 69%|██████▉   | 293/424 [03:10<02:05,  1.04it/s]
 70%|██████▉   | 295/424 [03:11<01:36,  1.34it/s]
 70%|██████▉   | 296/424 [03:11<01:17,  1.66it/s]
 70%|███████   | 297/424 [03:11<01:10,  1.81it/s]
 70%|███████   | 298/424 [03:11<00:59,  2.13it/s]
 71%|███████   | 299/424 [03:12<00:48,  2.55it/s]
 71%|███████   | 301/424 [03:12<00:35,  3.44it/s]
 71%|███████   | 302/424 [03:19<03:45,  1.85s/it]
 71%|███████▏  | 303/424 [03:19<02:58,  1.48s/it]
 72%|███████▏  | 304/424 [03:19<02:15,  1.13s/it]
 72%|███████▏  | 305/424 [03:20<01:48,  1.09it/s]
 72%|███████▏  | 306/424 [03:20<01:30,  1.30it/s]
 72%|███████▏  | 307/424 [03:20<01:07,  1.73it/s]
 73%|███████▎  | 308/424 [03:20<00:56,  2.07it/s]
 73%|███████▎  | 309/424 [03:21<00:57,  2.00it/s]
 73%|███████▎  | 310/424 [03:22<01:14,  1.54it/s]
 74%|███████▎  | 312/424 [03:22<00:45,  2.44it/s]
 74%|███████▍  | 313/424 [03:22<00:40,  2.75it/s]
 74%|███████▍  | 314/424 [03:23<00:41,  2.66it/s]
 74%|███████▍  | 315/424 [03:24<01:07,  1.61it/s]
 75%|███████▍  | 316/424 [03:24<00:51,  2.09it/s]
 75%|███████▍  | 317/424 [03:26<01:17,  1.38it/s]
 75%|███████▌  | 318/424 [03:27<01:35,  1.11it/s]
 75%|███████▌  | 319/424 [03:27<01:16,  1.36it/s]
 75%|███████▌  | 320/424 [03:27<00:59,  1.74it/s]
 76%|███████▌  | 322/424 [03:28<00:35,  2.87it/s]
 76%|███████▌  | 323/424 [03:28<00:31,  3.23it/s]
 76%|███████▋  | 324/424 [03:28<00:27,  3.68it/s]
 77%|███████▋  | 325/424 [03:28<00:24,  4.07it/s]
 77%|███████▋  | 326/424 [03:35<03:23,  2.08s/it]
 77%|███████▋  | 327/424 [03:36<03:00,  1.86s/it]
 77%|███████▋  | 328/424 [03:37<02:28,  1.55s/it]
 78%|███████▊  | 329/424 [03:37<01:55,  1.21s/it]
 78%|███████▊  | 330/424 [03:39<01:57,  1.25s/it]
 78%|███████▊  | 331/424 [03:39<01:25,  1.09it/s]
 79%|███████▊  | 333/424 [03:40<01:16,  1.19it/s]
 79%|███████▉  | 334/424 [03:41<01:05,  1.37it/s]
 79%|███████▉  | 335/424 [03:41<01:02,  1.42it/s]
 79%|███████▉  | 336/424 [03:43<01:32,  1.05s/it]
 79%|███████▉  | 337/424 [03:50<03:50,  2.65s/it]
 80%|███████▉  | 338/424 [03:51<02:54,  2.02s/it]
 80%|███████▉  | 339/424 [03:52<02:24,  1.70s/it]
 80%|████████  | 340/424 [03:58<04:28,  3.20s/it]
 80%|████████  | 341/424 [04:00<03:47,  2.74s/it]
 81%|████████  | 342/424 [04:02<03:17,  2.41s/it]
 81%|████████  | 343/424 [04:02<02:21,  1.74s/it]
 81%|████████  | 344/424 [04:03<01:54,  1.44s/it]
 81%|████████▏ | 345/424 [04:03<01:22,  1.04s/it]
 82%|████████▏ | 346/424 [04:03<01:06,  1.18it/s]
 82%|████████▏ | 347/424 [04:04<01:02,  1.23it/s]
 83%|████████▎ | 350/424 [04:05<00:38,  1.91it/s]
 83%|████████▎ | 352/424 [04:11<01:49,  1.52s/it]
 83%|████████▎ | 353/424 [04:12<01:34,  1.33s/it]
 83%|████████▎ | 354/424 [04:13<01:27,  1.25s/it]
 84%|████████▎ | 355/424 [04:13<01:08,  1.01it/s]
 84%|████████▍ | 356/424 [04:15<01:18,  1.15s/it]
 84%|████████▍ | 357/424 [04:16<01:13,  1.09s/it]
 84%|████████▍ | 358/424 [04:17<01:10,  1.08s/it]
 85%|████████▍ | 359/424 [04:18<01:09,  1.06s/it]
 85%|████████▍ | 360/424 [04:18<00:52,  1.21it/s]
 85%|████████▌ | 361/424 [04:18<00:40,  1.56it/s]
 85%|████████▌ | 362/424 [04:19<00:34,  1.79it/s]
 86%|████████▌ | 363/424 [04:25<02:24,  2.37s/it]
 86%|████████▌ | 364/424 [04:26<01:47,  1.78s/it]
 86%|████████▌ | 365/424 [04:26<01:17,  1.31s/it]
 86%|████████▋ | 366/424 [04:26<00:55,  1.05it/s]
 87%|████████▋ | 367/424 [04:26<00:39,  1.43it/s]
 87%|████████▋ | 368/424 [04:33<02:21,  2.53s/it]
 87%|████████▋ | 369/424 [04:33<01:43,  1.88s/it]
 87%|████████▋ | 370/424 [04:33<01:12,  1.35s/it]
 88%|████████▊ | 372/424 [04:34<00:40,  1.30it/s]
 88%|████████▊ | 373/424 [04:34<00:32,  1.58it/s]
 88%|████████▊ | 374/424 [04:35<00:36,  1.39it/s]
 89%|████████▊ | 376/424 [04:35<00:27,  1.74it/s]
 89%|████████▉ | 377/424 [04:37<00:34,  1.35it/s]
 89%|████████▉ | 378/424 [04:37<00:27,  1.68it/s]
 89%|████████▉ | 379/424 [04:37<00:26,  1.71it/s]
 90%|████████▉ | 380/424 [04:39<00:37,  1.17it/s]
 90%|█████████ | 382/424 [04:40<00:33,  1.26it/s]
 91%|█████████ | 384/424 [04:41<00:21,  1.85it/s]
 91%|█████████ | 385/424 [04:41<00:18,  2.14it/s]
 91%|█████████▏| 387/424 [04:41<00:11,  3.23it/s]
 92%|█████████▏| 388/424 [04:42<00:13,  2.69it/s]
 92%|█████████▏| 389/424 [04:46<00:44,  1.28s/it]
 92%|█████████▏| 390/424 [04:46<00:34,  1.00s/it]
 92%|█████████▏| 391/424 [04:46<00:25,  1.29it/s]
 92%|█████████▏| 392/424 [04:46<00:19,  1.68it/s]
 93%|█████████▎| 393/424 [04:47<00:19,  1.60it/s]
 93%|█████████▎| 394/424 [04:48<00:19,  1.57it/s]
 93%|█████████▎| 395/424 [04:49<00:27,  1.07it/s]
 93%|█████████▎| 396/424 [04:50<00:26,  1.05it/s]
 94%|█████████▎| 397/424 [04:52<00:28,  1.05s/it]
 94%|█████████▍| 398/424 [04:53<00:29,  1.12s/it]
 94%|█████████▍| 399/424 [04:53<00:22,  1.11it/s]
 94%|█████████▍| 400/424 [04:54<00:19,  1.23it/s]
 95%|█████████▍| 401/424 [04:54<00:14,  1.56it/s]
 95%|█████████▍| 402/424 [04:57<00:30,  1.41s/it]
 95%|█████████▌| 403/424 [05:00<00:36,  1.75s/it]
 95%|█████████▌| 404/424 [05:00<00:25,  1.29s/it]
 96%|█████████▌| 405/424 [05:01<00:19,  1.02s/it]
 96%|█████████▌| 406/424 [05:01<00:13,  1.33it/s]
 96%|█████████▌| 407/424 [05:02<00:15,  1.09it/s]
 96%|█████████▌| 408/424 [05:03<00:15,  1.06it/s]
 96%|█████████▋| 409/424 [05:06<00:21,  1.43s/it]
 97%|█████████▋| 410/424 [05:06<00:15,  1.10s/it]
 97%|█████████▋| 411/424 [05:07<00:13,  1.05s/it]
 97%|█████████▋| 412/424 [05:07<00:09,  1.29it/s]
 97%|█████████▋| 413/424 [05:09<00:11,  1.03s/it]
 98%|█████████▊| 415/424 [05:10<00:08,  1.09it/s]
 98%|█████████▊| 416/424 [05:11<00:06,  1.17it/s]
 98%|█████████▊| 417/424 [05:11<00:05,  1.27it/s]
 99%|█████████▊| 418/424 [05:16<00:10,  1.72s/it]
 99%|█████████▉| 419/424 [05:16<00:07,  1.42s/it]
 99%|█████████▉| 420/424 [05:18<00:05,  1.48s/it]
 99%|█████████▉| 421/424 [05:19<00:03,  1.33s/it]
100%|█████████▉| 422/424 [05:19<00:01,  1.02it/s]
100%|█████████▉| 423/424 [05:23<00:01,  1.91s/it]
100%|██████████| 424/424 [05:24<00:00,  1.64s/it]
100%|██████████| 424/424 [05:24<00:00,  1.31it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:39:27.695755_sc_processed_test.json', '--output_addr', 'data/out/rag/full_profile/sc_rag_full_profile_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  3.82 examples/s]
Generating train split: 424 examples [00:00, 755.84 examples/s]
INFO 07-09 14:45:19 config.py:510] This model supports multiple tasks: {'generate', 'embed', 'reward', 'score', 'classify'}. Defaulting to 'generate'.
INFO 07-09 14:45:19 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:45:20 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:45:21 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:45:21 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:01,  1.69it/s]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.60it/s]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.61it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.58it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.59it/s]

INFO 07-09 14:45:24 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:45:27 worker.py:241] Memory profiling takes 2.12 seconds
INFO 07-09 14:45:27 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:45:27 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:45:27 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:45:27 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:45:29 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:10,  3.10it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:09,  3.38it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:00<00:09,  3.47it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:08,  3.52it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:08,  3.56it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:01<00:08,  3.58it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:01<00:07,  3.59it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:07,  3.60it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:02<00:07,  3.51it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:02<00:07,  3.55it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:06,  3.58it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:03<00:06,  3.60it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:03<00:06,  3.62it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:03<00:05,  3.64it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:04<00:05,  3.63it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:04<00:05,  3.64it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:04<00:04,  3.69it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:05<00:04,  3.72it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:05<00:04,  3.75it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:05<00:03,  3.77it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:05<00:03,  3.78it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:06<00:03,  3.78it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:06<00:03,  3.79it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:06<00:02,  3.80it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:06<00:02,  3.82it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:07<00:02,  3.81it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:07<00:02,  3.82it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:07<00:01,  3.82it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:07<00:01,  3.82it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:08<00:01,  3.85it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:08<00:01,  3.85it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:08<00:00,  3.87it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:08<00:00,  3.81it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:09<00:00,  3.85it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.87it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.71it/s]
INFO 07-09 14:45:39 model_runner.py:1535] Graph capturing finished in 9 secs, took 0.22 GiB
INFO 07-09 14:45:39 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 14.29 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
How open should I be with my PhD supervisor about the problems in my personal life? My marriage has been going through some problems in the last year which has affected my PhD. My supervisor has been very understanding and was keen for me not to interrupt and granted me a two month extension on my upgrade paper. Last week my wife walked out. She came back but this totally put me off my studies. I was supposed to hand in a paper - an optional paper since this was for a journal submission - but I haven't even drafted it and the draft was due tomorrow.My supervisor knows I have been having marriage problems but she doesn't know any details. Also she doesn't talk about her personal life much and I don't know if she's the kind of person who would be receptive to such details, so I have so far withheld them. Should I tell her my wife walked out? At the moment I have just said there was an incident. She also knows that I have been diagnosed with symptoms of moderate/severe depression, but I thought it best that she knew this since it could affect my work.Should I carry on being vague or should I test the water and treat her like an intelligent adult and give her more context and details of my issues? Or should I just keep the personal stuff as separate as possible?

My PhD seems daunting and overbearing. How shall I regain motivation and interest? EDIT: I should clarify this is not the first draft of my PhD, it's the first draft of my upgrade document to go from MPhil to PhD.I have been working on my PhD for about two years now, it is a six year part-time program. I have a very good relationship with all my supervisors and they are very supportive. I am fortunate to be part of a good university which is open-minded and free-thinking. I also have attracted the interest of a well-known external academic who is an authority within the field and who wants to be involved. I am very lucky.The problem is that I am just not that interested or convinced by my research [chiefly its significance]. I have to submit my upgrade document [MPhil > PhD] in about five week's time, and the viva is a week after that. I have written a draft document which is 12,000 words and my main supervisor has written a lot of comments which are suggestions for improvements. The issue is that I do not feel that interested or compelled to work through them. I am under the impression that my supervisor is not that convinced by my research, even though she keeps saying she has no concerns. I feel my research is too vague, too broad but also too overbearing. It incorporates three disciplines [at the advice of one of my supervisors], disciplines A B and C. Discipline A I am not that interested in - I was for my master's but now I find it quite tedious but it is quite an important part of the whole. It is a well-worn discipline and feels rather old and stale to me now. Discipline B is quite new and interesting, I have published within this discipline. Disipline C is very new and up-and-coming. I find it quite exciting and my supervisor has written the least amount of comments about it in my draft paper, which I take to mean she has the least amount of complaints about it [she has a lot of comments to make about dispclines A/B]. She has also said that discpline C is a 'key' part of the PhD. I do not know what to do. I am really not that interested and the whole thing seems so daunting. My PhD focuses on A and B mostly with C being only a feature, but I am wondering whether I should switch things round entirely and make it more about C. I feel I will not really be able to convince my panel about the significance of my research in the viva if I am not excited about it or convinced myself. In my master's I was always keen to research and write, now I am not, but I know I would be if the topic were carried out a bit differently. What shall I do, how shall I regain interest? My PhD seems rather fluffy and not sharp enough. Additionally, I am daunted by the scope of the whole thing: it seems too large to work through and 'bigger' than me. I am kind of at a loss for what to do.

Should I talk to my supervisor about including a new field in my PhD? I am a part-time PhD student coming towards the end of my first year – I have another five years left. My PhD is in Music and I do like my topic a lot. However, in the last 18 months I have also become very interested in an area that is not that related to music – computing and open source. I started looking at it as something extra to learn before my PhD started and am now finding it difficult to put down. As well as this, I would like to integrate some aspects of what I have learned into my PhD. I just don't really know what and how. Is this something that I should bring up with my PhD supervisor or should I just "put up or shut up"? She may think it's a bit weird to mention it since she will probably feel that it doesn't really relate, however, computing (and its related ethics) are fundamental to the ways in which we undertake academic research these days. We've even had a few classes on software use. I feel that I could probably link the two in some way but little has come up yet which is obvious, though it may well present itself in the future. From past experience I tend to function at my academic best when integrating different challenging interests into my learning and I would love to integrate my learning of computing into my music PhD. I feel I have learned – and applied – a lot and I want to continue learning alongside my music learning and to combine the two in my topic. Question: should I raise this with my supervisor, float some ideas past her about this or should I just ignore it? If I do the latter the question may well come back to haunt me further down the line. I don't think I "can" (nor do I want to) give this up, well, not without forcing myself to since it fascinates me. Do others have experience of wanting to mix in new ideas/subjects into their PhDs and how did you go about it?For clarification - the PhD in Music is ethnomusicological, i.e. the PhD is to do with the study of music in culture and as culture rather than composition or performance.

Is there a preferable time of year when one should apply for a PhD in the UK? [Edited] I am very shortly going to be sending off my PhD application. I cannot apply quite yet because I am waiting on my bachelor's documentation which was withheld (library fines which are now cleared) but now it is in processing, and I do have my transcript. I have my master's documentation. The BA uni say they don't know when the cert will be ready, it could be a week or two, or longer presumably. The deadlines for PhD applications are set as the summer, but I know that many faculties like to have the applications in sooner because they want to decide on their student quantities. Is there some kind of unspoken deadline that I should shoot for in general [e.g. late Feb, Apr etc] or does it vary by institution? Does one lessen one's chances of acceptance if applying nearer to the official early summer deadlines?I should mention that a staff member in my choice of PhD uni has already approved my proposal and agreed to be my supervisor. Should I apply anyway without the BA cert and just say it is in processing [without going into reasons why]? I am not applying for funding.
# Current post question:
Bored with PhD - should I tell my supervisor?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Letting students grade their own homework I am going to teach a course in algorithms to 2nd-year undergraduates. The grade in this course is composed of 90% exam and 10% homework. The problem is, this year we do not have enough personnel to grade the homework. Theoretically, it may be possible to change the grade struture and make it 100% based on final exam, but, this will reduce the incentive of students to study and practice during the semester, which I think will harm their learning experience.So, I thought of the following scheme: the students will have to submit each assignment before the next TA session. The TA will explain the solutions during the session, and then each student will grade his/her own homework.Sure, some students might be tempted to give themselves 100 on all assignments, but I believe this will not be very harmful since:All assignments together compose only 10% of the grade, so every single assignment is less than 1%. Even if many students get 10% for free, the final exam is still sufficient to differentiate the good from the bad students. The group consists of excellent students (the top 20%, based on their 1st year mean grade). I believe most of them want to succeed in the exam, so they will take this as an opportunity to track their own progress during the course, rather than an opportunity to just get some points for free.What do you think about this scheme? 

Grades are too high for the department - what should I do? I recently taught an undergraduate seminar course, in which each student has to read a research paper, summarize it and present it to the class. In the first lesson I explained to the students the components of the grade: attendance, summary writing, and presentation quality. Most of the students did great jobs: attendance was near full, summaries were good, and presentations were great. Many of them did more than I expected - they contacted the paper's authors to get more information, presented movies and demos, engaged the class in discussions, etc. So, when I wrote the grades to myself, most of them were between 90 and 100. But then, when I told this to the department vice-chair, he told me "what have you done? You will cause a grade-inflation! The department policy is that the average grade on seminar courses should be at most 85!"I totally understand this policy - grades that are too high might show that the course was too easy, and they do not sufficiently distinguish between good and better students. Also, they might be unfair to students who took the course in previous years.However, I am not sure what I should do now. I haven't published the grades to the students yet. Should I just re-scale the grades so that 90 becomes 70? I feel this is somewhat unfair to the students who worked hard for their presentations. Are there better options?

What to do if most of my students have switched to a better lecturer's class? I teach a certain course which is part of the obligatory undergraduate curriculum. I teach two groups out of four; the other two groups are taught by two other lecturers. In one group I have about 20-30 students. The other group also started with the same number, but students left the group gradually, and now there remain only 5 or even less; the others go to the other lecturer who gives the same lesson in parallel. One reason is probably that I am a new teacher and still not very good at teaching. Another reason is that the other lecturer is very good. I feel that some of the 5 students remaining in my class do so only because they are being polite. I appreciate it very much since I put a lot of effort in preparing the lessons, but it is not very efficient for me or for them. So, I thought of suggesting to the remaining students that they move to the other lecturer's group. This way, they will have a better lecturer and I will have more time for research  (the other lecturer said it's OK with him). What might be the implications of such a step? UPDATE: Thanks a lot for all the feedback. While there are many great answers, the one thing that convinced me to keep going was the fact that this is the only way I can become a better teacher. So today I came to class as usual. For some reason, the number of students rised to 10.

How can I politely decline to guide a student? I am a lecturer in a department in which undergraduate students have to do a final-year project guided (= supervised) by a faculty member. Faculty members do not have to guide students: those who do, get extra payment for this.Most students who want me to be their guide are great and I am happy to guide them, but a few of them - I suspect - will be very "not fun" to work with: when they took a course of mine previously, they argued a lot about their grade, complained a lot about the course rules, etc. They made me spent a lot of time and energy on futile arguments rather than on productive teaching. I do not want to guide these students - I feel it will be a waste of my time and energy, not worth the extra payment.However, if I just tell them bluntly "I do not want to guide you since I do not like you", they will be very insulted.I cannot filter them out based on their grades, since their grades are similar to the average.I could say that "I am too busy to guide you", which is true, but I am not too busy to guide other students, and the student will probably find this out.How can I politely reject their request without insulting them?
# Current post question:
How can I motivate the teaching assistants to grade more strictly?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
What to do if ellipses are already in a text What should I do to let a reader know that in a quote the ellipses aren't mine and have been placed by the original author? This is the quote:  My home university did a study of its alumni a few years back, and they discovered that out of all the various degree subjects, the one that led to the highest average income was ... mathematics. (Stewart, Letters, 1)

What is the axiological basis of the preference of truth to falsity? Axiologically speaking, why is truth the preferred logical value by humans? In general, why do we prefer true statements to false ones? What about the value of true makes a statement "right," while false is "wrong?" Specifically, why do true statements seem to be valued higher than false statements and why does our day-to-day language seem to favor factual statements?

Why are true and false the only truth values used in mathematics? Why do we use only true and false? It is possible to have many states in-between in fuzzy logic and other many-valued logics. If we assign numbers to true and false, such as 1 and 0 respectively, what would be the logical interpreation of -1, i, j or k (with i,j,k as defined for quaternions)?  Is there any reason for this dichotomy? What type of statement would have these truth values if such a statement existed?

What punctuation should I use with a quote like this? I have this sentence:  Executive order 9066 allowed "the Secretary of War and the Military Commanders ... to prescribe military areas in such places and of such extent as he or the appropriate Military Commander may determine, from which any or all persons may be excluded, and with respect to which, the right of any person to enter, remain in, or leave shall be subject to whatever restrictions the Secretary of War or the appropriate Military Commander may impose."My question is should a comma go before this quote? Or should I use a colon? Or does this quote not need punctuation before it? And why?
# Current post question:
How narrow or broad should I look for undergraduate research?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/424 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/424 [00:19<2:17:30, 19.50s/it, est. speed input: 28.46 toks/s, output: 4.77 toks/s]
Processed prompts:   0%|          | 2/424 [00:19<57:11,  8.13s/it, est. speed input: 77.41 toks/s, output: 9.61 toks/s]  
Processed prompts:   1%|          | 3/424 [00:19<31:40,  4.52s/it, est. speed input: 121.24 toks/s, output: 14.48 toks/s]
Processed prompts:   1%|          | 4/424 [00:20<19:37,  2.80s/it, est. speed input: 161.29 toks/s, output: 19.44 toks/s]
Processed prompts:   1%|          | 5/424 [00:20<12:51,  1.84s/it, est. speed input: 221.60 toks/s, output: 24.45 toks/s]
Processed prompts:   2%|▏         | 8/424 [00:20<05:27,  1.27it/s, est. speed input: 371.56 toks/s, output: 39.57 toks/s]
Processed prompts:   2%|▏         | 9/424 [00:20<04:25,  1.56it/s, est. speed input: 406.54 toks/s, output: 44.66 toks/s]
Processed prompts:   2%|▏         | 10/424 [00:20<03:41,  1.87it/s, est. speed input: 511.04 toks/s, output: 49.68 toks/s]
Processed prompts:   3%|▎         | 11/424 [00:21<03:04,  2.24it/s, est. speed input: 578.74 toks/s, output: 54.78 toks/s]
Processed prompts:   3%|▎         | 14/424 [00:21<01:46,  3.85it/s, est. speed input: 747.18 toks/s, output: 70.74 toks/s]
Processed prompts:   4%|▎         | 15/424 [00:21<01:36,  4.26it/s, est. speed input: 793.29 toks/s, output: 75.94 toks/s]
Processed prompts:   4%|▍         | 17/424 [00:21<01:20,  5.05it/s, est. speed input: 847.46 toks/s, output: 86.33 toks/s]
Processed prompts:   4%|▍         | 18/424 [00:21<01:12,  5.60it/s, est. speed input: 901.44 toks/s, output: 91.64 toks/s]
Processed prompts:   4%|▍         | 19/424 [00:21<01:08,  5.87it/s, est. speed input: 973.84 toks/s, output: 96.79 toks/s]
Processed prompts:   5%|▍         | 21/424 [00:22<00:53,  7.58it/s, est. speed input: 1032.17 toks/s, output: 107.59 toks/s]
Processed prompts:   5%|▌         | 23/424 [00:22<00:48,  8.24it/s, est. speed input: 1088.84 toks/s, output: 118.03 toks/s]
Processed prompts:   6%|▌         | 25/424 [00:22<00:46,  8.50it/s, est. speed input: 1233.41 toks/s, output: 128.36 toks/s]
Processed prompts:   7%|▋         | 28/424 [00:22<00:35, 11.09it/s, est. speed input: 1359.37 toks/s, output: 144.70 toks/s]
Processed prompts:   7%|▋         | 30/424 [00:22<00:38, 10.11it/s, est. speed input: 1435.51 toks/s, output: 154.65 toks/s]
Processed prompts:   8%|▊         | 34/424 [00:23<00:37, 10.40it/s, est. speed input: 1556.23 toks/s, output: 175.06 toks/s]
Processed prompts:   8%|▊         | 36/424 [00:23<00:34, 11.31it/s, est. speed input: 1621.87 toks/s, output: 185.57 toks/s]
Processed prompts:   9%|▉         | 38/424 [00:23<00:37, 10.27it/s, est. speed input: 1662.17 toks/s, output: 195.29 toks/s]
Processed prompts:   9%|▉         | 40/424 [00:23<00:40,  9.57it/s, est. speed input: 1707.49 toks/s, output: 204.89 toks/s]
Processed prompts:  10%|▉         | 42/424 [00:24<00:36, 10.58it/s, est. speed input: 1776.27 toks/s, output: 215.40 toks/s]
Processed prompts:  11%|█         | 45/424 [00:24<00:36, 10.35it/s, est. speed input: 1934.62 toks/s, output: 230.14 toks/s]
Processed prompts:  11%|█         | 47/424 [00:24<00:32, 11.69it/s, est. speed input: 2020.94 toks/s, output: 240.80 toks/s]
Processed prompts:  12%|█▏        | 49/424 [00:24<00:37,  9.99it/s, est. speed input: 2056.63 toks/s, output: 249.70 toks/s]
Processed prompts:  12%|█▎        | 53/424 [00:24<00:30, 12.09it/s, est. speed input: 2287.78 toks/s, output: 270.37 toks/s]
Processed prompts:  13%|█▎        | 55/424 [00:25<00:30, 12.14it/s, est. speed input: 2346.09 toks/s, output: 280.22 toks/s]
Processed prompts:  14%|█▎        | 58/424 [00:25<00:30, 12.03it/s, est. speed input: 2437.03 toks/s, output: 294.70 toks/s]
Processed prompts:  14%|█▍        | 60/424 [00:25<00:30, 11.97it/s, est. speed input: 2470.28 toks/s, output: 304.28 toks/s]
Processed prompts:  15%|█▌        | 64/424 [00:25<00:27, 13.27it/s, est. speed input: 2631.61 toks/s, output: 324.24 toks/s]
Processed prompts:  16%|█▌        | 66/424 [00:26<00:30, 11.61it/s, est. speed input: 2706.29 toks/s, output: 332.72 toks/s]
Processed prompts:  16%|█▋        | 69/424 [00:26<00:31, 11.33it/s, est. speed input: 2852.60 toks/s, output: 346.43 toks/s]
Processed prompts:  17%|█▋        | 71/424 [00:26<00:28, 12.29it/s, est. speed input: 2894.43 toks/s, output: 356.40 toks/s]
Processed prompts:  18%|█▊        | 75/424 [00:26<00:28, 12.41it/s, est. speed input: 3083.80 toks/s, output: 375.06 toks/s]
Processed prompts:  19%|█▊        | 79/424 [00:27<00:27, 12.77it/s, est. speed input: 3175.22 toks/s, output: 393.86 toks/s]
Processed prompts:  19%|█▉        | 82/424 [00:27<00:25, 13.41it/s, est. speed input: 3246.12 toks/s, output: 408.23 toks/s]
Processed prompts:  20%|█▉        | 84/424 [00:27<00:25, 13.15it/s, est. speed input: 3287.71 toks/s, output: 417.32 toks/s]
Processed prompts:  20%|██        | 86/424 [00:27<00:26, 12.96it/s, est. speed input: 3373.89 toks/s, output: 426.39 toks/s]
Processed prompts:  21%|██        | 90/424 [00:28<00:30, 10.87it/s, est. speed input: 3476.77 toks/s, output: 442.13 toks/s]
Processed prompts:  22%|██▏       | 92/424 [00:28<00:31, 10.56it/s, est. speed input: 3513.90 toks/s, output: 450.27 toks/s]
Processed prompts:  23%|██▎       | 99/424 [00:28<00:26, 12.35it/s, est. speed input: 3657.51 toks/s, output: 482.46 toks/s]
Processed prompts:  24%|██▍       | 101/424 [00:28<00:26, 12.21it/s, est. speed input: 3683.41 toks/s, output: 490.95 toks/s]
Processed prompts:  25%|██▍       | 104/424 [00:29<00:26, 12.01it/s, est. speed input: 3764.99 toks/s, output: 503.56 toks/s]
Processed prompts:  26%|██▌       | 110/424 [00:29<00:23, 13.22it/s, est. speed input: 3950.64 toks/s, output: 530.53 toks/s]
Processed prompts:  27%|██▋       | 113/424 [00:29<00:23, 13.09it/s, est. speed input: 4045.83 toks/s, output: 543.15 toks/s]
Processed prompts:  27%|██▋       | 116/424 [00:29<00:21, 14.59it/s, est. speed input: 4129.35 toks/s, output: 557.53 toks/s]
Processed prompts:  28%|██▊       | 120/424 [00:30<00:21, 14.34it/s, est. speed input: 4226.39 toks/s, output: 574.58 toks/s]
Processed prompts:  29%|██▉       | 123/424 [00:30<00:20, 14.41it/s, est. speed input: 4294.94 toks/s, output: 587.50 toks/s]
Processed prompts:  29%|██▉       | 125/424 [00:30<00:22, 13.04it/s, est. speed input: 4329.55 toks/s, output: 594.61 toks/s]
Processed prompts:  31%|███       | 131/424 [00:31<00:21, 13.62it/s, est. speed input: 4593.23 toks/s, output: 620.02 toks/s]
Processed prompts:  32%|███▏      | 135/424 [00:31<00:21, 13.57it/s, est. speed input: 4693.43 toks/s, output: 636.35 toks/s]
Processed prompts:  32%|███▏      | 137/424 [00:31<00:21, 13.48it/s, est. speed input: 4731.24 toks/s, output: 644.43 toks/s]
Processed prompts:  33%|███▎      | 139/424 [00:31<00:23, 11.90it/s, est. speed input: 4776.78 toks/s, output: 650.57 toks/s]
Processed prompts:  34%|███▍      | 144/424 [00:32<00:25, 10.92it/s, est. speed input: 4866.55 toks/s, output: 667.73 toks/s]
Processed prompts:  34%|███▍      | 146/424 [00:32<00:23, 11.63it/s, est. speed input: 4904.29 toks/s, output: 676.17 toks/s]
Processed prompts:  35%|███▌      | 150/424 [00:32<00:23, 11.82it/s, est. speed input: 4976.07 toks/s, output: 691.27 toks/s]
Processed prompts:  36%|███▌      | 153/424 [00:32<00:21, 12.83it/s, est. speed input: 5049.25 toks/s, output: 703.89 toks/s]
Processed prompts:  38%|███▊      | 160/424 [00:33<00:20, 12.92it/s, est. speed input: 5204.01 toks/s, output: 730.47 toks/s]
Processed prompts:  38%|███▊      | 163/424 [00:33<00:19, 13.28it/s, est. speed input: 5231.95 toks/s, output: 742.29 toks/s]
Processed prompts:  39%|███▉      | 165/424 [00:33<00:18, 13.67it/s, est. speed input: 5298.72 toks/s, output: 750.40 toks/s]
Processed prompts:  40%|████      | 171/424 [00:34<00:16, 14.93it/s, est. speed input: 5461.29 toks/s, output: 775.18 toks/s]
Processed prompts:  42%|████▏     | 178/424 [00:34<00:11, 21.46it/s, est. speed input: 5660.77 toks/s, output: 810.49 toks/s]
Processed prompts:  43%|████▎     | 183/424 [00:34<00:09, 24.84it/s, est. speed input: 5798.37 toks/s, output: 835.17 toks/s]
Processed prompts:  44%|████▍     | 187/424 [00:34<00:09, 26.33it/s, est. speed input: 5923.88 toks/s, output: 854.53 toks/s]
Processed prompts:  45%|████▌     | 192/424 [00:34<00:07, 29.54it/s, est. speed input: 6086.79 toks/s, output: 879.78 toks/s]
Processed prompts:  46%|████▌     | 196/424 [00:34<00:08, 28.00it/s, est. speed input: 6192.89 toks/s, output: 898.62 toks/s]
Processed prompts:  48%|████▊     | 202/424 [00:34<00:06, 33.19it/s, est. speed input: 6307.22 toks/s, output: 930.45 toks/s]
Processed prompts:  49%|████▊     | 206/424 [00:35<00:06, 33.20it/s, est. speed input: 6386.62 toks/s, output: 950.87 toks/s]
Processed prompts:  50%|████▉     | 210/424 [00:35<00:06, 30.66it/s, est. speed input: 6480.01 toks/s, output: 970.50 toks/s]
Processed prompts:  51%|█████▏    | 218/424 [00:35<00:05, 40.35it/s, est. speed input: 6667.14 toks/s, output: 1015.73 toks/s]
Processed prompts:  53%|█████▎    | 223/424 [00:35<00:07, 25.56it/s, est. speed input: 6747.71 toks/s, output: 1036.06 toks/s]
Processed prompts:  54%|█████▎    | 227/424 [00:35<00:08, 23.06it/s, est. speed input: 6857.36 toks/s, output: 1055.13 toks/s]
Processed prompts:  54%|█████▍    | 230/424 [00:36<00:10, 19.10it/s, est. speed input: 6891.02 toks/s, output: 1066.91 toks/s]
Processed prompts:  55%|█████▍    | 233/424 [00:36<00:10, 17.48it/s, est. speed input: 6977.23 toks/s, output: 1080.34 toks/s]
Processed prompts:  56%|█████▌    | 236/424 [00:36<00:11, 15.68it/s, est. speed input: 7013.17 toks/s, output: 1087.09 toks/s]
Processed prompts:  56%|█████▌    | 238/424 [00:36<00:11, 16.16it/s, est. speed input: 7068.83 toks/s, output: 1091.43 toks/s]
Processed prompts:  57%|█████▋    | 240/424 [00:36<00:13, 13.97it/s, est. speed input: 7062.91 toks/s, output: 1092.29 toks/s]
Processed prompts:  57%|█████▋    | 242/424 [00:37<00:14, 12.53it/s, est. speed input: 7067.31 toks/s, output: 1093.35 toks/s]
Processed prompts:  58%|█████▊    | 248/424 [00:37<00:08, 20.51it/s, est. speed input: 7186.54 toks/s, output: 1115.41 toks/s]
Processed prompts:  59%|█████▉    | 251/424 [00:37<00:08, 20.79it/s, est. speed input: 7249.20 toks/s, output: 1133.06 toks/s]
Processed prompts:  60%|██████    | 256/424 [00:37<00:06, 24.95it/s, est. speed input: 7352.74 toks/s, output: 1151.80 toks/s]
Processed prompts:  61%|██████    | 259/424 [00:37<00:06, 25.93it/s, est. speed input: 7407.60 toks/s, output: 1161.24 toks/s]
Processed prompts:  63%|██████▎   | 267/424 [00:37<00:04, 38.53it/s, est. speed input: 7561.84 toks/s, output: 1192.51 toks/s]
Processed prompts:  64%|██████▍   | 272/424 [00:37<00:03, 38.36it/s, est. speed input: 7701.25 toks/s, output: 1208.88 toks/s]
Processed prompts:  66%|██████▌   | 279/424 [00:38<00:03, 43.03it/s, est. speed input: 7848.92 toks/s, output: 1233.53 toks/s]
Processed prompts:  67%|██████▋   | 284/424 [00:38<00:03, 36.45it/s, est. speed input: 7973.13 toks/s, output: 1251.22 toks/s]
Processed prompts:  68%|██████▊   | 288/424 [00:38<00:03, 35.26it/s, est. speed input: 8037.72 toks/s, output: 1267.52 toks/s]
Processed prompts:  70%|██████▉   | 295/424 [00:38<00:03, 41.02it/s, est. speed input: 8241.24 toks/s, output: 1296.72 toks/s]
Processed prompts:  71%|███████   | 301/424 [00:38<00:02, 43.98it/s, est. speed input: 8366.86 toks/s, output: 1320.16 toks/s]
Processed prompts:  72%|███████▏  | 307/424 [00:38<00:02, 47.20it/s, est. speed input: 8464.42 toks/s, output: 1339.51 toks/s]
Processed prompts:  74%|███████▎  | 312/424 [00:38<00:02, 44.54it/s, est. speed input: 8560.33 toks/s, output: 1359.59 toks/s]
Processed prompts:  75%|███████▌  | 318/424 [00:38<00:02, 45.41it/s, est. speed input: 8701.37 toks/s, output: 1380.88 toks/s]
Processed prompts:  78%|███████▊  | 329/424 [00:39<00:01, 58.55it/s, est. speed input: 9023.00 toks/s, output: 1422.17 toks/s]
Processed prompts:  80%|███████▉  | 338/424 [00:39<00:01, 63.82it/s, est. speed input: 9275.10 toks/s, output: 1459.90 toks/s]
Processed prompts:  83%|████████▎ | 350/424 [00:39<00:00, 76.05it/s, est. speed input: 9648.30 toks/s, output: 1517.56 toks/s]
Processed prompts:  85%|████████▍ | 360/424 [00:39<00:00, 80.89it/s, est. speed input: 9932.15 toks/s, output: 1563.20 toks/s]
Processed prompts:  87%|████████▋ | 369/424 [00:39<00:00, 68.80it/s, est. speed input: 10124.46 toks/s, output: 1598.16 toks/s]
Processed prompts:  90%|████████▉ | 381/424 [00:39<00:00, 78.82it/s, est. speed input: 10428.28 toks/s, output: 1655.54 toks/s]
Processed prompts:  92%|█████████▏| 390/424 [00:39<00:00, 74.51it/s, est. speed input: 10628.47 toks/s, output: 1693.41 toks/s]
Processed prompts:  94%|█████████▍| 398/424 [00:40<00:00, 60.58it/s, est. speed input: 10812.79 toks/s, output: 1726.07 toks/s]
Processed prompts:  96%|█████████▌| 405/424 [00:40<00:00, 60.61it/s, est. speed input: 10966.75 toks/s, output: 1766.24 toks/s]
Processed prompts:  97%|█████████▋| 412/424 [00:40<00:00, 49.10it/s, est. speed input: 11072.36 toks/s, output: 1800.29 toks/s]
Processed prompts:  99%|█████████▊| 418/424 [00:40<00:00, 43.05it/s, est. speed input: 11250.17 toks/s, output: 1835.61 toks/s]
Processed prompts: 100%|█████████▉| 423/424 [00:41<00:00, 24.71it/s, est. speed input: 11252.20 toks/s, output: 1850.29 toks/s]
Processed prompts: 100%|██████████| 424/424 [00:42<00:00, 10.04it/s, est. speed input: 10978.29 toks/s, output: 1810.13 toks/s]
{  "personalized_answer": {    "Based on your past questions and preferences, it seems that you value clarity, elegance, and the impact of your work. When considering the referee's suggestion for a better proof of your theorem, it would be best to include both proofs in your paper. Present your original proof first, as it provides a clear and accessible path to understanding the theorem. Then, introduce the improved proof, highlighting its advantages and how it enhances the overall understanding of the result. This approach respects the aesthetic and practical aspects of your work, aligning with your past preferences for both elegance and rigorous presentation. Additionally, including both proofs demonstrates your commitment to thoroughness and openness in the academic community."  }}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:02<00:00,  2.03s/it, est. speed input: 452.84 toks/s, output: 83.27 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:02<00:00,  2.03s/it, est. speed input: 452.84 toks/s, output: 83.27 toks/s]
{  "personalized_answer": {    "Based on your past questions and preferences, it seems you value clarity, elegance, and the impact of your work. When a referee suggests a better proof for your theorem, it would be wise to consider both the original and the improved proof. Here’s a balanced approach: Publish the better proof as the main result, as it likely represents a more rigorous and efficient solution. However, you could include your original proof as an appendix or as a supplementary section, especially if it offers a different perspective or is more accessible to a broader audience. This way, you honor the original work while also advancing the field with the improved proof. Additionally, you might want to acknowledge the referee’s contribution in the paper, which is a common and appreciated practice in academic publishing."  }}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.87s/it, est. speed input: 492.61 toks/s, output: 83.08 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.87s/it, est. speed input: 492.61 toks/s, output: 83.08 toks/s]
{  "personalized_answer": {    "Based on your past questions and preferences, it seems that you value clarity, elegance, and the practical implications of your work. When considering whether to publish your original proof or the better proof suggested by the referee, it would be best to include both. This approach allows you to acknowledge the referee's contribution while also providing a more robust and potentially clearer explanation of the theorem. Additionally, including both proofs can serve as a valuable resource for readers who might find one explanation more intuitive than the other. Given your interest in the aesthetic and practical aspects of your work, you might also consider adding a brief discussion on why the new proof is preferable, which could enhance the overall value of your paper."  }}
Invalid JSON
None

Processed prompts:   0%|          | 0/1 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.82s/it, est. speed input: 504.13 toks/s, output: 82.83 toks/s]
Processed prompts: 100%|██████████| 1/1 [00:01<00:00,  1.82s/it, est. speed input: 504.13 toks/s, output: 82.83 toks/s]
[rank0]:[W709 14:46:29.558980392 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/full_profile/sc_rag_full_profile_test_4_output.json
Cleaned temporary files.
Keeping ['lp', 'sc'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:46:32.542655_ae_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:46:32.542655_ae_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:46:32.542655_ae_processed_test.json', '--batch_size', '4']

  0%|          | 0/401 [00:00<?, ?it/s]
  0%|          | 1/401 [00:00<01:32,  4.31it/s]
  1%|          | 3/401 [00:00<01:41,  3.91it/s]
  1%|          | 4/401 [00:01<03:03,  2.17it/s]
  1%|          | 5/401 [00:02<03:55,  1.68it/s]
  1%|▏         | 6/401 [00:03<04:30,  1.46it/s]
  2%|▏         | 7/401 [00:04<04:51,  1.35it/s]
  2%|▏         | 8/401 [00:05<05:03,  1.30it/s]
  2%|▏         | 9/401 [00:05<05:09,  1.27it/s]
  2%|▏         | 10/401 [00:06<03:50,  1.70it/s]
  3%|▎         | 11/401 [00:07<05:11,  1.25it/s]
  3%|▎         | 13/401 [00:08<04:43,  1.37it/s]
  3%|▎         | 14/401 [00:09<04:20,  1.49it/s]
  4%|▍         | 17/401 [00:09<02:14,  2.86it/s]
  4%|▍         | 18/401 [00:10<03:24,  1.87it/s]
  5%|▍         | 19/401 [00:11<04:25,  1.44it/s]
  5%|▍         | 20/401 [00:14<07:14,  1.14s/it]
  5%|▌         | 22/401 [00:16<07:39,  1.21s/it]
  6%|▌         | 23/401 [00:18<07:42,  1.22s/it]
  6%|▌         | 24/401 [00:20<09:42,  1.55s/it]
  6%|▋         | 26/401 [00:20<05:51,  1.07it/s]
  7%|▋         | 27/401 [00:23<08:07,  1.30s/it]
  7%|▋         | 29/401 [00:23<05:01,  1.23it/s]
  7%|▋         | 30/401 [00:23<04:07,  1.50it/s]
  8%|▊         | 31/401 [00:24<04:06,  1.50it/s]
  8%|▊         | 33/401 [00:25<03:16,  1.87it/s]
  8%|▊         | 34/401 [00:25<02:46,  2.21it/s]
  9%|▉         | 36/401 [00:25<01:49,  3.34it/s]
  9%|▉         | 38/401 [00:25<01:18,  4.60it/s]
 10%|▉         | 40/401 [00:25<01:02,  5.74it/s]
 10%|█         | 42/401 [00:26<01:02,  5.74it/s]
 11%|█         | 43/401 [00:26<01:03,  5.64it/s]
 11%|█         | 44/401 [00:26<00:57,  6.17it/s]
 11%|█▏        | 46/401 [00:26<00:54,  6.49it/s]
 12%|█▏        | 47/401 [00:26<00:55,  6.41it/s]
 12%|█▏        | 48/401 [00:27<01:03,  5.59it/s]
 12%|█▏        | 49/401 [00:27<01:01,  5.71it/s]
 13%|█▎        | 52/401 [00:27<00:35,  9.79it/s]
 13%|█▎        | 54/401 [00:27<00:35,  9.65it/s]
 14%|█▍        | 56/401 [00:28<01:02,  5.56it/s]
 14%|█▍        | 57/401 [00:28<00:57,  6.01it/s]
 15%|█▍        | 59/401 [00:28<01:11,  4.80it/s]
 15%|█▍        | 60/401 [00:28<01:06,  5.16it/s]
 15%|█▌        | 62/401 [00:29<00:59,  5.74it/s]
 16%|█▌        | 63/401 [00:29<00:58,  5.76it/s]
 16%|█▌        | 64/401 [00:29<00:57,  5.85it/s]
 16%|█▌        | 65/401 [00:29<00:57,  5.88it/s]
 16%|█▋        | 66/401 [00:29<00:54,  6.13it/s]
 17%|█▋        | 68/401 [00:30<00:38,  8.54it/s]
 17%|█▋        | 70/401 [00:30<00:34,  9.68it/s]
 18%|█▊        | 72/401 [00:30<00:33,  9.89it/s]
 18%|█▊        | 74/401 [00:30<00:30, 10.72it/s]
 19%|█▉        | 76/401 [00:30<00:31, 10.21it/s]
 19%|█▉        | 78/401 [00:30<00:29, 10.99it/s]
 20%|█▉        | 80/401 [00:31<00:30, 10.44it/s]
 20%|██        | 82/401 [00:31<00:28, 11.13it/s]
 21%|██        | 84/401 [00:31<00:29, 10.59it/s]
 21%|██▏       | 86/401 [00:31<00:27, 11.34it/s]
 22%|██▏       | 88/401 [00:32<00:49,  6.26it/s]
 22%|██▏       | 89/401 [00:32<00:49,  6.36it/s]
 23%|██▎       | 91/401 [00:32<00:38,  8.05it/s]
 23%|██▎       | 93/401 [00:32<00:36,  8.55it/s]
 24%|██▎       | 95/401 [00:33<00:39,  7.74it/s]
 24%|██▍       | 96/401 [00:33<00:38,  7.99it/s]
 24%|██▍       | 97/401 [00:33<00:37,  8.22it/s]
 24%|██▍       | 98/401 [00:33<00:36,  8.20it/s]
 25%|██▍       | 100/401 [00:33<00:28, 10.63it/s]
 25%|██▌       | 102/401 [00:33<00:24, 12.41it/s]
 26%|██▌       | 104/401 [00:33<00:34,  8.61it/s]
 26%|██▋       | 106/401 [00:34<00:29,  9.97it/s]
 27%|██▋       | 108/401 [00:34<00:32,  9.13it/s]
 27%|██▋       | 110/401 [00:34<00:27, 10.39it/s]
 28%|██▊       | 112/401 [00:34<00:28, 10.02it/s]
 28%|██▊       | 114/401 [00:34<00:28, 10.02it/s]
 29%|██▉       | 116/401 [00:35<00:26, 10.94it/s]
 29%|██▉       | 118/401 [00:35<00:28, 10.02it/s]
 30%|██▉       | 120/401 [00:35<00:26, 10.71it/s]
 30%|███       | 122/401 [00:35<00:24, 11.32it/s]
 31%|███       | 124/401 [00:35<00:29,  9.45it/s]
 31%|███▏      | 126/401 [00:36<00:33,  8.12it/s]
 32%|███▏      | 127/401 [00:36<00:34,  7.89it/s]
 32%|███▏      | 128/401 [00:36<00:35,  7.70it/s]
 32%|███▏      | 129/401 [00:36<00:33,  8.05it/s]
 32%|███▏      | 130/401 [00:36<00:35,  7.68it/s]
 33%|███▎      | 133/401 [00:37<00:43,  6.10it/s]
 33%|███▎      | 134/401 [00:37<00:40,  6.54it/s]
 34%|███▎      | 135/401 [00:37<00:38,  6.98it/s]
 34%|███▍      | 136/401 [00:37<00:35,  7.44it/s]
 34%|███▍      | 138/401 [00:37<00:30,  8.66it/s]
 35%|███▍      | 140/401 [00:37<00:24, 10.82it/s]
 35%|███▌      | 142/401 [00:38<00:30,  8.56it/s]
 36%|███▌      | 144/401 [00:38<00:35,  7.20it/s]
 36%|███▋      | 146/401 [00:38<00:29,  8.78it/s]
 37%|███▋      | 148/401 [00:39<00:40,  6.19it/s]
 37%|███▋      | 149/401 [00:39<00:38,  6.63it/s]
 37%|███▋      | 150/401 [00:39<00:35,  7.05it/s]
 38%|███▊      | 151/401 [00:39<00:35,  7.04it/s]
 38%|███▊      | 152/401 [00:39<00:33,  7.52it/s]
 38%|███▊      | 153/401 [00:40<00:40,  6.06it/s]
 38%|███▊      | 154/401 [00:40<00:39,  6.27it/s]
 39%|███▊      | 155/401 [00:40<00:38,  6.40it/s]
 39%|███▉      | 156/401 [00:40<00:37,  6.52it/s]
 39%|███▉      | 157/401 [00:40<00:36,  6.63it/s]
 40%|███▉      | 159/401 [00:40<00:26,  9.04it/s]
 40%|███▉      | 160/401 [00:40<00:33,  7.16it/s]
 40%|████      | 162/401 [00:41<00:27,  8.81it/s]
 41%|████      | 164/401 [00:41<00:21, 10.84it/s]
 41%|████▏     | 166/401 [00:41<00:22, 10.33it/s]
 42%|████▏     | 168/401 [00:41<00:22, 10.27it/s]
 42%|████▏     | 170/401 [00:41<00:23,  9.98it/s]
 43%|████▎     | 172/401 [00:42<00:29,  7.82it/s]
 43%|████▎     | 173/401 [00:42<00:28,  8.09it/s]
 43%|████▎     | 174/401 [00:42<00:27,  8.31it/s]
 44%|████▎     | 175/401 [00:42<00:26,  8.52it/s]
 44%|████▍     | 176/401 [00:42<00:25,  8.70it/s]
 44%|████▍     | 177/401 [00:42<00:27,  8.08it/s]
 44%|████▍     | 178/401 [00:42<00:26,  8.35it/s]
 45%|████▍     | 179/401 [00:43<00:25,  8.58it/s]
 45%|████▍     | 180/401 [00:43<00:24,  8.90it/s]
 45%|████▌     | 181/401 [00:43<00:24,  9.14it/s]
 45%|████▌     | 182/401 [00:43<00:23,  9.19it/s]
 46%|████▌     | 184/401 [00:43<00:19, 11.07it/s]
 46%|████▋     | 186/401 [00:43<00:17, 12.30it/s]
 47%|████▋     | 188/401 [00:43<00:18, 11.38it/s]
 47%|████▋     | 190/401 [00:43<00:16, 12.41it/s]
 48%|████▊     | 192/401 [00:44<00:40,  5.11it/s]
 48%|████▊     | 193/401 [00:44<00:38,  5.44it/s]
 48%|████▊     | 194/401 [00:45<00:41,  4.96it/s]
 49%|████▉     | 196/401 [00:45<00:45,  4.50it/s]
 49%|████▉     | 197/401 [00:47<01:57,  1.73it/s]
 50%|████▉     | 199/401 [00:48<01:32,  2.18it/s]
 50%|████▉     | 200/401 [00:48<01:30,  2.21it/s]
 50%|█████     | 201/401 [00:49<01:30,  2.21it/s]
 50%|█████     | 202/401 [00:49<01:28,  2.24it/s]
 51%|█████     | 203/401 [00:49<01:28,  2.23it/s]
 51%|█████     | 204/401 [00:50<01:28,  2.23it/s]
 51%|█████▏    | 206/401 [00:50<01:09,  2.79it/s]
 52%|█████▏    | 207/401 [00:51<01:13,  2.63it/s]
 52%|█████▏    | 208/401 [00:51<01:16,  2.52it/s]
 52%|█████▏    | 209/401 [00:52<01:15,  2.53it/s]
 52%|█████▏    | 210/401 [00:52<01:17,  2.45it/s]
 53%|█████▎    | 211/401 [00:53<01:25,  2.21it/s]
 53%|█████▎    | 212/401 [00:53<01:15,  2.49it/s]
 53%|█████▎    | 213/401 [00:53<01:24,  2.23it/s]
 53%|█████▎    | 214/401 [00:55<02:16,  1.37it/s]
 54%|█████▎    | 215/401 [00:55<01:46,  1.74it/s]
 54%|█████▍    | 216/401 [00:56<01:57,  1.57it/s]
 54%|█████▍    | 218/401 [00:56<01:12,  2.51it/s]
 55%|█████▍    | 219/401 [00:56<01:03,  2.86it/s]
 55%|█████▍    | 220/401 [00:56<00:56,  3.22it/s]
 55%|█████▌    | 221/401 [00:57<01:07,  2.68it/s]
 55%|█████▌    | 222/401 [00:57<00:58,  3.08it/s]
 56%|█████▌    | 224/401 [00:58<00:45,  3.87it/s]
 56%|█████▌    | 225/401 [00:58<00:38,  4.52it/s]
 56%|█████▋    | 226/401 [00:58<00:33,  5.26it/s]
 57%|█████▋    | 228/401 [00:58<00:44,  3.92it/s]
 57%|█████▋    | 229/401 [00:59<00:40,  4.24it/s]
 57%|█████▋    | 230/401 [00:59<00:39,  4.37it/s]
 58%|█████▊    | 231/401 [00:59<00:35,  4.80it/s]
 58%|█████▊    | 232/401 [00:59<00:38,  4.44it/s]
 58%|█████▊    | 234/401 [01:02<02:15,  1.24it/s]
 59%|█████▊    | 235/401 [01:03<01:54,  1.45it/s]
 59%|█████▉    | 236/401 [01:03<01:29,  1.84it/s]
 59%|█████▉    | 237/401 [01:03<01:16,  2.13it/s]
 59%|█████▉    | 238/401 [01:03<01:02,  2.59it/s]
 60%|█████▉    | 239/401 [01:03<00:54,  2.99it/s]
 60%|██████    | 241/401 [01:04<00:33,  4.79it/s]
 61%|██████    | 243/401 [01:04<00:39,  3.99it/s]
 61%|██████    | 244/401 [01:05<00:41,  3.75it/s]
 61%|██████▏   | 246/401 [01:05<00:32,  4.83it/s]
 62%|██████▏   | 247/401 [01:05<00:31,  4.84it/s]
 62%|██████▏   | 248/401 [01:05<00:27,  5.47it/s]
 62%|██████▏   | 249/401 [01:06<00:54,  2.77it/s]
 63%|██████▎   | 254/401 [01:06<00:21,  6.97it/s]
 64%|██████▍   | 256/401 [01:07<00:39,  3.66it/s]
 65%|██████▍   | 260/401 [01:07<00:23,  5.96it/s]
 65%|██████▌   | 262/401 [01:08<00:25,  5.42it/s]
 66%|██████▌   | 265/401 [01:08<00:18,  7.44it/s]
 67%|██████▋   | 268/401 [01:08<00:14,  9.41it/s]
 67%|██████▋   | 270/401 [01:09<00:21,  6.03it/s]
 68%|██████▊   | 273/401 [01:09<00:16,  7.96it/s]
 69%|██████▊   | 275/401 [01:09<00:14,  8.80it/s]
 69%|██████▉   | 277/401 [01:10<00:16,  7.35it/s]
 70%|██████▉   | 279/401 [01:10<00:15,  8.11it/s]
 70%|███████   | 281/401 [01:10<00:15,  7.73it/s]
 71%|███████   | 283/401 [01:10<00:17,  6.91it/s]
 71%|███████   | 285/401 [01:11<00:14,  7.83it/s]
 72%|███████▏  | 288/401 [01:11<00:10, 10.34it/s]
 73%|███████▎  | 291/401 [01:11<00:12,  8.56it/s]
 73%|███████▎  | 293/401 [01:12<00:22,  4.90it/s]
 73%|███████▎  | 294/401 [01:13<00:27,  3.91it/s]
 74%|███████▍  | 296/401 [01:13<00:21,  4.92it/s]
 75%|███████▍  | 299/401 [01:14<00:24,  4.22it/s]
 75%|███████▌  | 301/401 [01:14<00:18,  5.31it/s]
 76%|███████▌  | 304/401 [01:14<00:18,  5.13it/s]
 76%|███████▋  | 306/401 [01:15<00:15,  6.23it/s]
 77%|███████▋  | 308/401 [01:15<00:14,  6.48it/s]
 77%|███████▋  | 309/401 [01:15<00:17,  5.39it/s]
 78%|███████▊  | 311/401 [01:15<00:13,  6.48it/s]
 78%|███████▊  | 313/401 [01:15<00:11,  7.84it/s]
 79%|███████▊  | 315/401 [01:16<00:09,  9.10it/s]
 79%|███████▉  | 318/401 [01:16<00:07, 11.26it/s]
 80%|███████▉  | 320/401 [01:16<00:09,  8.91it/s]
 80%|████████  | 322/401 [01:17<00:10,  7.48it/s]
 81%|████████  | 323/401 [01:17<00:15,  5.14it/s]
 81%|████████  | 324/401 [01:17<00:19,  3.97it/s]
 81%|████████  | 325/401 [01:18<00:23,  3.27it/s]
 81%|████████▏ | 326/401 [01:18<00:20,  3.64it/s]
 82%|████████▏ | 328/401 [01:18<00:14,  5.08it/s]
 82%|████████▏ | 329/401 [01:20<00:31,  2.28it/s]
 82%|████████▏ | 330/401 [01:20<00:32,  2.22it/s]
 83%|████████▎ | 331/401 [01:20<00:26,  2.66it/s]
 83%|████████▎ | 332/401 [01:21<00:28,  2.44it/s]
 83%|████████▎ | 333/401 [01:21<00:29,  2.30it/s]
 84%|████████▎ | 335/401 [01:22<00:23,  2.76it/s]
 84%|████████▍ | 336/401 [01:22<00:25,  2.51it/s]
 84%|████████▍ | 338/401 [01:22<00:16,  3.78it/s]
 85%|████████▌ | 341/401 [01:23<00:10,  5.91it/s]
 86%|████████▌ | 343/401 [01:23<00:08,  6.90it/s]
 86%|████████▌ | 344/401 [01:23<00:08,  6.44it/s]
 86%|████████▋ | 346/401 [01:23<00:08,  6.87it/s]
 87%|████████▋ | 348/401 [01:24<00:09,  5.61it/s]
 87%|████████▋ | 350/401 [01:24<00:11,  4.57it/s]
 88%|████████▊ | 351/401 [01:25<00:13,  3.70it/s]
 89%|████████▊ | 355/401 [01:25<00:06,  6.68it/s]
 89%|████████▉ | 357/401 [01:26<00:09,  4.52it/s]
 90%|████████▉ | 359/401 [01:27<00:11,  3.71it/s]
 90%|████████▉ | 360/401 [01:27<00:14,  2.88it/s]
 90%|█████████ | 361/401 [01:28<00:12,  3.20it/s]
 91%|█████████ | 363/401 [01:28<00:08,  4.40it/s]
 91%|█████████ | 365/401 [01:28<00:06,  5.22it/s]
 92%|█████████▏| 367/401 [01:28<00:05,  6.00it/s]
 92%|█████████▏| 369/401 [01:28<00:05,  6.09it/s]
 92%|█████████▏| 370/401 [01:29<00:05,  5.95it/s]
 93%|█████████▎| 371/401 [01:29<00:05,  5.89it/s]
 93%|█████████▎| 373/401 [01:29<00:04,  6.69it/s]
 93%|█████████▎| 374/401 [01:29<00:04,  6.38it/s]
 94%|█████████▎| 375/401 [01:29<00:04,  6.22it/s]
 94%|█████████▍| 376/401 [01:30<00:06,  3.91it/s]
 94%|█████████▍| 378/401 [01:31<00:06,  3.56it/s]
 95%|█████████▍| 379/401 [01:31<00:07,  3.00it/s]
 95%|█████████▍| 380/401 [01:31<00:06,  3.38it/s]
 95%|█████████▌| 382/401 [01:32<00:05,  3.42it/s]
 96%|█████████▌| 383/401 [01:32<00:06,  2.87it/s]
 96%|█████████▌| 384/401 [01:33<00:06,  2.71it/s]
 96%|█████████▌| 385/401 [01:33<00:06,  2.48it/s]
 97%|█████████▋| 387/401 [01:34<00:05,  2.41it/s]
 97%|█████████▋| 389/401 [01:34<00:03,  3.40it/s]
 97%|█████████▋| 390/401 [01:35<00:03,  3.26it/s]
 98%|█████████▊| 393/401 [01:35<00:01,  5.51it/s]
 98%|█████████▊| 394/401 [01:35<00:01,  5.20it/s]
 99%|█████████▊| 395/401 [01:35<00:01,  4.52it/s]
 99%|█████████▉| 397/401 [01:36<00:00,  5.13it/s]
100%|█████████▉| 399/401 [01:36<00:00,  4.62it/s]
100%|██████████| 401/401 [01:36<00:00,  5.79it/s]
100%|██████████| 401/401 [01:36<00:00,  4.14it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:46:32.542655_ae_processed_test.json', '--output_addr', 'data/out/rag/asym/ae_rag_lp_sc_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  9.43 examples/s]
Generating train split: 401 examples [00:00, 1777.29 examples/s]
INFO 07-09 14:48:35 config.py:510] This model supports multiple tasks: {'embed', 'classify', 'generate', 'reward', 'score'}. Defaulting to 'generate'.
INFO 07-09 14:48:35 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:48:36 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:48:37 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:48:38 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:01,  1.66it/s]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.57it/s]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.60it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.57it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.58it/s]

INFO 07-09 14:48:41 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:48:43 worker.py:241] Memory profiling takes 2.13 seconds
INFO 07-09 14:48:43 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:48:43 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:48:43 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:48:43 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:48:46 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:12,  2.73it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:11,  2.86it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:01<00:10,  2.95it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:10,  2.98it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:10,  2.97it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:02<00:09,  2.94it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:02<00:09,  2.95it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:09,  2.97it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:03<00:08,  2.92it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:03<00:08,  2.91it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:08,  2.97it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:04<00:07,  2.99it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:04<00:07,  2.98it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:04<00:07,  2.98it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:05<00:06,  3.00it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:05<00:06,  3.01it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:05<00:05,  3.05it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:06<00:05,  3.08it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:06<00:05,  3.09it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:06<00:04,  3.07it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:06<00:04,  3.10it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:07<00:04,  3.13it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:07<00:03,  3.17it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:07<00:03,  3.16it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:08<00:03,  3.13it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:08<00:02,  3.13it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:08<00:02,  3.15it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:09<00:02,  3.18it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:09<00:01,  3.20it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:09<00:01,  3.17it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:10<00:01,  3.16it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:10<00:00,  3.18it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:10<00:00,  3.14it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:11<00:00,  3.19it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:11<00:00,  3.19it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:11<00:00,  3.07it/s]
INFO 07-09 14:48:57 model_runner.py:1535] Graph capturing finished in 11 secs, took 0.22 GiB
INFO 07-09 14:48:57 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 16.33 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Writing rule which states that two causes for the same superpower is bad writing I've read somewhere that there is this writing rule stating that, for some superpower, it would be less believable if two completely different settings are present in order to obtain the same superpower. In the article, I remember it mentioned in the movie Spiderman (which I've not watched), the protagonist and another character gain the power through different means.What's this rule and does it have a name?

Is 'Sold Count' a good term I am writing a technical document, and in it I want to refer to the number of units sold for each product. I want to make it concise, and 'sold count' comes to mind. Does this term sound right? Are there better alternatives?

Exercise with pulmonary stenosis I have mild congenital pulmonary stenosis, which Wikipedia defines as:  outflow of blood from the right ventricle of the heart is obstructed  at the level of the pulmonic valve. This results in the reduction of  flow of blood to the lungs.It doesn't affect me at all in my daily life. Recently I thought I should start regular exercises, so I try to jog from time to time. What I want to ask are:How to tell if I am just using that as an excuse or am I really at my limit? My jogging habits are always run a little, walk a little, run a little, walk a little. I guess I switch when I am slightly out of breath.I understand these are more medical related, but none of the doctors I have visited can tell me anything in depth.Is there a particular type of exercises that are good for people like me?Would weight training be related to this at all?

Can I sleep on a airplane tray table? Or rather, how heavy can the airplane tray table support?I am afraid that if I use one of those flight pillows (https://familyshop.notyourchild.com/products/travelsky-inflatable-travel-pillow-foldable-for-airplanes-train-sleeping-flocking-pvc-soft-head-neck-rest-support-travel-pillows-2) and assert my upper body onto the tray, it might break.
# Current post question:
Are the two music notes a reference?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
How to trick the reader into thinking they're following a redshirt instead of the protagonist? I'm currently planning a "magical girl" story, and I thought of an interesting way to start it, rather than launching straight into the backstory. It opens with a woman in her mid-thirties, complete with ponytail of death, walking through a city market while being stalked by a shadowy monster.What I want readers to expect is that the woman is either going to be killed by the monster, or saved from it in the nick of time by the heroine. What actually happens is that when the monster finally attacks, the woman transforms into a magical girl, beats the everloving crap out of the monster, and then destroys it with a magical laser beam. Surprise! She is the heroine.I want to try and preserve this surprise as best I can, and make the readers think they're following a redshirt or one-off character instead of the protagonist. Not referring to her by name until after the reveal will help, but it's probably not enough. What else can I do to achieve this?(I'm aware of answers on other questions to the effect of "don't trick your readers". In my case, this is supposed to be a pleasant surprise, so I feel like it's okay.)

How should my script refer to a character who's currently disguised as another character? I've recently resumed writing a series of scripts for an anime I've been planning. One of the characters has the ability to shape-shift, and there are several scenes in which she initially appears disguised as another character, before shape-shifting back into her normal self.So far, when writing these scenes, I've referred to the character using the name of the person she's disguised as, and only switched back to her real name after she transforms back again. However, the top answers to these questions suggest that I shouldn't do that; scripts are production documents, and it's imperative that the crew know exactly who's supposed to be in each scene, hence I should always refer to characters by their real names.But in the case of a character who's disguised as another character, how do I do this while also making it clear that they're pretending to be someone else right now?

How to avoid constantly starting paragraphs with "The character did this" "The character did that"? This is one of the tics I've noticed in my writing recently, and it's starting to bug me. Almost every single one of my paragraphs, particularly during dialogue sequences, starts with "The character did this". The main exceptions are when I use "'Quote', attribution, 'continuance'" instead.Here's a brief example:"I'll come visit you every now and again, if I'm not too busy," said Electron.Colin smiled. "I'm sure the other patients will appreciate that as well," he said. "You been to the children's ward yet?""Not yet," said Electron. "I think I'll leave that for last. The kids won't want me to go, you know?"Colin nodded. "You're a good man, Electron," he said. "I think we're gonna get along just fine. It's a pleasure to have you in my city."Electron returned the mayor's smile. "It's a pleasure to be here," he said.How do I get out of this habit? Or is this not worth worrying about?

Protagonist constantly has to have long words explained to her. Will this get tedious? A while back, I redrafted my NaNoWriMo 2017 story, but it still needs another draft. This question is about one of the concerns I have.The story takes place in a medieval fantasy setting, and the protagonist is a homeless orphan of about fourteen. As a result, she has a somewhat limited education, and at various points has to have long or complex words explained to her. At first I inserted these moments in order to underscore her limited education, but I kept on inserting them in order to pad things out just that little bit more.An example: the villain, whose thieves' guild the protagonist has infiltrated, is describing their master plan, and refers to a "network of clandestine tunnels" under the city. The protagonist's partner notices her confusion, leans over, and whispers, "'Clandestine' means 'secret'".I don't have access to the full draft right now, but off the top of my head, this happens at least six times in the space of 41,000 words, including once during what's supposed to be a very dramatic and emotional climax. I'm worrying that this is too frequent, and that it might get tedious or distract from the story somewhat. Will it? Or am I overthinking it?
# Current post question:
How come Neiru hasn't revived her sister yet?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
are what we translate as "adjectives", "nouns", etc, the same kind of words in no indo-european languages? This question comes from questions in japanese SE. Keiyōshi 形容詞 are translated as adjectives. Meishi 名詞 are translated as nouns. But are they really the same kind of words that we mean with nouns, adjectives, etc. in English? I've already found 3 examples that arises a lot of doubts in me if they are the same thing. The first is a japanese word that I can't remember right now but that I've seen used as a noun, adjective or verb. May be there are words like these in English or Spanish, but I'm not sure if they are the same. For example the word paddle can be a verb, a noun or an adjective in English. The second is japanese words that they see as a noun and that we see as adjectives. The word "next" for japaneses is a clear noun. They know that it can be used as an adjective, but when giving an example of when it is used as a noun (what it really is according to japanese), I got this "when is the next?" that is a sentence that could come in a conversation between 2 persons about events , and one of them ask the other "when is the next (event)?" . wouldnt it be for english speakers, still an adjective because it modifies an implicit noun (event)? And the third is the word "suki" and similar words, that they see as a verb and it's translated as "to like" but it is used next to the verb desu (to be) So my question is, are what we translate as adjectives, verbs, etc, from other non indoeuropean languages, really what we understand as verbs, adjectives, etc?

Did Maradona ever score a goal with his right foot? I was hearing one of Pele's declaration stating Maradona couldn't score goals with his right foot. I thought he was talking in general, but then I started to think about goals made by him with his right foot and I couldn't remember any. I made a little research about this and I couldn't find any goal scored by him with his right foot, even though I clearly didn't watch all 300+ goals he made in his career (I'm not sure if all of them were recorded on TV by the way).I also remembered he used to kick the ball to the center of the field with his left foot even when he was in the right side of the field, giving the pass with a "Rabona" instead of with his right foot, because he was too much of a left-footed player. So, did he ever score a goal with his right foot, or did he never score one this way?

Which are the canonical sources for reading about Isa in Islam? Once I've read that Islam says Isa is going to return to Earth and fight a war. This is a different version of character personality that's given for Jesus in christianity were he says "Put your sword back in its place. for all who draw the sword will die by the sword". (I suppose Islam doesnt see the source where is quoted him saying that as a true source since it seems to be contradictory with someone later returning to fight a war) . I'm interested to read more about him in Islam to see how different they are portraited 

Did the italian parliament deny what mayor of Alzano Lombardo say about people in his city not being hospitalized because hospitals are full? There is a report from Italy in many webpage which says  "There are many elderly people at home with breathing difficulties.  They are not hospitalized because the hospitals are full" said the  mayor of Alzano Lombardo Carmelo BertocchiCoronavirus updateSome italians in forums say this is an hoax and one said the italian parliament denied this. Is there any record of the italian parliament denying this statement by Alzano Lombardo mayor?
# Current post question:
Was Saitama sweating with worry when he saw Garou in this scene?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/401 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/401 [00:18<2:06:04, 18.91s/it, est. speed input: 49.50 toks/s, output: 5.29 toks/s]
Processed prompts:   0%|          | 2/401 [00:19<53:10,  8.00s/it, est. speed input: 87.29 toks/s, output: 10.74 toks/s] 
Processed prompts:   1%|          | 4/401 [00:19<20:24,  3.09s/it, est. speed input: 159.44 toks/s, output: 21.79 toks/s]
Processed prompts:   1%|▏         | 6/401 [00:19<11:09,  1.69s/it, est. speed input: 294.50 toks/s, output: 32.90 toks/s]
Processed prompts:   2%|▏         | 10/401 [00:20<05:00,  1.30it/s, est. speed input: 422.01 toks/s, output: 55.23 toks/s]
Processed prompts:   3%|▎         | 12/401 [00:20<03:38,  1.78it/s, est. speed input: 499.62 toks/s, output: 66.47 toks/s]
Processed prompts:   3%|▎         | 14/401 [00:20<02:48,  2.30it/s, est. speed input: 555.32 toks/s, output: 77.20 toks/s]
Processed prompts:   4%|▍         | 16/401 [00:20<02:03,  3.11it/s, est. speed input: 609.90 toks/s, output: 88.47 toks/s]
Processed prompts:   4%|▍         | 18/401 [00:20<01:38,  3.90it/s, est. speed input: 688.74 toks/s, output: 99.23 toks/s]
Processed prompts:   5%|▌         | 21/401 [00:21<01:05,  5.82it/s, est. speed input: 845.72 toks/s, output: 116.15 toks/s]
Processed prompts:   6%|▌         | 24/401 [00:21<00:52,  7.19it/s, est. speed input: 950.53 toks/s, output: 132.25 toks/s]
Processed prompts:   7%|▋         | 28/401 [00:21<00:38,  9.67it/s, est. speed input: 1088.23 toks/s, output: 154.16 toks/s]
Processed prompts:   8%|▊         | 31/401 [00:21<00:35, 10.31it/s, est. speed input: 1242.44 toks/s, output: 169.74 toks/s]
Processed prompts:   9%|▊         | 35/401 [00:21<00:28, 12.64it/s, est. speed input: 1386.47 toks/s, output: 191.32 toks/s]
Processed prompts:   9%|▉         | 38/401 [00:22<00:33, 10.71it/s, est. speed input: 1560.48 toks/s, output: 205.13 toks/s]
Processed prompts:  10%|▉         | 40/401 [00:22<00:34, 10.59it/s, est. speed input: 1666.86 toks/s, output: 214.85 toks/s]
Processed prompts:  10%|█         | 42/401 [00:22<00:34, 10.35it/s, est. speed input: 1731.90 toks/s, output: 224.38 toks/s]
Processed prompts:  11%|█         | 44/401 [00:22<00:35, 10.04it/s, est. speed input: 1789.12 toks/s, output: 233.79 toks/s]
Processed prompts:  11%|█▏        | 46/401 [00:23<00:34, 10.39it/s, est. speed input: 1856.42 toks/s, output: 243.55 toks/s]
Processed prompts:  12%|█▏        | 50/401 [00:23<00:32, 10.76it/s, est. speed input: 2063.73 toks/s, output: 262.62 toks/s]
Processed prompts:  13%|█▎        | 54/401 [00:23<00:33, 10.38it/s, est. speed input: 2150.19 toks/s, output: 280.66 toks/s]
Processed prompts:  14%|█▍        | 58/401 [00:24<00:31, 10.78it/s, est. speed input: 2254.60 toks/s, output: 299.03 toks/s]
Processed prompts:  15%|█▌        | 62/401 [00:24<00:27, 12.32it/s, est. speed input: 2367.14 toks/s, output: 318.51 toks/s]
Processed prompts:  16%|█▌        | 64/401 [00:24<00:30, 11.14it/s, est. speed input: 2451.72 toks/s, output: 326.41 toks/s]
Processed prompts:  17%|█▋        | 69/401 [00:25<00:27, 11.92it/s, est. speed input: 2569.47 toks/s, output: 349.30 toks/s]
Processed prompts:  18%|█▊        | 74/401 [00:25<00:26, 12.15it/s, est. speed input: 2710.29 toks/s, output: 371.38 toks/s]
Processed prompts:  19%|█▉        | 78/401 [00:25<00:27, 11.65it/s, est. speed input: 2816.67 toks/s, output: 387.84 toks/s]
Processed prompts:  20%|██        | 82/401 [00:26<00:25, 12.62it/s, est. speed input: 2920.11 toks/s, output: 405.88 toks/s]
Processed prompts:  21%|██        | 85/401 [00:26<00:25, 12.48it/s, est. speed input: 3001.73 toks/s, output: 418.38 toks/s]
Processed prompts:  22%|██▏       | 87/401 [00:26<00:25, 12.42it/s, est. speed input: 3056.16 toks/s, output: 426.70 toks/s]
Processed prompts:  22%|██▏       | 89/401 [00:26<00:27, 11.23it/s, est. speed input: 3134.67 toks/s, output: 433.73 toks/s]
Processed prompts:  23%|██▎       | 93/401 [00:27<00:27, 11.07it/s, est. speed input: 3237.31 toks/s, output: 449.40 toks/s]
Processed prompts:  24%|██▍       | 96/401 [00:27<00:26, 11.30it/s, est. speed input: 3282.88 toks/s, output: 461.42 toks/s]
Processed prompts:  25%|██▍       | 99/401 [00:27<00:22, 13.67it/s, est. speed input: 3401.57 toks/s, output: 475.82 toks/s]
Processed prompts:  26%|██▌       | 103/401 [00:27<00:24, 12.08it/s, est. speed input: 3530.03 toks/s, output: 490.42 toks/s]
Processed prompts:  27%|██▋       | 108/401 [00:28<00:22, 13.25it/s, est. speed input: 3619.40 toks/s, output: 511.49 toks/s]
Processed prompts:  29%|██▊       | 115/401 [00:28<00:23, 12.32it/s, est. speed input: 3793.97 toks/s, output: 537.23 toks/s]
Processed prompts:  29%|██▉       | 117/401 [00:28<00:22, 12.60it/s, est. speed input: 3850.12 toks/s, output: 545.20 toks/s]
Processed prompts:  30%|██▉       | 120/401 [00:29<00:23, 11.83it/s, est. speed input: 3944.50 toks/s, output: 555.32 toks/s]
Processed prompts:  31%|███       | 124/401 [00:29<00:22, 12.43it/s, est. speed input: 4042.51 toks/s, output: 570.83 toks/s]
Processed prompts:  32%|███▏      | 129/401 [00:29<00:21, 12.43it/s, est. speed input: 4174.38 toks/s, output: 589.09 toks/s]
Processed prompts:  33%|███▎      | 131/401 [00:30<00:20, 12.87it/s, est. speed input: 4212.47 toks/s, output: 596.98 toks/s]
Processed prompts:  33%|███▎      | 133/401 [00:30<00:21, 12.33it/s, est. speed input: 4226.83 toks/s, output: 603.67 toks/s]
Processed prompts:  34%|███▍      | 136/401 [00:30<00:21, 12.17it/s, est. speed input: 4299.00 toks/s, output: 614.22 toks/s]
Processed prompts:  35%|███▌      | 141/401 [00:30<00:22, 11.58it/s, est. speed input: 4376.27 toks/s, output: 630.78 toks/s]
Processed prompts:  37%|███▋      | 147/401 [00:31<00:16, 15.55it/s, est. speed input: 4498.12 toks/s, output: 657.58 toks/s]
Processed prompts:  38%|███▊      | 153/401 [00:31<00:12, 20.55it/s, est. speed input: 4692.86 toks/s, output: 685.83 toks/s]
Processed prompts:  40%|███▉      | 160/401 [00:31<00:08, 26.90it/s, est. speed input: 4918.42 toks/s, output: 719.68 toks/s]
Processed prompts:  42%|████▏     | 168/401 [00:31<00:06, 34.54it/s, est. speed input: 5175.24 toks/s, output: 759.11 toks/s]
Processed prompts:  45%|████▌     | 181/401 [00:31<00:04, 50.40it/s, est. speed input: 5604.50 toks/s, output: 826.10 toks/s]
Processed prompts:  47%|████▋     | 189/401 [00:31<00:03, 54.28it/s, est. speed input: 5853.65 toks/s, output: 866.55 toks/s]
Processed prompts:  50%|█████     | 201/401 [00:31<00:03, 66.45it/s, est. speed input: 6209.21 toks/s, output: 929.48 toks/s]
Processed prompts:  52%|█████▏    | 210/401 [00:32<00:03, 59.60it/s, est. speed input: 6511.79 toks/s, output: 974.33 toks/s]
Processed prompts:  54%|█████▍    | 217/401 [00:32<00:04, 43.71it/s, est. speed input: 6706.66 toks/s, output: 1005.82 toks/s]
Processed prompts:  56%|█████▌    | 223/401 [00:32<00:04, 43.16it/s, est. speed input: 6849.45 toks/s, output: 1036.97 toks/s]
Processed prompts:  57%|█████▋    | 229/401 [00:32<00:04, 43.00it/s, est. speed input: 7027.62 toks/s, output: 1068.72 toks/s]
Processed prompts:  58%|█████▊    | 234/401 [00:32<00:05, 31.06it/s, est. speed input: 7101.25 toks/s, output: 1089.71 toks/s]
Processed prompts:  59%|█████▉    | 238/401 [00:33<00:05, 29.04it/s, est. speed input: 7168.06 toks/s, output: 1109.50 toks/s]
Processed prompts:  60%|██████    | 242/401 [00:33<00:05, 27.56it/s, est. speed input: 7260.29 toks/s, output: 1125.38 toks/s]
Processed prompts:  61%|██████▏   | 246/401 [00:33<00:05, 28.09it/s, est. speed input: 7396.31 toks/s, output: 1143.79 toks/s]
Processed prompts:  62%|██████▏   | 250/401 [00:33<00:07, 20.87it/s, est. speed input: 7483.25 toks/s, output: 1156.00 toks/s]
Processed prompts:  63%|██████▎   | 253/401 [00:34<00:08, 18.45it/s, est. speed input: 7564.26 toks/s, output: 1164.94 toks/s]
Processed prompts:  64%|██████▍   | 256/401 [00:34<00:08, 16.14it/s, est. speed input: 7583.02 toks/s, output: 1167.32 toks/s]
Processed prompts:  64%|██████▍   | 258/401 [00:34<00:08, 15.99it/s, est. speed input: 7642.58 toks/s, output: 1173.85 toks/s]
Processed prompts:  65%|██████▍   | 260/401 [00:34<00:09, 14.37it/s, est. speed input: 7636.91 toks/s, output: 1178.58 toks/s]
Processed prompts:  66%|██████▌   | 265/401 [00:34<00:06, 19.68it/s, est. speed input: 7731.40 toks/s, output: 1190.94 toks/s]
Processed prompts:  67%|██████▋   | 269/401 [00:34<00:06, 21.22it/s, est. speed input: 7785.80 toks/s, output: 1199.95 toks/s]
Processed prompts:  68%|██████▊   | 274/401 [00:35<00:05, 23.39it/s, est. speed input: 7951.57 toks/s, output: 1213.79 toks/s]
Processed prompts:  70%|███████   | 281/401 [00:35<00:03, 30.44it/s, est. speed input: 8167.10 toks/s, output: 1238.86 toks/s]
Processed prompts:  71%|███████   | 285/401 [00:35<00:03, 31.98it/s, est. speed input: 8240.43 toks/s, output: 1250.43 toks/s]
Processed prompts:  72%|███████▏  | 290/401 [00:35<00:03, 35.62it/s, est. speed input: 8414.85 toks/s, output: 1266.52 toks/s]
Processed prompts:  74%|███████▍  | 296/401 [00:35<00:02, 41.15it/s, est. speed input: 8561.37 toks/s, output: 1287.84 toks/s]
Processed prompts:  76%|███████▌  | 305/401 [00:35<00:01, 53.55it/s, est. speed input: 8794.42 toks/s, output: 1322.35 toks/s]
Processed prompts:  79%|███████▉  | 316/401 [00:35<00:01, 61.38it/s, est. speed input: 9126.09 toks/s, output: 1365.86 toks/s]
Processed prompts:  81%|████████  | 323/401 [00:35<00:01, 49.67it/s, est. speed input: 9298.91 toks/s, output: 1390.07 toks/s]
Processed prompts:  82%|████████▏ | 329/401 [00:36<00:01, 50.55it/s, est. speed input: 9418.74 toks/s, output: 1412.99 toks/s]
Processed prompts:  86%|████████▋ | 346/401 [00:36<00:00, 77.49it/s, est. speed input: 9902.27 toks/s, output: 1493.21 toks/s]
Processed prompts:  89%|████████▊ | 355/401 [00:36<00:00, 77.34it/s, est. speed input: 10218.43 toks/s, output: 1538.10 toks/s]
Processed prompts:  91%|█████████ | 364/401 [00:36<00:00, 78.69it/s, est. speed input: 10476.45 toks/s, output: 1579.44 toks/s]
Processed prompts:  93%|█████████▎| 373/401 [00:36<00:00, 78.67it/s, est. speed input: 10738.87 toks/s, output: 1622.52 toks/s]
Processed prompts:  95%|█████████▌| 382/401 [00:36<00:00, 61.81it/s, est. speed input: 11052.64 toks/s, output: 1670.45 toks/s]
Processed prompts:  97%|█████████▋| 389/401 [00:36<00:00, 48.86it/s, est. speed input: 11162.52 toks/s, output: 1705.13 toks/s]
Processed prompts:  99%|█████████▊| 395/401 [00:37<00:00, 38.81it/s, est. speed input: 11353.58 toks/s, output: 1731.10 toks/s]
Processed prompts: 100%|█████████▉| 400/401 [00:37<00:00, 24.27it/s, est. speed input: 11407.48 toks/s, output: 1745.49 toks/s]
Processed prompts: 100%|██████████| 401/401 [00:39<00:00, 10.24it/s, est. speed input: 11016.88 toks/s, output: 1692.29 toks/s]
[rank0]:[W709 14:49:39.285836363 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/asym/ae_rag_lp_sc_test_4_output.json
Cleaned temporary files.
Keeping ['ae', 'sc'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:49:42.269465_lp_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:49:42.269465_lp_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:49:42.269465_lp_processed_test.json', '--batch_size', '4']

  0%|          | 0/526 [00:00<?, ?it/s]
  0%|          | 1/526 [00:00<02:24,  3.63it/s]
  1%|          | 3/526 [00:00<00:57,  9.03it/s]
  1%|          | 6/526 [00:00<00:33, 15.35it/s]
  2%|▏         | 8/526 [00:00<00:33, 15.52it/s]
  2%|▏         | 11/526 [00:00<00:26, 19.26it/s]
  3%|▎         | 14/526 [00:01<00:35, 14.36it/s]
  3%|▎         | 16/526 [00:01<00:38, 13.13it/s]
  4%|▎         | 19/526 [00:01<00:31, 16.25it/s]
  4%|▍         | 21/526 [00:01<00:45, 11.01it/s]
  4%|▍         | 23/526 [00:01<00:55,  9.14it/s]
  5%|▍         | 25/526 [00:02<01:42,  4.90it/s]
  5%|▍         | 26/526 [00:03<01:48,  4.60it/s]
  5%|▌         | 28/526 [00:03<01:26,  5.76it/s]
  6%|▌         | 30/526 [00:04<02:34,  3.20it/s]
  6%|▌         | 31/526 [00:05<02:47,  2.96it/s]
  6%|▌         | 32/526 [00:05<02:34,  3.20it/s]
  6%|▋         | 33/526 [00:06<04:12,  1.95it/s]
  6%|▋         | 34/526 [00:07<04:25,  1.85it/s]
  7%|▋         | 35/526 [00:07<05:03,  1.62it/s]
  7%|▋         | 36/526 [00:08<03:59,  2.05it/s]
  7%|▋         | 37/526 [00:08<03:21,  2.43it/s]
  8%|▊         | 40/526 [00:08<01:48,  4.48it/s]
  8%|▊         | 43/526 [00:08<01:32,  5.19it/s]
  9%|▊         | 45/526 [00:09<01:15,  6.41it/s]
  9%|▊         | 46/526 [00:09<01:22,  5.84it/s]
  9%|▉         | 47/526 [00:09<01:20,  5.94it/s]
  9%|▉         | 48/526 [00:09<01:32,  5.18it/s]
 10%|▉         | 50/526 [00:09<01:15,  6.30it/s]
 10%|▉         | 52/526 [00:10<01:02,  7.64it/s]
 10%|█         | 53/526 [00:11<02:43,  2.90it/s]
 10%|█         | 54/526 [00:14<07:56,  1.01s/it]
 11%|█         | 57/526 [00:14<04:09,  1.88it/s]
 11%|█         | 59/526 [00:15<04:10,  1.87it/s]
 11%|█▏        | 60/526 [00:16<04:16,  1.82it/s]
 12%|█▏        | 61/526 [00:16<04:20,  1.78it/s]
 12%|█▏        | 62/526 [00:17<04:30,  1.72it/s]
 12%|█▏        | 63/526 [00:18<05:04,  1.52it/s]
 12%|█▏        | 65/526 [00:18<03:11,  2.40it/s]
 13%|█▎        | 66/526 [00:18<02:47,  2.75it/s]
 13%|█▎        | 67/526 [00:18<02:19,  3.30it/s]
 13%|█▎        | 68/526 [00:19<03:35,  2.12it/s]
 13%|█▎        | 70/526 [00:20<03:34,  2.13it/s]
 13%|█▎        | 71/526 [00:21<03:27,  2.20it/s]
 14%|█▍        | 73/526 [00:21<02:58,  2.53it/s]
 14%|█▍        | 74/526 [00:22<03:47,  1.99it/s]
 14%|█▍        | 76/526 [00:22<02:32,  2.95it/s]
 15%|█▍        | 78/526 [00:23<02:51,  2.62it/s]
 15%|█▌        | 80/526 [00:24<02:16,  3.27it/s]
 16%|█▌        | 84/526 [00:24<01:17,  5.68it/s]
 16%|█▋        | 86/526 [00:25<02:29,  2.95it/s]
 17%|█▋        | 87/526 [00:26<02:13,  3.30it/s]
 17%|█▋        | 88/526 [00:26<02:02,  3.57it/s]
 17%|█▋        | 89/526 [00:26<02:07,  3.43it/s]
 17%|█▋        | 91/526 [00:26<01:33,  4.65it/s]
 17%|█▋        | 92/526 [00:26<01:25,  5.07it/s]
 18%|█▊        | 94/526 [00:26<01:04,  6.67it/s]
 18%|█▊        | 96/526 [00:27<00:59,  7.20it/s]
 18%|█▊        | 97/526 [00:27<01:38,  4.33it/s]
 19%|█▊        | 98/526 [00:30<05:26,  1.31it/s]
 19%|█▉        | 99/526 [00:32<07:16,  1.02s/it]
 19%|█▉        | 101/526 [00:32<04:34,  1.55it/s]
 20%|█▉        | 103/526 [00:32<03:23,  2.08it/s]
 20%|█▉        | 104/526 [00:34<04:24,  1.59it/s]
 20%|██        | 106/526 [00:34<03:00,  2.32it/s]
 21%|██        | 108/526 [00:34<02:16,  3.06it/s]
 21%|██        | 109/526 [00:34<02:04,  3.34it/s]
 21%|██        | 110/526 [00:35<02:17,  3.02it/s]
 21%|██        | 111/526 [00:35<02:27,  2.81it/s]
 21%|██▏       | 112/526 [00:36<02:33,  2.69it/s]
 22%|██▏       | 114/526 [00:36<01:43,  3.99it/s]
 22%|██▏       | 116/526 [00:36<01:14,  5.54it/s]
 23%|██▎       | 119/526 [00:36<00:58,  7.01it/s]
 23%|██▎       | 120/526 [00:36<00:55,  7.32it/s]
 23%|██▎       | 121/526 [00:36<01:00,  6.69it/s]
 24%|██▎       | 124/526 [00:38<01:49,  3.67it/s]
 24%|██▍       | 126/526 [00:38<01:22,  4.84it/s]
 24%|██▍       | 127/526 [00:38<01:17,  5.13it/s]
 24%|██▍       | 128/526 [00:38<01:11,  5.61it/s]
 25%|██▍       | 129/526 [00:38<01:09,  5.73it/s]
 25%|██▍       | 130/526 [00:38<01:07,  5.89it/s]
 25%|██▍       | 131/526 [00:39<01:09,  5.67it/s]
 25%|██▌       | 133/526 [00:39<00:54,  7.26it/s]
 26%|██▌       | 135/526 [00:39<00:44,  8.87it/s]
 26%|██▌       | 136/526 [00:39<00:55,  7.04it/s]
 26%|██▌       | 138/526 [00:39<00:53,  7.23it/s]
 27%|██▋       | 141/526 [00:40<00:37, 10.26it/s]
 27%|██▋       | 143/526 [00:40<00:39,  9.69it/s]
 28%|██▊       | 145/526 [00:40<00:35, 10.77it/s]
 28%|██▊       | 147/526 [00:40<00:41,  9.03it/s]
 28%|██▊       | 149/526 [00:40<00:39,  9.55it/s]
 29%|██▊       | 151/526 [00:40<00:33, 11.26it/s]
 29%|██▉       | 153/526 [00:41<00:29, 12.53it/s]
 29%|██▉       | 155/526 [00:41<01:03,  5.89it/s]
 30%|██▉       | 157/526 [00:42<00:56,  6.56it/s]
 30%|███       | 160/526 [00:42<01:05,  5.59it/s]
 31%|███       | 161/526 [00:42<01:06,  5.50it/s]
 31%|███       | 162/526 [00:44<02:59,  2.03it/s]
 31%|███▏      | 165/526 [00:44<01:46,  3.40it/s]
 32%|███▏      | 167/526 [00:45<01:21,  4.40it/s]
 32%|███▏      | 170/526 [00:45<00:54,  6.53it/s]
 33%|███▎      | 172/526 [00:47<02:14,  2.64it/s]
 33%|███▎      | 174/526 [00:47<01:53,  3.11it/s]
 33%|███▎      | 176/526 [00:47<01:34,  3.72it/s]
 34%|███▍      | 178/526 [00:47<01:14,  4.67it/s]
 34%|███▍      | 180/526 [00:48<01:00,  5.76it/s]
 35%|███▍      | 182/526 [00:49<01:31,  3.75it/s]
 35%|███▍      | 184/526 [00:49<01:27,  3.90it/s]
 35%|███▌      | 186/526 [00:50<02:13,  2.55it/s]
 36%|███▌      | 187/526 [00:51<02:00,  2.82it/s]
 36%|███▌      | 188/526 [00:51<01:47,  3.13it/s]
 36%|███▌      | 190/526 [00:51<01:16,  4.39it/s]
 36%|███▋      | 191/526 [00:51<01:11,  4.70it/s]
 37%|███▋      | 192/526 [00:51<01:04,  5.20it/s]
 37%|███▋      | 196/526 [00:51<00:32, 10.14it/s]
 38%|███▊      | 198/526 [00:52<00:34,  9.53it/s]
 38%|███▊      | 200/526 [00:54<01:56,  2.80it/s]
 38%|███▊      | 202/526 [00:54<01:50,  2.93it/s]
 39%|███▊      | 203/526 [00:55<02:00,  2.67it/s]
 39%|███▉      | 205/526 [00:55<01:25,  3.74it/s]
 39%|███▉      | 207/526 [00:55<01:05,  4.84it/s]
 40%|███▉      | 210/526 [00:55<00:43,  7.24it/s]
 40%|████      | 212/526 [00:56<01:11,  4.39it/s]
 41%|████      | 215/526 [00:56<00:51,  6.08it/s]
 41%|████▏     | 217/526 [00:57<01:16,  4.04it/s]
 41%|████▏     | 218/526 [00:58<01:36,  3.19it/s]
 42%|████▏     | 219/526 [00:58<01:45,  2.90it/s]
 42%|████▏     | 222/526 [00:58<01:05,  4.68it/s]
 43%|████▎     | 224/526 [00:59<00:55,  5.44it/s]
 43%|████▎     | 228/526 [00:59<00:33,  8.99it/s]
 44%|████▎     | 230/526 [00:59<00:30,  9.87it/s]
 44%|████▍     | 232/526 [01:00<00:48,  6.08it/s]
 44%|████▍     | 234/526 [01:00<00:40,  7.27it/s]
 45%|████▍     | 236/526 [01:00<00:36,  7.86it/s]
 45%|████▌     | 238/526 [01:00<00:40,  7.06it/s]
 46%|████▌     | 241/526 [01:00<00:31,  8.96it/s]
 46%|████▌     | 243/526 [01:01<00:28,  9.85it/s]
 47%|████▋     | 245/526 [01:02<01:00,  4.61it/s]
 47%|████▋     | 247/526 [01:02<00:53,  5.26it/s]
 47%|████▋     | 248/526 [01:02<01:01,  4.52it/s]
 47%|████▋     | 249/526 [01:03<01:24,  3.27it/s]
 48%|████▊     | 250/526 [01:03<01:12,  3.79it/s]
 48%|████▊     | 251/526 [01:03<01:06,  4.14it/s]
 48%|████▊     | 252/526 [01:03<01:02,  4.36it/s]
 48%|████▊     | 253/526 [01:04<00:58,  4.68it/s]
 48%|████▊     | 255/526 [01:04<01:23,  3.24it/s]
 49%|████▊     | 256/526 [01:05<01:14,  3.65it/s]
 49%|████▉     | 258/526 [01:05<00:54,  4.88it/s]
 49%|████▉     | 260/526 [01:05<00:42,  6.31it/s]
 50%|████▉     | 261/526 [01:05<00:40,  6.59it/s]
 50%|█████     | 263/526 [01:06<01:03,  4.14it/s]
 50%|█████     | 264/526 [01:07<01:30,  2.91it/s]
 50%|█████     | 265/526 [01:07<01:17,  3.35it/s]
 51%|█████     | 266/526 [01:07<01:27,  2.97it/s]
 51%|█████     | 267/526 [01:08<01:34,  2.74it/s]
 51%|█████     | 268/526 [01:08<01:18,  3.30it/s]
 51%|█████▏    | 270/526 [01:08<00:52,  4.86it/s]
 52%|█████▏    | 271/526 [01:08<00:49,  5.12it/s]
 52%|█████▏    | 272/526 [01:09<01:06,  3.79it/s]
 52%|█████▏    | 273/526 [01:09<01:17,  3.26it/s]
 52%|█████▏    | 274/526 [01:09<01:22,  3.06it/s]
 52%|█████▏    | 275/526 [01:11<03:07,  1.34it/s]
 52%|█████▏    | 276/526 [01:11<02:25,  1.72it/s]
 53%|█████▎    | 277/526 [01:11<01:55,  2.16it/s]
 53%|█████▎    | 279/526 [01:13<02:49,  1.46it/s]
 53%|█████▎    | 280/526 [01:15<03:57,  1.04it/s]
 53%|█████▎    | 281/526 [01:17<04:52,  1.20s/it]
 54%|█████▎    | 282/526 [01:19<05:34,  1.37s/it]
 54%|█████▍    | 283/526 [01:21<06:05,  1.50s/it]
 54%|█████▍    | 284/526 [01:23<06:28,  1.60s/it]
 54%|█████▍    | 285/526 [01:23<04:56,  1.23s/it]
 54%|█████▍    | 286/526 [01:24<04:26,  1.11s/it]
 55%|█████▍    | 287/526 [01:24<03:17,  1.21it/s]
 55%|█████▍    | 289/526 [01:24<01:53,  2.10it/s]
 55%|█████▌    | 291/526 [01:24<01:29,  2.63it/s]
 56%|█████▌    | 292/526 [01:25<01:18,  2.98it/s]
 56%|█████▌    | 294/526 [01:25<00:56,  4.13it/s]
 56%|█████▌    | 295/526 [01:25<00:49,  4.69it/s]
 56%|█████▋    | 296/526 [01:25<00:43,  5.29it/s]
 57%|█████▋    | 298/526 [01:28<02:28,  1.53it/s]
 57%|█████▋    | 299/526 [01:30<04:08,  1.09s/it]
 57%|█████▋    | 300/526 [01:32<04:13,  1.12s/it]
 57%|█████▋    | 301/526 [01:33<04:03,  1.08s/it]
 57%|█████▋    | 302/526 [01:34<04:08,  1.11s/it]
 58%|█████▊    | 303/526 [01:35<04:12,  1.13s/it]
 58%|█████▊    | 304/526 [01:35<03:06,  1.19it/s]
 58%|█████▊    | 305/526 [01:36<03:28,  1.06it/s]
 58%|█████▊    | 306/526 [01:37<03:43,  1.02s/it]
 58%|█████▊    | 307/526 [01:39<03:55,  1.08s/it]
 59%|█████▊    | 308/526 [01:40<04:12,  1.16s/it]
 59%|█████▊    | 309/526 [01:40<03:05,  1.17it/s]
 59%|█████▉    | 310/526 [01:41<02:51,  1.26it/s]
 59%|█████▉    | 311/526 [01:41<02:07,  1.68it/s]
 59%|█████▉    | 312/526 [01:42<02:46,  1.28it/s]
 60%|█████▉    | 313/526 [01:43<03:11,  1.11it/s]
 60%|█████▉    | 314/526 [01:45<03:37,  1.02s/it]
 60%|█████▉    | 315/526 [01:48<05:46,  1.64s/it]
 60%|██████    | 317/526 [01:48<03:27,  1.01it/s]
 60%|██████    | 318/526 [01:49<02:56,  1.18it/s]
 61%|██████    | 319/526 [01:49<02:24,  1.43it/s]
 61%|██████    | 321/526 [01:50<02:23,  1.43it/s]
 61%|██████    | 322/526 [01:51<02:02,  1.66it/s]
 62%|██████▏   | 324/526 [01:51<01:20,  2.52it/s]
 62%|██████▏   | 326/526 [01:51<00:57,  3.51it/s]
 62%|██████▏   | 327/526 [01:51<00:52,  3.77it/s]
 62%|██████▏   | 328/526 [01:51<00:46,  4.24it/s]
 63%|██████▎   | 330/526 [01:51<00:32,  6.07it/s]
 63%|██████▎   | 332/526 [01:52<00:40,  4.74it/s]
 63%|██████▎   | 334/526 [01:53<01:05,  2.92it/s]
 64%|██████▎   | 335/526 [01:53<01:02,  3.04it/s]
 64%|██████▍   | 336/526 [01:55<01:37,  1.94it/s]
 64%|██████▍   | 337/526 [01:55<01:35,  1.97it/s]
 64%|██████▍   | 339/526 [01:56<01:13,  2.53it/s]
 65%|██████▍   | 340/526 [01:57<02:15,  1.38it/s]
 65%|██████▌   | 342/526 [01:58<01:28,  2.07it/s]
 65%|██████▌   | 343/526 [01:58<01:34,  1.93it/s]
 66%|██████▌   | 345/526 [02:01<02:49,  1.07it/s]
 66%|██████▌   | 346/526 [02:03<03:22,  1.12s/it]
 66%|██████▌   | 347/526 [02:06<04:48,  1.61s/it]
 66%|██████▌   | 348/526 [02:07<03:54,  1.32s/it]
 66%|██████▋   | 349/526 [02:07<03:07,  1.06s/it]
 67%|██████▋   | 350/526 [02:11<04:53,  1.67s/it]
 67%|██████▋   | 351/526 [02:12<05:00,  1.72s/it]
 67%|██████▋   | 352/526 [02:13<03:39,  1.26s/it]
 67%|██████▋   | 354/526 [02:13<02:04,  1.38it/s]
 67%|██████▋   | 355/526 [02:13<01:47,  1.60it/s]
 68%|██████▊   | 357/526 [02:13<01:14,  2.26it/s]
 68%|██████▊   | 358/526 [02:14<01:08,  2.47it/s]
 68%|██████▊   | 360/526 [02:14<00:46,  3.60it/s]
 69%|██████▊   | 361/526 [02:14<00:41,  3.99it/s]
 69%|██████▉   | 363/526 [02:15<00:44,  3.69it/s]
 69%|██████▉   | 364/526 [02:15<00:41,  3.89it/s]
 69%|██████▉   | 365/526 [02:15<00:45,  3.51it/s]
 70%|██████▉   | 366/526 [02:17<01:36,  1.66it/s]
 70%|██████▉   | 368/526 [02:17<01:01,  2.56it/s]
 70%|███████   | 369/526 [02:17<00:56,  2.80it/s]
 70%|███████   | 370/526 [02:20<02:49,  1.09s/it]
 71%|███████   | 371/526 [02:24<04:15,  1.65s/it]
 71%|███████   | 372/526 [02:27<05:21,  2.09s/it]
 71%|███████▏  | 375/526 [02:30<03:54,  1.55s/it]
 71%|███████▏  | 376/526 [02:30<03:08,  1.26s/it]
 72%|███████▏  | 378/526 [02:30<02:01,  1.21it/s]
 72%|███████▏  | 379/526 [02:31<01:46,  1.38it/s]
 72%|███████▏  | 381/526 [02:34<02:35,  1.07s/it]
 73%|███████▎  | 382/526 [02:34<02:07,  1.13it/s]
 73%|███████▎  | 383/526 [02:35<01:48,  1.31it/s]
 73%|███████▎  | 384/526 [02:38<03:13,  1.36s/it]
 73%|███████▎  | 385/526 [02:41<04:20,  1.85s/it]
 73%|███████▎  | 386/526 [02:41<03:24,  1.46s/it]
 74%|███████▍  | 388/526 [02:42<01:59,  1.16it/s]
 74%|███████▍  | 389/526 [02:42<01:50,  1.24it/s]
 74%|███████▍  | 390/526 [02:43<01:42,  1.33it/s]
 75%|███████▍  | 393/526 [02:43<00:52,  2.55it/s]
 75%|███████▌  | 396/526 [02:43<00:32,  4.05it/s]
 76%|███████▌  | 398/526 [02:43<00:26,  4.90it/s]
 76%|███████▌  | 400/526 [02:47<01:19,  1.58it/s]
 76%|███████▌  | 401/526 [02:50<02:15,  1.08s/it]
 76%|███████▋  | 402/526 [02:50<01:52,  1.11it/s]
 77%|███████▋  | 403/526 [02:50<01:31,  1.34it/s]
 77%|███████▋  | 404/526 [02:51<01:14,  1.64it/s]
 77%|███████▋  | 406/526 [02:53<01:52,  1.07it/s]
 78%|███████▊  | 408/526 [02:54<01:14,  1.59it/s]
 78%|███████▊  | 409/526 [02:54<01:13,  1.60it/s]
 78%|███████▊  | 411/526 [02:58<01:56,  1.02s/it]
 79%|███████▊  | 413/526 [02:58<01:16,  1.47it/s]
 79%|███████▉  | 415/526 [02:58<00:56,  1.95it/s]
 79%|███████▉  | 417/526 [02:58<00:43,  2.48it/s]
 79%|███████▉  | 418/526 [03:00<01:02,  1.72it/s]
 80%|███████▉  | 420/526 [03:00<00:42,  2.48it/s]
 80%|████████  | 421/526 [03:02<01:17,  1.35it/s]
 80%|████████  | 423/526 [03:02<00:55,  1.86it/s]
 81%|████████  | 425/526 [03:02<00:37,  2.69it/s]
 81%|████████  | 426/526 [03:03<00:33,  3.02it/s]
 81%|████████▏ | 428/526 [03:03<00:23,  4.17it/s]
 82%|████████▏ | 430/526 [03:03<00:17,  5.45it/s]
 82%|████████▏ | 432/526 [03:03<00:19,  4.94it/s]
 82%|████████▏ | 433/526 [03:03<00:18,  5.15it/s]
 83%|████████▎ | 435/526 [03:06<00:47,  1.90it/s]
 83%|████████▎ | 436/526 [03:06<00:45,  2.00it/s]
 83%|████████▎ | 438/526 [03:07<00:35,  2.48it/s]
 83%|████████▎ | 439/526 [03:07<00:39,  2.21it/s]
 84%|████████▎ | 440/526 [03:08<00:41,  2.10it/s]
 84%|████████▍ | 442/526 [03:08<00:29,  2.88it/s]
 84%|████████▍ | 444/526 [03:10<00:41,  1.98it/s]
 85%|████████▍ | 445/526 [03:11<00:58,  1.39it/s]
 85%|████████▍ | 447/526 [03:12<00:41,  1.91it/s]
 85%|████████▌ | 448/526 [03:12<00:35,  2.22it/s]
 86%|████████▌ | 450/526 [03:12<00:22,  3.31it/s]
 86%|████████▌ | 453/526 [03:12<00:13,  5.46it/s]
 87%|████████▋ | 455/526 [03:12<00:12,  5.63it/s]
 87%|████████▋ | 457/526 [03:12<00:09,  7.06it/s]
 87%|████████▋ | 459/526 [03:13<00:08,  7.79it/s]
 88%|████████▊ | 461/526 [03:13<00:08,  7.52it/s]
 88%|████████▊ | 463/526 [03:13<00:08,  7.70it/s]
 88%|████████▊ | 465/526 [03:13<00:07,  7.64it/s]
 89%|████████▊ | 466/526 [03:14<00:08,  7.05it/s]
 89%|████████▉ | 467/526 [03:14<00:09,  6.25it/s]
 89%|████████▉ | 468/526 [03:14<00:08,  6.70it/s]
 89%|████████▉ | 470/526 [03:14<00:06,  8.46it/s]
 90%|████████▉ | 472/526 [03:15<00:08,  6.46it/s]
 90%|█████████ | 475/526 [03:15<00:09,  5.24it/s]
 90%|█████████ | 476/526 [03:15<00:09,  5.19it/s]
 91%|█████████ | 479/526 [03:16<00:09,  5.09it/s]
 91%|█████████▏| 480/526 [03:16<00:09,  4.95it/s]
 91%|█████████▏| 481/526 [03:18<00:17,  2.53it/s]
 92%|█████████▏| 482/526 [03:18<00:16,  2.71it/s]
 92%|█████████▏| 484/526 [03:18<00:12,  3.47it/s]
 92%|█████████▏| 486/526 [03:18<00:08,  4.53it/s]
 93%|█████████▎| 488/526 [03:18<00:06,  6.08it/s]
 93%|█████████▎| 490/526 [03:19<00:04,  7.82it/s]
 94%|█████████▎| 492/526 [03:19<00:03,  9.13it/s]
 94%|█████████▍| 494/526 [03:21<00:13,  2.38it/s]
 94%|█████████▍| 495/526 [03:21<00:11,  2.64it/s]
 94%|█████████▍| 496/526 [03:21<00:09,  3.05it/s]
 94%|█████████▍| 497/526 [03:21<00:08,  3.24it/s]
 95%|█████████▍| 498/526 [03:23<00:17,  1.61it/s]
 95%|█████████▍| 499/526 [03:25<00:24,  1.10it/s]
 95%|█████████▌| 501/526 [03:25<00:14,  1.76it/s]
 96%|█████████▌| 504/526 [03:25<00:07,  3.01it/s]
 96%|█████████▌| 505/526 [03:25<00:06,  3.10it/s]
 96%|█████████▌| 506/526 [03:26<00:05,  3.39it/s]
 97%|█████████▋| 508/526 [03:26<00:04,  3.66it/s]
 97%|█████████▋| 510/526 [03:27<00:04,  3.89it/s]
 97%|█████████▋| 511/526 [03:27<00:04,  3.45it/s]
 97%|█████████▋| 512/526 [03:27<00:03,  3.86it/s]
 98%|█████████▊| 513/526 [03:28<00:04,  2.86it/s]
 98%|█████████▊| 514/526 [03:28<00:04,  2.96it/s]
 98%|█████████▊| 515/526 [03:28<00:03,  3.21it/s]
 98%|█████████▊| 516/526 [03:28<00:02,  3.75it/s]
 98%|█████████▊| 517/526 [03:29<00:02,  3.83it/s]
 98%|█████████▊| 518/526 [03:29<00:01,  4.32it/s]
 99%|█████████▊| 519/526 [03:29<00:01,  4.77it/s]
 99%|█████████▉| 520/526 [03:30<00:02,  2.92it/s]
 99%|█████████▉| 522/526 [03:33<00:03,  1.05it/s]
 99%|█████████▉| 523/526 [03:36<00:04,  1.51s/it]
100%|█████████▉| 524/526 [03:40<00:03,  1.98s/it]
100%|█████████▉| 525/526 [03:40<00:01,  1.50s/it]
100%|██████████| 526/526 [03:43<00:00,  1.99s/it]
100%|██████████| 526/526 [03:43<00:00,  2.35it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:49:42.269465_lp_processed_test.json', '--output_addr', 'data/out/rag/asym/lp_rag_ae_sc_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  5.19 examples/s]
Generating train split: 526 examples [00:00, 1359.57 examples/s]
INFO 07-09 14:53:50 config.py:510] This model supports multiple tasks: {'generate', 'embed', 'score', 'classify', 'reward'}. Defaulting to 'generate'.
INFO 07-09 14:53:50 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:53:51 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:53:52 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:53:52 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:01,  1.71it/s]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.63it/s]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.65it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.61it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.62it/s]

INFO 07-09 14:53:55 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:53:57 worker.py:241] Memory profiling takes 2.08 seconds
INFO 07-09 14:53:57 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:53:57 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:53:57 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:53:57 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:53:59 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:11,  2.93it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:09,  3.30it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:00<00:09,  3.44it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:08,  3.52it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:08,  3.56it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:01<00:08,  3.59it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:01<00:07,  3.61it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:07,  3.62it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:02<00:07,  3.62it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:02<00:06,  3.63it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:06,  3.65it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:03<00:06,  3.66it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:03<00:05,  3.67it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:03<00:05,  3.68it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:04<00:05,  3.68it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:04<00:05,  3.69it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:04<00:04,  3.73it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:04<00:04,  3.77it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:05<00:04,  3.79it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:05<00:03,  3.80it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:05<00:03,  3.82it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:05<00:03,  3.83it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:06<00:03,  3.84it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:06<00:02,  3.85it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:06<00:02,  3.86it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:07<00:02,  3.87it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:07<00:02,  3.87it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:07<00:01,  3.87it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:07<00:01,  3.89it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:08<00:01,  3.90it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:08<00:01,  3.90it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:08<00:00,  3.92it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:08<00:00,  3.86it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:09<00:00,  3.78it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.83it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.74it/s]
INFO 07-09 14:54:09 model_runner.py:1535] Graph capturing finished in 9 secs, took 0.22 GiB
INFO 07-09 14:54:09 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 14.19 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Is investing all your savings into a small number of individual stocks risky? I want to invest 90% of my savings into stock market and split between 4-6 stocks.  How risky is this and is it a bad idea.  I feel like the stock market goes up over time so unless something like 2008 depression happens again there is actually not that much risk?Note that I'm trying to turn this into a form of income and not simply getting decent returns for retirement etc.  I am okay with reasonable risk so I can work less hopefully.

What causes a stock to make an EXTREMELY big move in a short period? Today (8/19/20) I was paper trading a stock REDU.  I was in a short position without a stop loss and stock went from 6.74 to 7.48 or over 10% in a span of less than 30 seconds, faster than I could react to get out.  Is this due to low trade volume and the bid and ask became so wide?  or someone manipulating the market?My question is how can I avoid this scenario in the future.  Would a stop loss work to get me out? or avoid these types of stocks in general.

Is there any reason to not buy if mortgage is comparable to rent? I'm curious: Say if you could buy a property or choose to rent and the mortgage per month on the property is similar to (or even lower) than the rent in your area, is there any reason to not buy?Assuming you are not looking to move and stay in the area long term.Also a follow up question, if you paid half the mortgage somewhere and want to leave, is it easy to transfer the mortgage to someone else and get what you paid so far back?

limiting losses when shorting stock First time shorting stock just want to make sure I limit my losses correctly.  Say I short 100 shares of SPY and $272 and I  want to get out(cover my short) if it goes above $285 would the following sequence be right?Initiate transaction Action:SELL SHORT 100 shares of SPY.Initiate second transaction Action: BUY Type:STOP 100 shares SPY at $285 stop price.
# Current post question:
Is cycling on this 35mph road too dangerous?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
How to tackle the bibliographic work as an entering PhD student? I'll be starting my PhD in the next fall. I already looked over the internet for advice for a beginner, even read two books on the subjects. Still, there is one point I haven't seen discussed as I wanted, it's the time and the way the student should be investing in catching up on his field and his specific topic, I'm speaking about the bibliographic part. For sure a student needs a lot of (continuous) input, but at the end he'll be solely judged on his output. From my previous research project, I'm not really confident in my way of balancing between going through articles/textbook material and trying to solve my own problematics. To be honest, it sometimes feels like a sneaky way of procrastinating: I'd tell myself that I'm still not ready to tackle my problem and that I need to make a little "detour" by existing works; and when it's done I don't feel more at ease to answer my questions. Or is it a normal aspect of research?In my specific case, I'll be working on a quite new subject (string theory) when I only had advanced lecture of quantum field theory and general relativity; so I'm thinking about going through the canonical textbook on the subject during the summer, do most of the exercises and derivations in there (which already represents hundreds of hours invested), maybe revising some mathematical tools I need to be really familiar with. Once I'll have a general idea of the topic I'll jump to the main articles in relation to my thesis. I also know that I will be using numerical tools (Monte Carlo methods) and will need to get conformable with that. So far I only have a superficial knowledge and use of the tool.Does it seem like a good use of my time? I already know that time and willpower are limited resources in grad school and I really don't want my desire to do well to burn me out from the beginning.

Why does the minor pentatonic scale sounds "oriental" to me? I've been training my minor pentatonic scale on guitar for a while (mostly playing it in A with the first position) and it always sounded somewhat oriental to me, in the sense of the musical airs you'd find in music to set the plot in Orient, musical clichés. I am not sure to be really clear in trying to share this impression, but I, then, read that in Orient they used to split the octave in 5 tones, and not 7 as we did in Europe, would it be because the pentatonic as only five notes (by definition) that my sub

Looking for advice on my self-taught music education Until a year ago, I had absolutely no music education, and I decided to change that around this period, well more exactly I picked up on (acoustic) guitar as a hobby and from there gained interest in knowing more about music. And so I discovered some theory: scales, chords, keys, harmony, melody and rhythm on websites and in some books. I also followed Wright lectures "Listening to music" http://oyc.yale.edu/ and read the first chapters of his book on this course (or vice-versa). I've gained knowledge but I'm not sure about the next steps, should I try applying it on my guitar ans starting to transcribe/compose? Listen the most to the broadest set of music genres? Start focusing on one? I'm a bit lost in my learning path, and would be glad to hear some suggestions.

How can I increase my focus and pleasure in reading English? After working on my oral skills in English for a couple of years, I know more interested in learning written English, specially by reading. I have been reading a couple of books over the last months (Game of Thrones, the whole Sherlock Holmes, Lord of the Rings, some Stephen King...) and articles (the Guardian, the New York Times, the Atlantic, mostly). But although I've felt some improvements in my understanding, and learned lots of words, I'm still not enjoying reading English as much as I do enjoy reading French (which is my natural language), and I'm not even what you could call a literary (checking my other stackexchange affiliations would prove you that...). When reading English I just follow the plot, but I'm really totally insensitive in the style of writing, in the choice of words, ... I hardly realized that when reading a few pages of French the other day, it's even way easier to focus on what I read when it is French than English.Fellow who learned English as a second (or third, or more...) language, have already felt that? Have you been through that? How long did it take? Or is it just a never ending job in progress but I'll never reach the ease I have with French?
# Current post question:
Shimano crankset is near end of life, can I use a Tiagra 4700 replacement?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
How to improve finger style guitar playing I am a competent, but not amazing, guitar player who is very comfortable with the usual chords as well as basic fingerpicking patterns. I would like to take it to the next level and be able to improvise and play something along the lines of (though not initially as complicated as) this by James Taylor: 
                
             - starting at about 2:40. Another example of something that I would love to do is 
                
            . As opposed to learning a particular song, which is fine, I am more interested in learning general techniques that I can improvise with when I am playing around on the guitar.What resources/tutorials/lessons would you recommend that can help me play interesting things like in these videos? 

What does "her mama leaned hard" in this Emmylou Harris Song mean? I was listening to the song "Red Dirt Girl" by Emmylou Harris, and didn't understand one of the lyrics: "her mama leaned hard." What does this mean?Her daddy turned mean and her mama leaned hardGot in trouble with a boy from townI did find one definition from this blog, but it doesn't seem to be what I am looking for: "To lean hard you must get under God’s feet and submit to His plans and purposes, even if you do not see them fully or understand them at all. Leaning means shifting all the weight of the burden from your shoulders to His."

How to gracefully walk away from coauthored paper I am working on a coauthored paper which I would like to step away from. How can I do so very tactfully and gracefully? I want to step away because I don't quite agree with the direction the paper is taking in terms of analysis; the publication prospects are not terrific; and, frankly, I am not sure if I fully believe the results (our setting is not very "clean," meaning that there are several alternative explanations). I don't necessarily want to say all of these things to them.Another detail is that the coauthors are two people at my current institution. I am going to be transitioning to another institution (in another state) in the next few months. Note this is not one of my main reasons to walk away, but being away will make it somewhat harder to collaborate. It will also be nice to get this off my plate so I can focus more on other projects.

Fungible Money Question Suppose that there are two people, A and B.  Each has a physical dollar bill.  Each donates the dollar bill to an organization.  The organization buys something for a dollar.First suppose that the organization buys the something with one of the two physical dollar bills.  If A claims that his money bought the item, then he may or may not be correct.  This is analogous for B.  All you would have to do is check the dollar and figure out who it originally came from.However, suppose that the bank deposits the money into an online bank account.  Then the money is truly fungible.  If A claims that the organization bought something with his money, how would we evaluate this claim?  Does it even make any sense for A to make this claim?  What if B also makes the claim?
# Current post question:
Repair Marin Hawk Hill (cracked frame) or get new bike?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/526 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/526 [00:16<2:24:46, 16.55s/it, est. speed input: 29.92 toks/s, output: 4.71 toks/s]
Processed prompts:   0%|          | 2/526 [00:17<1:04:50,  7.42s/it, est. speed input: 58.57 toks/s, output: 10.18 toks/s]
Processed prompts:   1%|          | 3/526 [00:17<36:09,  4.15s/it, est. speed input: 85.28 toks/s, output: 15.87 toks/s]  
Processed prompts:   1%|          | 4/526 [00:18<23:24,  2.69s/it, est. speed input: 108.57 toks/s, output: 21.65 toks/s]
Processed prompts:   1%|          | 6/526 [00:18<11:42,  1.35s/it, est. speed input: 188.43 toks/s, output: 33.57 toks/s]
Processed prompts:   2%|▏         | 8/526 [00:18<06:58,  1.24it/s, est. speed input: 261.87 toks/s, output: 45.68 toks/s]
Processed prompts:   2%|▏         | 12/526 [00:19<03:29,  2.45it/s, est. speed input: 446.15 toks/s, output: 69.67 toks/s]
Processed prompts:   3%|▎         | 16/526 [00:19<02:13,  3.82it/s, est. speed input: 569.88 toks/s, output: 93.52 toks/s]
Processed prompts:   4%|▎         | 19/526 [00:19<01:44,  4.84it/s, est. speed input: 658.22 toks/s, output: 111.03 toks/s]
Processed prompts:   5%|▍         | 24/526 [00:20<01:11,  7.01it/s, est. speed input: 838.83 toks/s, output: 140.43 toks/s]
Processed prompts:   5%|▍         | 26/526 [00:20<01:07,  7.41it/s, est. speed input: 908.24 toks/s, output: 151.41 toks/s]
Processed prompts:   6%|▌         | 29/526 [00:20<00:59,  8.30it/s, est. speed input: 992.25 toks/s, output: 168.05 toks/s]
Processed prompts:   6%|▌         | 31/526 [00:20<00:57,  8.57it/s, est. speed input: 1057.25 toks/s, output: 178.85 toks/s]
Processed prompts:   7%|▋         | 37/526 [00:21<00:43, 11.22it/s, est. speed input: 1247.46 toks/s, output: 212.92 toks/s]
Processed prompts:   8%|▊         | 44/526 [00:21<00:40, 11.77it/s, est. speed input: 1474.55 toks/s, output: 249.91 toks/s]
Processed prompts:   9%|▊         | 46/526 [00:21<00:38, 12.48it/s, est. speed input: 1531.80 toks/s, output: 260.89 toks/s]
Processed prompts:   9%|▉         | 49/526 [00:21<00:40, 11.87it/s, est. speed input: 1637.96 toks/s, output: 275.63 toks/s]
Processed prompts:  10%|▉         | 52/526 [00:22<00:37, 12.70it/s, est. speed input: 1720.14 toks/s, output: 291.45 toks/s]
Processed prompts:  10%|█         | 55/526 [00:22<00:39, 11.88it/s, est. speed input: 1783.32 toks/s, output: 305.67 toks/s]
Processed prompts:  11%|█         | 58/526 [00:22<00:36, 12.76it/s, est. speed input: 1894.37 toks/s, output: 321.14 toks/s]
Processed prompts:  12%|█▏        | 65/526 [00:23<00:35, 12.85it/s, est. speed input: 2056.87 toks/s, output: 355.03 toks/s]
Processed prompts:  13%|█▎        | 68/526 [00:23<00:35, 12.74it/s, est. speed input: 2147.06 toks/s, output: 369.05 toks/s]
Processed prompts:  13%|█▎        | 71/526 [00:23<00:36, 12.53it/s, est. speed input: 2234.44 toks/s, output: 382.77 toks/s]
Processed prompts:  14%|█▍        | 74/526 [00:23<00:36, 12.22it/s, est. speed input: 2335.53 toks/s, output: 396.27 toks/s]
Processed prompts:  15%|█▌        | 81/526 [00:24<00:29, 15.11it/s, est. speed input: 2612.64 toks/s, output: 431.72 toks/s]
Processed prompts:  16%|█▋        | 86/526 [00:24<00:29, 15.08it/s, est. speed input: 2764.44 toks/s, output: 454.95 toks/s]
Processed prompts:  17%|█▋        | 91/526 [00:24<00:26, 16.31it/s, est. speed input: 2876.62 toks/s, output: 479.31 toks/s]
Processed prompts:  18%|█▊        | 93/526 [00:25<00:29, 14.62it/s, est. speed input: 2904.14 toks/s, output: 486.78 toks/s]
Processed prompts:  19%|█▉        | 99/526 [00:25<00:24, 17.26it/s, est. speed input: 3069.13 toks/s, output: 516.54 toks/s]
Processed prompts:  20%|██        | 106/526 [00:25<00:28, 14.98it/s, est. speed input: 3204.09 toks/s, output: 545.11 toks/s]
Processed prompts:  21%|██▏       | 113/526 [00:26<00:26, 15.59it/s, est. speed input: 3377.63 toks/s, output: 575.86 toks/s]
Processed prompts:  22%|██▏       | 116/526 [00:26<00:27, 14.81it/s, est. speed input: 3465.88 toks/s, output: 587.34 toks/s]
Processed prompts:  23%|██▎       | 122/526 [00:26<00:26, 15.12it/s, est. speed input: 3665.92 toks/s, output: 612.65 toks/s]
Processed prompts:  25%|██▍       | 129/526 [00:27<00:26, 15.16it/s, est. speed input: 3815.40 toks/s, output: 641.22 toks/s]
Processed prompts:  25%|██▌       | 132/526 [00:27<00:28, 13.91it/s, est. speed input: 3886.39 toks/s, output: 650.97 toks/s]
Processed prompts:  26%|██▌       | 137/526 [00:27<00:25, 15.12it/s, est. speed input: 4040.81 toks/s, output: 672.37 toks/s]
Processed prompts:  27%|██▋       | 140/526 [00:28<00:26, 14.39it/s, est. speed input: 4115.38 toks/s, output: 683.00 toks/s]
Processed prompts:  28%|██▊       | 145/526 [00:28<00:24, 15.61it/s, est. speed input: 4266.49 toks/s, output: 704.06 toks/s]
Processed prompts:  28%|██▊       | 148/526 [00:28<00:25, 14.70it/s, est. speed input: 4343.35 toks/s, output: 714.44 toks/s]
Processed prompts:  29%|██▉       | 152/526 [00:29<00:26, 13.93it/s, est. speed input: 4447.19 toks/s, output: 728.31 toks/s]
Processed prompts:  29%|██▉       | 154/526 [00:29<00:26, 13.88it/s, est. speed input: 4501.90 toks/s, output: 735.65 toks/s]
Processed prompts:  30%|██▉       | 156/526 [00:29<00:28, 12.99it/s, est. speed input: 4521.66 toks/s, output: 741.79 toks/s]
Processed prompts:  30%|███       | 158/526 [00:29<00:26, 14.01it/s, est. speed input: 4566.14 toks/s, output: 750.21 toks/s]
Processed prompts:  31%|███       | 163/526 [00:29<00:28, 12.88it/s, est. speed input: 4649.51 toks/s, output: 766.75 toks/s]
Processed prompts:  32%|███▏      | 168/526 [00:30<00:24, 14.34it/s, est. speed input: 4741.45 toks/s, output: 786.65 toks/s]
Processed prompts:  33%|███▎      | 171/526 [00:30<00:24, 14.52it/s, est. speed input: 4828.66 toks/s, output: 797.82 toks/s]
Processed prompts:  33%|███▎      | 175/526 [00:30<00:24, 14.42it/s, est. speed input: 4969.22 toks/s, output: 812.30 toks/s]
Processed prompts:  34%|███▍      | 178/526 [00:30<00:22, 15.52it/s, est. speed input: 5041.47 toks/s, output: 824.70 toks/s]
Processed prompts:  35%|███▍      | 182/526 [00:31<00:23, 14.88it/s, est. speed input: 5095.10 toks/s, output: 838.73 toks/s]
Processed prompts:  35%|███▌      | 186/526 [00:31<00:26, 12.99it/s, est. speed input: 5158.80 toks/s, output: 849.94 toks/s]
Processed prompts:  36%|███▌      | 188/526 [00:31<00:27, 12.08it/s, est. speed input: 5173.08 toks/s, output: 855.05 toks/s]
Processed prompts:  36%|███▋      | 191/526 [00:31<00:27, 12.35it/s, est. speed input: 5202.32 toks/s, output: 865.28 toks/s]
Processed prompts:  37%|███▋      | 194/526 [00:32<00:29, 11.10it/s, est. speed input: 5241.19 toks/s, output: 872.51 toks/s]
Processed prompts:  37%|███▋      | 196/526 [00:32<00:27, 12.18it/s, est. speed input: 5273.93 toks/s, output: 880.54 toks/s]
Processed prompts:  38%|███▊      | 198/526 [00:32<00:29, 11.28it/s, est. speed input: 5295.98 toks/s, output: 885.49 toks/s]
Processed prompts:  39%|███▊      | 203/526 [00:32<00:22, 14.26it/s, est. speed input: 5418.41 toks/s, output: 906.10 toks/s]
Processed prompts:  39%|███▉      | 205/526 [00:33<00:25, 12.41it/s, est. speed input: 5466.35 toks/s, output: 910.34 toks/s]
Processed prompts:  40%|███▉      | 208/526 [00:33<00:23, 13.62it/s, est. speed input: 5528.52 toks/s, output: 921.88 toks/s]
Processed prompts:  40%|████      | 211/526 [00:33<00:28, 11.01it/s, est. speed input: 5548.18 toks/s, output: 927.35 toks/s]
Processed prompts:  41%|████      | 214/526 [00:33<00:24, 12.81it/s, est. speed input: 5632.59 toks/s, output: 939.60 toks/s]
Processed prompts:  41%|████      | 216/526 [00:34<00:24, 12.59it/s, est. speed input: 5660.09 toks/s, output: 945.85 toks/s]
Processed prompts:  41%|████▏     | 218/526 [00:34<00:26, 11.52it/s, est. speed input: 5683.51 toks/s, output: 950.75 toks/s]
Processed prompts:  42%|████▏     | 220/526 [00:34<00:25, 11.88it/s, est. speed input: 5722.27 toks/s, output: 957.50 toks/s]
Processed prompts:  42%|████▏     | 222/526 [00:34<00:30, 10.07it/s, est. speed input: 5722.33 toks/s, output: 960.70 toks/s]
Processed prompts:  43%|████▎     | 226/526 [00:35<00:31,  9.61it/s, est. speed input: 5760.12 toks/s, output: 970.57 toks/s]
Processed prompts:  43%|████▎     | 228/526 [00:35<00:29, 10.26it/s, est. speed input: 5782.21 toks/s, output: 977.46 toks/s]
Processed prompts:  44%|████▎     | 230/526 [00:35<00:29,  9.96it/s, est. speed input: 5802.92 toks/s, output: 982.58 toks/s]
Processed prompts:  44%|████▍     | 232/526 [00:35<00:29,  9.93it/s, est. speed input: 5836.09 toks/s, output: 988.17 toks/s]
Processed prompts:  44%|████▍     | 234/526 [00:35<00:31,  9.29it/s, est. speed input: 5854.24 toks/s, output: 992.43 toks/s]
Processed prompts:  45%|████▍     | 236/526 [00:36<00:27, 10.65it/s, est. speed input: 5923.34 toks/s, output: 1000.38 toks/s]
Processed prompts:  45%|████▌     | 238/526 [00:36<00:32,  8.82it/s, est. speed input: 5915.32 toks/s, output: 1002.72 toks/s]
Processed prompts:  46%|████▌     | 240/526 [00:36<00:35,  8.11it/s, est. speed input: 5916.45 toks/s, output: 1006.00 toks/s]
Processed prompts:  46%|████▌     | 241/526 [00:36<00:43,  6.54it/s, est. speed input: 5889.77 toks/s, output: 1003.72 toks/s]
Processed prompts:  46%|████▌     | 242/526 [00:37<00:51,  5.54it/s, est. speed input: 5872.26 toks/s, output: 1001.69 toks/s]
Processed prompts:  46%|████▋     | 244/526 [00:37<00:46,  6.00it/s, est. speed input: 5887.31 toks/s, output: 1005.81 toks/s]
Processed prompts:  47%|████▋     | 246/526 [00:37<00:44,  6.35it/s, est. speed input: 5912.74 toks/s, output: 1010.17 toks/s]
Processed prompts:  47%|████▋     | 248/526 [00:38<00:42,  6.48it/s, est. speed input: 5925.46 toks/s, output: 1014.22 toks/s]
Processed prompts:  47%|████▋     | 249/526 [00:38<00:55,  5.01it/s, est. speed input: 5879.50 toks/s, output: 1007.93 toks/s]
Processed prompts:  48%|████▊     | 250/526 [00:38<00:54,  5.08it/s, est. speed input: 5868.12 toks/s, output: 1006.24 toks/s]
Processed prompts:  48%|████▊     | 251/526 [00:38<00:53,  5.13it/s, est. speed input: 5868.56 toks/s, output: 1007.61 toks/s]
Processed prompts:  48%|████▊     | 252/526 [00:39<00:58,  4.65it/s, est. speed input: 5861.25 toks/s, output: 1003.80 toks/s]
Processed prompts:  48%|████▊     | 253/526 [00:39<00:55,  4.95it/s, est. speed input: 5867.86 toks/s, output: 1002.63 toks/s]
Processed prompts:  48%|████▊     | 254/526 [00:39<00:57,  4.70it/s, est. speed input: 5855.51 toks/s, output: 999.46 toks/s] 
Processed prompts:  48%|████▊     | 255/526 [00:39<00:53,  5.11it/s, est. speed input: 5855.08 toks/s, output: 1002.04 toks/s]
Processed prompts:  49%|████▉     | 259/526 [00:39<00:28,  9.38it/s, est. speed input: 5927.59 toks/s, output: 1009.27 toks/s]
Processed prompts:  50%|████▉     | 261/526 [00:40<00:35,  7.41it/s, est. speed input: 5911.76 toks/s, output: 1005.51 toks/s]
Processed prompts:  50%|█████     | 263/526 [00:40<00:36,  7.18it/s, est. speed input: 5920.31 toks/s, output: 1005.10 toks/s]
Processed prompts:  51%|█████     | 266/526 [00:40<00:33,  7.70it/s, est. speed input: 5949.88 toks/s, output: 1006.23 toks/s]
Processed prompts:  51%|█████     | 269/526 [00:41<00:30,  8.39it/s, est. speed input: 5976.82 toks/s, output: 1007.38 toks/s]
Processed prompts:  52%|█████▏    | 271/526 [00:41<00:30,  8.26it/s, est. speed input: 5998.04 toks/s, output: 1007.57 toks/s]
Processed prompts:  53%|█████▎    | 278/526 [00:41<00:15, 15.66it/s, est. speed input: 6136.59 toks/s, output: 1027.20 toks/s]
Processed prompts:  54%|█████▍    | 284/526 [00:41<00:11, 21.35it/s, est. speed input: 6248.12 toks/s, output: 1042.71 toks/s]
Processed prompts:  55%|█████▍    | 289/526 [00:41<00:10, 21.87it/s, est. speed input: 6322.82 toks/s, output: 1054.32 toks/s]
Processed prompts:  58%|█████▊    | 305/526 [00:42<00:05, 43.16it/s, est. speed input: 6700.54 toks/s, output: 1105.91 toks/s]
Processed prompts:  59%|█████▉    | 311/526 [00:42<00:05, 41.14it/s, est. speed input: 6848.22 toks/s, output: 1122.82 toks/s]
Processed prompts:  61%|██████    | 322/526 [00:42<00:06, 29.79it/s, est. speed input: 7017.80 toks/s, output: 1144.01 toks/s]
Processed prompts:  62%|██████▏   | 327/526 [00:42<00:06, 31.58it/s, est. speed input: 7095.40 toks/s, output: 1159.31 toks/s]
Processed prompts:  63%|██████▎   | 332/526 [00:43<00:05, 33.48it/s, est. speed input: 7196.75 toks/s, output: 1172.41 toks/s]
Processed prompts:  65%|██████▍   | 340/526 [00:43<00:04, 40.59it/s, est. speed input: 7358.07 toks/s, output: 1197.89 toks/s]
Processed prompts:  66%|██████▌   | 347/526 [00:43<00:03, 45.26it/s, est. speed input: 7505.49 toks/s, output: 1223.90 toks/s]
Processed prompts:  68%|██████▊   | 357/526 [00:43<00:03, 55.86it/s, est. speed input: 7717.49 toks/s, output: 1257.49 toks/s]
Processed prompts:  70%|███████   | 369/526 [00:43<00:02, 69.55it/s, est. speed input: 7968.52 toks/s, output: 1297.26 toks/s]
Processed prompts:  72%|███████▏  | 380/526 [00:43<00:01, 78.76it/s, est. speed input: 8212.69 toks/s, output: 1336.87 toks/s]
Processed prompts:  74%|███████▍  | 389/526 [00:43<00:01, 81.41it/s, est. speed input: 8399.88 toks/s, output: 1366.93 toks/s]
Processed prompts:  76%|███████▌  | 400/526 [00:43<00:01, 83.37it/s, est. speed input: 8764.56 toks/s, output: 1409.42 toks/s]
Processed prompts:  78%|███████▊  | 409/526 [00:43<00:01, 83.83it/s, est. speed input: 8938.57 toks/s, output: 1440.39 toks/s]
Processed prompts:  80%|████████  | 422/526 [00:44<00:01, 89.96it/s, est. speed input: 9257.08 toks/s, output: 1489.41 toks/s]
Processed prompts:  82%|████████▏ | 432/526 [00:44<00:01, 87.85it/s, est. speed input: 9524.14 toks/s, output: 1525.84 toks/s]
Processed prompts:  84%|████████▍ | 441/526 [00:44<00:01, 80.13it/s, est. speed input: 9696.76 toks/s, output: 1558.09 toks/s]
Processed prompts:  86%|████████▌ | 450/526 [00:44<00:00, 80.24it/s, est. speed input: 9922.37 toks/s, output: 1587.50 toks/s]
Processed prompts:  87%|████████▋ | 460/526 [00:44<00:00, 79.74it/s, est. speed input: 10187.55 toks/s, output: 1625.27 toks/s]
Processed prompts:  89%|████████▉ | 469/526 [00:44<00:00, 78.85it/s, est. speed input: 10380.89 toks/s, output: 1657.75 toks/s]
Processed prompts:  91%|█████████ | 477/526 [00:44<00:00, 77.29it/s, est. speed input: 10537.27 toks/s, output: 1686.55 toks/s]
Processed prompts:  92%|█████████▏| 485/526 [00:44<00:00, 62.74it/s, est. speed input: 10634.72 toks/s, output: 1711.33 toks/s]
Processed prompts:  94%|█████████▎| 492/526 [00:45<00:00, 41.81it/s, est. speed input: 10705.39 toks/s, output: 1726.84 toks/s]
Processed prompts:  95%|█████████▍| 498/526 [00:45<00:00, 38.28it/s, est. speed input: 10793.10 toks/s, output: 1741.37 toks/s]
Processed prompts:  96%|█████████▌| 504/526 [00:45<00:00, 39.87it/s, est. speed input: 10876.52 toks/s, output: 1760.19 toks/s]
Processed prompts:  97%|█████████▋| 509/526 [00:45<00:00, 29.36it/s, est. speed input: 10908.82 toks/s, output: 1771.78 toks/s]
Processed prompts:  98%|█████████▊| 513/526 [00:46<00:00, 23.94it/s, est. speed input: 10931.09 toks/s, output: 1777.70 toks/s]
Processed prompts:  98%|█████████▊| 517/526 [00:46<00:00, 21.23it/s, est. speed input: 10975.50 toks/s, output: 1793.37 toks/s]
Processed prompts:  99%|█████████▉| 520/526 [00:47<00:00, 12.58it/s, est. speed input: 10895.92 toks/s, output: 1790.05 toks/s]
Processed prompts:  99%|█████████▉| 522/526 [00:47<00:00, 11.32it/s, est. speed input: 10892.01 toks/s, output: 1797.33 toks/s]
Processed prompts: 100%|█████████▉| 524/526 [00:47<00:00, 11.63it/s, est. speed input: 10895.96 toks/s, output: 1806.89 toks/s]
Processed prompts: 100%|██████████| 526/526 [00:48<00:00,  7.20it/s, est. speed input: 10806.51 toks/s, output: 1796.46 toks/s]
Processed prompts: 100%|██████████| 526/526 [00:48<00:00, 10.90it/s, est. speed input: 10806.51 toks/s, output: 1796.46 toks/s]
[rank0]:[W709 14:54:59.016455768 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/asym/lp_rag_ae_sc_test_4_output.json
Cleaned temporary files.
Keeping ['ae', 'lp'] in profile
Temp data file saved at data/processed/TEMP_2025-07-09 14:55:03.024374_sc_processed_test.json.
	Running Ranking: ['python', 'retrieval/rank_dataset.py', '--model_name', 'facebook/contriever-msmarco', '--input_dataset_addr', 'data/processed/TEMP_2025-07-09 14:55:03.024374_sc_processed_test.json', '--output_dataset_addr', 'data/processed/TEMP_2025-07-09 14:55:03.024374_sc_processed_test.json', '--batch_size', '4']

  0%|          | 0/424 [00:00<?, ?it/s]
  0%|          | 1/424 [00:00<02:15,  3.11it/s]
  0%|          | 2/424 [00:00<02:08,  3.27it/s]
  1%|          | 4/424 [00:01<02:01,  3.46it/s]
  2%|▏         | 7/424 [00:01<01:18,  5.29it/s]
  2%|▏         | 10/424 [00:01<00:58,  7.02it/s]
  3%|▎         | 12/424 [00:01<00:50,  8.23it/s]
  3%|▎         | 13/424 [00:03<02:25,  2.82it/s]
  4%|▎         | 15/424 [00:03<01:50,  3.71it/s]
  4%|▍         | 16/424 [00:03<01:51,  3.64it/s]
  4%|▍         | 17/424 [00:04<01:41,  4.02it/s]
  5%|▍         | 20/424 [00:04<01:02,  6.46it/s]
  5%|▌         | 22/424 [00:04<01:00,  6.67it/s]
  5%|▌         | 23/424 [00:05<01:37,  4.12it/s]
  6%|▌         | 25/424 [00:05<01:25,  4.65it/s]
  6%|▋         | 27/424 [00:05<01:31,  4.32it/s]
  7%|▋         | 30/424 [00:06<01:01,  6.36it/s]
  8%|▊         | 34/424 [00:06<00:38, 10.04it/s]
  9%|▊         | 37/424 [00:06<00:56,  6.80it/s]
  9%|▉         | 40/424 [00:07<00:45,  8.38it/s]
 10%|█         | 44/424 [00:07<00:49,  7.73it/s]
 12%|█▏        | 49/424 [00:07<00:32, 11.48it/s]
 12%|█▏        | 52/424 [00:08<00:38,  9.76it/s]
 13%|█▎        | 54/424 [00:08<00:41,  8.90it/s]
 14%|█▎        | 58/424 [00:08<00:30, 12.13it/s]
 14%|█▍        | 61/424 [00:09<00:40,  9.01it/s]
 15%|█▍        | 63/424 [00:10<01:27,  4.13it/s]
 15%|█▌        | 65/424 [00:11<01:19,  4.54it/s]
 16%|█▌        | 67/424 [00:11<01:29,  4.01it/s]
 16%|█▌        | 68/424 [00:12<01:31,  3.90it/s]
 16%|█▋        | 69/424 [00:12<01:45,  3.35it/s]
 17%|█▋        | 70/424 [00:12<01:35,  3.72it/s]
 17%|█▋        | 71/424 [00:12<01:25,  4.13it/s]
 17%|█▋        | 72/424 [00:12<01:17,  4.55it/s]
 17%|█▋        | 73/424 [00:13<01:10,  4.97it/s]
 17%|█▋        | 74/424 [00:13<01:05,  5.34it/s]
 18%|█▊        | 76/424 [00:13<00:46,  7.43it/s]
 18%|█▊        | 77/424 [00:13<00:46,  7.40it/s]
 19%|█▉        | 80/424 [00:13<00:30, 11.42it/s]
 19%|█▉        | 82/424 [00:14<00:52,  6.53it/s]
 20%|█▉        | 84/424 [00:14<00:47,  7.11it/s]
 20%|██        | 85/424 [00:14<00:49,  6.89it/s]
 20%|██        | 86/424 [00:15<01:12,  4.64it/s]
 21%|██        | 87/424 [00:15<01:08,  4.93it/s]
 21%|██        | 89/424 [00:15<00:54,  6.14it/s]
 21%|██        | 90/424 [00:15<00:54,  6.13it/s]
 21%|██▏       | 91/424 [00:15<00:54,  6.13it/s]
 22%|██▏       | 92/424 [00:15<00:54,  6.12it/s]
 22%|██▏       | 93/424 [00:16<01:01,  5.38it/s]
 22%|██▏       | 94/424 [00:16<00:58,  5.59it/s]
 23%|██▎       | 96/424 [00:16<00:44,  7.44it/s]
 23%|██▎       | 98/424 [00:16<00:34,  9.57it/s]
 24%|██▎       | 100/424 [00:17<00:54,  5.99it/s]
 24%|██▍       | 101/424 [00:18<01:54,  2.81it/s]
 24%|██▍       | 103/424 [00:18<01:26,  3.71it/s]
 25%|██▍       | 105/424 [00:18<01:05,  4.84it/s]
 25%|██▌       | 107/424 [00:19<01:10,  4.49it/s]
 26%|██▌       | 109/424 [00:22<03:22,  1.56it/s]
 26%|██▌       | 110/424 [00:22<03:14,  1.62it/s]
 26%|██▌       | 111/424 [00:22<02:41,  1.94it/s]
 27%|██▋       | 114/424 [00:23<01:31,  3.40it/s]
 27%|██▋       | 116/424 [00:23<01:08,  4.48it/s]
 28%|██▊       | 118/424 [00:23<00:56,  5.39it/s]
 28%|██▊       | 120/424 [00:23<00:50,  6.03it/s]
 29%|██▉       | 122/424 [00:27<03:26,  1.46it/s]
 29%|██▉       | 123/424 [00:31<06:10,  1.23s/it]
 29%|██▉       | 124/424 [00:34<08:43,  1.75s/it]
 29%|██▉       | 125/424 [00:38<10:56,  2.20s/it]
 30%|██▉       | 126/424 [00:42<12:48,  2.58s/it]
 30%|██▉       | 127/424 [00:46<14:20,  2.90s/it]
 30%|███       | 128/424 [00:46<10:39,  2.16s/it]
 30%|███       | 129/424 [00:46<07:51,  1.60s/it]
 31%|███       | 130/424 [00:46<05:47,  1.18s/it]
 31%|███       | 131/424 [00:46<04:20,  1.13it/s]
 31%|███▏      | 133/424 [00:47<02:48,  1.72it/s]
 32%|███▏      | 137/424 [00:47<01:18,  3.68it/s]
 33%|███▎      | 141/424 [00:47<00:46,  6.05it/s]
 34%|███▍      | 145/424 [00:47<00:31,  8.79it/s]
 35%|███▌      | 149/424 [00:47<00:23, 11.77it/s]
 36%|███▌      | 153/424 [00:47<00:18, 14.85it/s]
 37%|███▋      | 157/424 [00:48<00:14, 17.90it/s]
 38%|███▊      | 160/424 [00:49<00:45,  5.76it/s]
 39%|███▊      | 164/424 [00:49<00:33,  7.86it/s]
 39%|███▉      | 167/424 [00:49<00:26,  9.72it/s]
 40%|████      | 170/424 [00:50<00:26,  9.57it/s]
 41%|████      | 173/424 [00:50<00:30,  8.16it/s]
 41%|████▏     | 175/424 [00:51<00:48,  5.15it/s]
 42%|████▏     | 178/424 [00:51<00:41,  6.00it/s]
 42%|████▏     | 180/424 [00:52<00:41,  5.89it/s]
 43%|████▎     | 183/424 [00:52<00:30,  7.86it/s]
 44%|████▎     | 185/424 [00:52<00:26,  8.92it/s]
 44%|████▍     | 188/424 [00:52<00:20, 11.52it/s]
 45%|████▍     | 190/424 [00:55<01:41,  2.31it/s]
 45%|████▌     | 192/424 [00:56<01:31,  2.54it/s]
 46%|████▌     | 194/424 [00:56<01:09,  3.31it/s]
 46%|████▌     | 196/424 [00:56<01:07,  3.37it/s]
 46%|████▋     | 197/424 [00:57<01:04,  3.54it/s]
 47%|████▋     | 198/424 [00:57<00:58,  3.89it/s]
 47%|████▋     | 199/424 [00:57<01:09,  3.26it/s]
 47%|████▋     | 200/424 [00:57<00:59,  3.74it/s]
 47%|████▋     | 201/424 [00:58<01:08,  3.27it/s]
 48%|████▊     | 202/424 [00:58<01:00,  3.69it/s]
 48%|████▊     | 203/424 [00:58<01:06,  3.34it/s]
 48%|████▊     | 204/424 [01:00<02:19,  1.58it/s]
 48%|████▊     | 205/424 [01:00<01:50,  1.99it/s]
 49%|████▊     | 206/424 [01:03<04:23,  1.21s/it]
 49%|████▉     | 207/424 [01:03<03:19,  1.09it/s]
 49%|████▉     | 209/424 [01:03<01:56,  1.84it/s]
 50%|█████     | 212/424 [01:03<01:02,  3.37it/s]
 50%|█████     | 214/424 [01:04<01:14,  2.82it/s]
 51%|█████     | 215/424 [01:05<01:19,  2.64it/s]
 51%|█████     | 217/424 [01:05<00:59,  3.47it/s]
 51%|█████▏    | 218/424 [01:05<00:56,  3.63it/s]
 52%|█████▏    | 219/424 [01:06<00:52,  3.87it/s]
 52%|█████▏    | 220/424 [01:06<01:03,  3.19it/s]
 52%|█████▏    | 222/424 [01:06<00:54,  3.74it/s]
 53%|█████▎    | 223/424 [01:07<00:49,  4.09it/s]
 53%|█████▎    | 225/424 [01:07<00:53,  3.70it/s]
 54%|█████▎    | 227/424 [01:07<00:38,  5.14it/s]
 54%|█████▍    | 229/424 [01:07<00:29,  6.67it/s]
 54%|█████▍    | 231/424 [01:09<01:19,  2.43it/s]
 55%|█████▍    | 233/424 [01:10<01:05,  2.90it/s]
 55%|█████▌    | 234/424 [01:14<03:04,  1.03it/s]
 55%|█████▌    | 235/424 [01:14<02:44,  1.15it/s]
 56%|█████▌    | 236/424 [01:14<02:16,  1.38it/s]
 56%|█████▋    | 239/424 [01:14<01:11,  2.58it/s]
 57%|█████▋    | 240/424 [01:15<01:14,  2.45it/s]
 57%|█████▋    | 241/424 [01:15<01:17,  2.36it/s]
 57%|█████▋    | 243/424 [01:16<00:56,  3.19it/s]
 58%|█████▊    | 244/424 [01:16<00:48,  3.72it/s]
 58%|█████▊    | 246/424 [01:16<00:35,  4.99it/s]
 58%|█████▊    | 247/424 [01:16<00:43,  4.08it/s]
 58%|█████▊    | 248/424 [01:16<00:37,  4.72it/s]
 59%|█████▉    | 250/424 [01:17<00:28,  6.05it/s]
 59%|█████▉    | 252/424 [01:17<00:23,  7.37it/s]
 60%|█████▉    | 254/424 [01:17<00:20,  8.47it/s]
 60%|██████    | 256/424 [01:17<00:17,  9.40it/s]
 61%|██████    | 258/424 [01:17<00:16, 10.05it/s]
 61%|██████▏   | 260/424 [01:18<00:20,  7.87it/s]
 62%|██████▏   | 263/424 [01:19<00:34,  4.64it/s]
 62%|██████▎   | 265/424 [01:19<00:28,  5.60it/s]
 63%|██████▎   | 266/424 [01:19<00:27,  5.84it/s]
 63%|██████▎   | 268/424 [01:19<00:22,  6.97it/s]
 63%|██████▎   | 269/424 [01:20<00:31,  4.85it/s]
 64%|██████▍   | 272/424 [01:20<00:20,  7.39it/s]
 65%|██████▍   | 274/424 [01:20<00:18,  8.08it/s]
 66%|██████▌   | 278/424 [01:20<00:11, 12.55it/s]
 66%|██████▌   | 280/424 [01:21<00:17,  8.40it/s]
 67%|██████▋   | 282/424 [01:21<00:18,  7.48it/s]
 67%|██████▋   | 284/424 [01:22<00:43,  3.25it/s]
 68%|██████▊   | 287/424 [01:23<00:32,  4.16it/s]
 68%|██████▊   | 288/424 [01:23<00:31,  4.37it/s]
 68%|██████▊   | 290/424 [01:23<00:24,  5.48it/s]
 69%|██████▊   | 291/424 [01:23<00:24,  5.54it/s]
 69%|██████▉   | 293/424 [01:25<00:49,  2.63it/s]
 70%|██████▉   | 295/424 [01:25<00:43,  2.99it/s]
 70%|██████▉   | 296/424 [01:25<00:37,  3.42it/s]
 70%|███████   | 297/424 [01:26<00:37,  3.40it/s]
 70%|███████   | 298/424 [01:26<00:33,  3.76it/s]
 71%|███████   | 301/424 [01:26<00:19,  6.16it/s]
 71%|███████   | 302/424 [01:30<01:43,  1.18it/s]
 72%|███████▏  | 304/424 [01:30<01:08,  1.75it/s]
 72%|███████▏  | 305/424 [01:30<00:58,  2.04it/s]
 72%|███████▏  | 306/424 [01:30<00:52,  2.23it/s]
 73%|███████▎  | 308/424 [01:31<00:39,  2.94it/s]
 73%|███████▎  | 309/424 [01:31<00:33,  3.43it/s]
 73%|███████▎  | 310/424 [01:32<00:46,  2.45it/s]
 74%|███████▍  | 313/424 [01:32<00:26,  4.18it/s]
 74%|███████▍  | 314/424 [01:32<00:27,  4.00it/s]
 74%|███████▍  | 315/424 [01:32<00:25,  4.30it/s]
 75%|███████▍  | 317/424 [01:33<00:19,  5.49it/s]
 75%|███████▌  | 318/424 [01:33<00:18,  5.60it/s]
 75%|███████▌  | 319/424 [01:33<00:18,  5.68it/s]
 75%|███████▌  | 320/424 [01:33<00:17,  5.93it/s]
 76%|███████▌  | 322/424 [01:33<00:12,  7.87it/s]
 76%|███████▌  | 323/424 [01:33<00:13,  7.42it/s]
 77%|███████▋  | 326/424 [01:37<01:08,  1.44it/s]
 77%|███████▋  | 327/424 [01:37<00:57,  1.68it/s]
 77%|███████▋  | 328/424 [01:38<00:53,  1.81it/s]
 78%|███████▊  | 329/424 [01:38<00:46,  2.03it/s]
 78%|███████▊  | 330/424 [01:38<00:38,  2.43it/s]
 79%|███████▊  | 333/424 [01:39<00:29,  3.06it/s]
 79%|███████▉  | 334/424 [01:39<00:27,  3.31it/s]
 79%|███████▉  | 336/424 [01:39<00:18,  4.66it/s]
 79%|███████▉  | 337/424 [01:43<01:21,  1.06it/s]
 80%|███████▉  | 338/424 [01:43<01:06,  1.29it/s]
 80%|███████▉  | 339/424 [01:43<00:55,  1.53it/s]
 80%|████████  | 340/424 [01:47<02:01,  1.45s/it]
 80%|████████  | 341/424 [01:48<01:39,  1.19s/it]
 81%|████████  | 342/424 [01:48<01:19,  1.03it/s]
 81%|████████  | 344/424 [01:48<00:48,  1.65it/s]
 82%|████████▏ | 346/424 [01:49<00:33,  2.31it/s]
 82%|████████▏ | 347/424 [01:49<00:37,  2.07it/s]
 83%|████████▎ | 350/424 [01:50<00:28,  2.63it/s]
 83%|████████▎ | 352/424 [01:54<01:01,  1.17it/s]
 83%|████████▎ | 353/424 [01:54<00:53,  1.34it/s]
 83%|████████▎ | 354/424 [01:55<00:52,  1.33it/s]
 84%|████████▍ | 356/424 [01:56<00:39,  1.73it/s]
 84%|████████▍ | 357/424 [01:56<00:34,  1.94it/s]
 84%|████████▍ | 358/424 [01:57<00:37,  1.76it/s]
 85%|████████▍ | 359/424 [01:57<00:39,  1.65it/s]
 85%|████████▍ | 360/424 [01:57<00:30,  2.11it/s]
 85%|████████▌ | 361/424 [01:58<00:24,  2.59it/s]
 85%|████████▌ | 362/424 [01:58<00:21,  2.82it/s]
 86%|████████▌ | 363/424 [02:02<01:20,  1.31s/it]
 86%|████████▌ | 364/424 [02:02<01:01,  1.02s/it]
 86%|████████▌ | 365/424 [02:02<00:45,  1.30it/s]
 87%|████████▋ | 368/424 [02:06<00:58,  1.04s/it]
 87%|████████▋ | 369/424 [02:06<00:48,  1.14it/s]
 88%|████████▊ | 372/424 [02:06<00:25,  2.05it/s]
 88%|████████▊ | 373/424 [02:06<00:21,  2.40it/s]
 88%|████████▊ | 374/424 [02:06<00:18,  2.75it/s]
 89%|████████▊ | 376/424 [02:07<00:15,  3.14it/s]
 89%|████████▉ | 377/424 [02:07<00:13,  3.48it/s]
 89%|████████▉ | 379/424 [02:07<00:11,  4.08it/s]
 90%|████████▉ | 380/424 [02:08<00:13,  3.30it/s]
 90%|█████████ | 382/424 [02:08<00:09,  4.36it/s]
 91%|█████████ | 384/424 [02:08<00:07,  5.61it/s]
 91%|█████████ | 385/424 [02:08<00:06,  5.94it/s]
 92%|█████████▏| 388/424 [02:09<00:05,  6.73it/s]
 92%|█████████▏| 389/424 [02:09<00:06,  5.11it/s]
 92%|█████████▏| 391/424 [02:09<00:04,  6.76it/s]
 93%|█████████▎| 393/424 [02:10<00:04,  6.94it/s]
 93%|█████████▎| 394/424 [02:10<00:05,  5.89it/s]
 93%|█████████▎| 395/424 [02:10<00:06,  4.58it/s]
 93%|█████████▎| 396/424 [02:11<00:10,  2.64it/s]
 94%|█████████▎| 397/424 [02:12<00:11,  2.30it/s]
 94%|█████████▍| 398/424 [02:12<00:12,  2.07it/s]
 95%|█████████▍| 401/424 [02:13<00:06,  3.56it/s]
 95%|█████████▍| 402/424 [02:14<00:11,  1.92it/s]
 95%|█████████▌| 403/424 [02:15<00:09,  2.15it/s]
 95%|█████████▌| 404/424 [02:15<00:07,  2.58it/s]
 96%|█████████▌| 405/424 [02:15<00:06,  3.09it/s]
 96%|█████████▌| 407/424 [02:16<00:05,  2.92it/s]
 96%|█████████▌| 408/424 [02:16<00:04,  3.33it/s]
 96%|█████████▋| 409/424 [02:16<00:04,  3.39it/s]
 97%|█████████▋| 410/424 [02:16<00:03,  3.90it/s]
 97%|█████████▋| 411/424 [02:16<00:03,  3.79it/s]
 97%|█████████▋| 413/424 [02:17<00:02,  3.76it/s]
 98%|█████████▊| 415/424 [02:18<00:02,  3.25it/s]
 98%|█████████▊| 416/424 [02:18<00:02,  2.85it/s]
 99%|█████████▊| 418/424 [02:19<00:01,  3.38it/s]
 99%|█████████▉| 420/424 [02:19<00:01,  3.73it/s]
100%|█████████▉| 422/424 [02:19<00:00,  4.97it/s]
100%|█████████▉| 423/424 [02:20<00:00,  4.18it/s]
100%|██████████| 424/424 [02:20<00:00,  4.50it/s]
100%|██████████| 424/424 [02:20<00:00,  3.02it/s]
	Running baseline: ['python', 'baselines.py', '--model_addr', 'Qwen/Qwen2.5-7B-Instruct', '--inputs_addr', 'data/processed/TEMP_2025-07-09 14:55:03.024374_sc_processed_test.json', '--output_addr', 'data/out/rag/asym/sc_rag_ae_lp_test_4_output.json', '--temperature', '0.0', '--top_p', '0.95', '--max_tokens', '4096', '--num_generated_outputs', '1', '--num_contexts', '4', '--max_retries', '10', '--cache_dir', '/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', '--rag']

Generating train split: 0 examples [00:00, ? examples/s]
Generating train split: 1 examples [00:00,  8.19 examples/s]
Generating train split: 424 examples [00:00, 1633.45 examples/s]
INFO 07-09 14:57:46 config.py:510] This model supports multiple tasks: {'classify', 'score', 'generate', 'embed', 'reward'}. Defaulting to 'generate'.
INFO 07-09 14:57:46 llm_engine.py:234] Initializing an LLM engine (v0.6.6.post1) with config: model='Qwen/Qwen2.5-7B-Instruct', speculative_config=None, tokenizer='Qwen/Qwen2.5-7B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=32768, download_dir='/scratch3/workspace/oyilmazel_umass_edu-lampqa_cache/', load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto, quantization_param_path=None, device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/Qwen2.5-7B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"candidate_compile_sizes":[],"compile_sizes":[],"capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
INFO 07-09 14:57:47 selector.py:120] Using Flash Attention backend.
INFO 07-09 14:57:48 model_runner.py:1094] Starting to load model Qwen/Qwen2.5-7B-Instruct...
INFO 07-09 14:57:48 weight_utils.py:251] Using model weights format ['*.safetensors']

Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]

Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:01,  1.74it/s]

Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.63it/s]

Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:01<00:00,  1.64it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.60it/s]

Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:02<00:00,  1.62it/s]

INFO 07-09 14:57:51 model_runner.py:1099] Loading model weights took 14.2487 GB
INFO 07-09 14:57:53 worker.py:241] Memory profiling takes 2.08 seconds
INFO 07-09 14:57:53 worker.py:241] the current vLLM instance can use total_gpu_memory (79.25GiB) x gpu_memory_utilization (0.90) = 71.33GiB
INFO 07-09 14:57:53 worker.py:241] model weights take 14.25GiB; non_torch_memory takes 0.14GiB; PyTorch activation peak memory takes 4.35GiB; the rest of the memory reserved for KV Cache is 52.59GiB.
INFO 07-09 14:57:53 gpu_executor.py:76] # GPU blocks: 61542, # CPU blocks: 4681
INFO 07-09 14:57:53 gpu_executor.py:80] Maximum concurrency for 32768 tokens per request: 30.05x
INFO 07-09 14:57:56 model_runner.py:1415] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.

Capturing CUDA graph shapes:   0%|          | 0/35 [00:00<?, ?it/s]
Capturing CUDA graph shapes:   3%|▎         | 1/35 [00:00<00:11,  2.85it/s]
Capturing CUDA graph shapes:   6%|▌         | 2/35 [00:00<00:10,  3.27it/s]
Capturing CUDA graph shapes:   9%|▊         | 3/35 [00:00<00:09,  3.43it/s]
Capturing CUDA graph shapes:  11%|█▏        | 4/35 [00:01<00:08,  3.51it/s]
Capturing CUDA graph shapes:  14%|█▍        | 5/35 [00:01<00:08,  3.56it/s]
Capturing CUDA graph shapes:  17%|█▋        | 6/35 [00:01<00:08,  3.58it/s]
Capturing CUDA graph shapes:  20%|██        | 7/35 [00:01<00:07,  3.61it/s]
Capturing CUDA graph shapes:  23%|██▎       | 8/35 [00:02<00:07,  3.63it/s]
Capturing CUDA graph shapes:  26%|██▌       | 9/35 [00:02<00:07,  3.63it/s]
Capturing CUDA graph shapes:  29%|██▊       | 10/35 [00:02<00:06,  3.65it/s]
Capturing CUDA graph shapes:  31%|███▏      | 11/35 [00:03<00:06,  3.67it/s]
Capturing CUDA graph shapes:  34%|███▍      | 12/35 [00:03<00:06,  3.68it/s]
Capturing CUDA graph shapes:  37%|███▋      | 13/35 [00:03<00:05,  3.69it/s]
Capturing CUDA graph shapes:  40%|████      | 14/35 [00:03<00:05,  3.70it/s]
Capturing CUDA graph shapes:  43%|████▎     | 15/35 [00:04<00:05,  3.70it/s]
Capturing CUDA graph shapes:  46%|████▌     | 16/35 [00:04<00:05,  3.70it/s]
Capturing CUDA graph shapes:  49%|████▊     | 17/35 [00:04<00:04,  3.75it/s]
Capturing CUDA graph shapes:  51%|█████▏    | 18/35 [00:04<00:04,  3.78it/s]
Capturing CUDA graph shapes:  54%|█████▍    | 19/35 [00:05<00:04,  3.80it/s]
Capturing CUDA graph shapes:  57%|█████▋    | 20/35 [00:05<00:03,  3.82it/s]
Capturing CUDA graph shapes:  60%|██████    | 21/35 [00:05<00:03,  3.84it/s]
Capturing CUDA graph shapes:  63%|██████▎   | 22/35 [00:05<00:03,  3.85it/s]
Capturing CUDA graph shapes:  66%|██████▌   | 23/35 [00:06<00:03,  3.86it/s]
Capturing CUDA graph shapes:  69%|██████▊   | 24/35 [00:06<00:02,  3.76it/s]
Capturing CUDA graph shapes:  71%|███████▏  | 25/35 [00:06<00:02,  3.80it/s]
Capturing CUDA graph shapes:  74%|███████▍  | 26/35 [00:07<00:02,  3.83it/s]
Capturing CUDA graph shapes:  77%|███████▋  | 27/35 [00:07<00:02,  3.85it/s]
Capturing CUDA graph shapes:  80%|████████  | 28/35 [00:07<00:01,  3.86it/s]
Capturing CUDA graph shapes:  83%|████████▎ | 29/35 [00:07<00:01,  3.89it/s]
Capturing CUDA graph shapes:  86%|████████▌ | 30/35 [00:08<00:01,  3.91it/s]
Capturing CUDA graph shapes:  89%|████████▊ | 31/35 [00:08<00:01,  3.92it/s]
Capturing CUDA graph shapes:  91%|█████████▏| 32/35 [00:08<00:00,  3.93it/s]
Capturing CUDA graph shapes:  94%|█████████▍| 33/35 [00:08<00:00,  3.88it/s]
Capturing CUDA graph shapes:  97%|█████████▋| 34/35 [00:09<00:00,  3.91it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.93it/s]
Capturing CUDA graph shapes: 100%|██████████| 35/35 [00:09<00:00,  3.75it/s]
INFO 07-09 14:58:05 model_runner.py:1535] Graph capturing finished in 9 secs, took 0.22 GiB
INFO 07-09 14:58:05 llm_engine.py:431] init engine (profile, create kv cache, warmup model) took 14.16 seconds
RAG ON
EXAMPLE PROMPT
<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Shall I ask my agency to overturn negative client feedback? I work for a writing agency. A few days ago, a client asked us to do some work for his website. The client said it was 'proofreading'. I did the work, the agency approved it. It was sent to the client for final approval.The client wrote back to say that what he actually wanted was his text rewritten so the site sold better. I wrote back to the agency to say this pretty much constituted a new job. The agency agreed so I got on with the work.I resubmitted and the agency approved it - again! It was sent to the client for final approval. I waited a few days and the client rejected it. He wrote back to say that the work was low quality and he could have done a better job himself. My agency were very nice about it, I got paid regardless, but it left a blemish on my stats, it's the first time a client has rejected a piece of my work.I am considering writing to my agency and asking them to overturn the negative feedback because1 - the client was vague about what they wanted - and in the first place, they described what they wanted incorrectly;2 - it was a new client, so we had no previous examples of what the client liked to work from3 - it's clear that the client had something very specific in mind, but they were not able to articulate their needs or show us the kind of thing they had in mind.I kept to the description as much as I could - short, concise, selling the site, a bit humorous. There was nothing I could do save getting inside the client's head. Because of this one negative piece of feedback I am now nearly halfway down my agency's ladder of writers, whereas before I was at the top.Should I write to my agency about this or just swallow it? I could do the latter, but I still feel an injustice is being done somewhere. 

Article I wrote has been published under another name - should I raise this with the publisher? I do part-time copywriting work and over the weekend I wrote a ~1500 word paid article for an online publication. It was a lot of research and toil, I had half a day to do it and I finally submitted the thing at 2am on Sunday. It was a very tricky piece.Now I notice the article has been published, with some minor edits, but under a different name. The client has used one of their own employees as the author. I wasn't aware that I was ghostwriting. Should I raise this with the publisher? Should credit not be given where it is due - or should I remain quiet unless I irritate them? I'm quite new to this but should they not at least have said it would be credited to someone else?

Should I include the name[s] of copywriting agencies I write for on my CV? I'm a startup copywriter, and some agencies request a CV on application to join. Should I include the name[s] of some of the agencies I already work with and which send me jobs?

Client has asked for a piece to be rewritten after agency acceptance of my submission. How much should I charge? Yesterday I was given a job which was to proofread a website and make any changes "where necessary". That's all the brief said. I did so, amended any typos etc, changed some grammar and spiced it up here and there. I submitted my piece and my agency accepted it, meaning I get paid. Great.I am a freelance copywriter. Today I get a message saying that the client says there was a "misunderstanding". He says he wants the text rewritten in a way that sells the site more, not just changed here and there. Clearly my agency thought I had fulfilled his brief, because they accepted my submission, but he is saying he wants the thing basically rewritten from scratch as I understand it.How much do I charge for this revision? I will be paid X for my original submission. But should I charge X again, because this sounds like a new job, half of X or less? I love my agency and don't want to annoy them, but it seems that the client's original brief was really vague. I am unsure of what to do.
# Current post question:
Bored with PhD - should I tell my supervisor?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Grades vs. projects in job application I am teaching computer science undergraduates, who will most likely go to work in the software industry. They often ask me for career advice and I want to know what advice to give them. Specifically, suppose a student can choose between two elective courses:Course A has a relatively low average grade (60-70/100), but during the homework assignments, the students build an industry-level project.Course B has a relatively high average grade (80-90/100), the homework assignments are simple and not industry-level.On one hand, course A lowers the student's average grade, so there is more chance the student will be filtered out based on a low average, even before the interview.On the other hand, if the student does get to the interview stage, having a strong project to show is a big advantage.I know that each work-place is different, but I would still be happy if there is a general rule-of-thumb to help the student decide: what is more helpful for getting a job in the software industry - a high average grade, or a strong project?

Pandemic - reduced rule-set for beginners I have recently started playing pandemic, and was overwhelmed by the amount of rules.Is there a reduced set of rules, easier to learn and remember but still fun, that can be used by beginners until they get used to the game?EDIT: My goal is not to make the game easier to win - it is to make the game easier to learn how to play. Instead of learning all rules at once, the team can learn the rules one by one. For example, suppose there are 10 rules (just an arbitrary number). Then instead of remembering all these rules at once, we can start with 5 rules, then add a new rule each play, until we remember and play by all rules.

How can I convert a linear narrative into a branching narrative? Suppose I would like to create a text adventure game, but my imagination is not sufficient for creating a whole game. But there are fiction books (in the public domain) that are very imaginative and could potentially make a great game. The main problem is that, a standard fiction book is sequential, while in a game there are many branches. Even if I have, say, only 10 branches, I still have to write 9 of these on my own.Is there a process that can make this easier? A structured procedure by which I can work, that can help me convert a novel to a text adventure, with minimal need to use my "rusty" imagination?I looked around the web and found some links that apparently discuss this topic, but with few details:Five tips for turning a book into an interactive game - mainly discusses what should be in a book in order to be able to make a game out of it, namely: scalability, strong characters, first-person narrative, and genre. But, it does not speak about the conversion process itself.What the heck is interactive fiction? - a subsection titled "Converting Fiction to IF" gives some hints: pick a shorter story, think about the choices your character makes, think how to display text on the page, think outside the page. Again, few details about the process itself are given.EDIT: thanks a lot to all the repliers for the wonderful ideas and the warm welcome!

Ice-cream-on-a-stick in refrigerator temperature In the summer, I used to make ice-cream-on-a-stick in various flavors. Some examples:Chocolate flavor: melted cocoa + honey + coconut oil + almond butter.Banana flavor: bananas + peanut butter + cinnamon + soy milk.I just mixed them, put in a mould, put a wooden stick in each hole, and put in the freezer. Then, I could grab one in the morning and eat on the way to work as a breakfast.Now, winter is coming and it is unpleasant to eat at freezer temperature, so I wonder if I can achieve the same effect in refrigerator temperature: is there an ingredient I can add to the mixture, that will make it freeze, and stick to the stick, in the refrigerator?
# Current post question:
How can I motivate the teaching assistants to grade more strictly?
<|im_end|>
<|im_start|>assistant

<|im_start|>system
You are a helpful assistant designed to generate personalized responses to user questions. Your task is to answer a user's question from a post in a personalized way by considering this user's past post questions and detailed descriptions of these questions.
# Your input:
    - The user's current question from a post.
    - The user's past post questions and detailed descriptions of these questions.
# Your task: Answer the user's current question in a personalized way by considering this user's past post questions and detailed descriptions of these questions, to learn about the user's preferences.
# Your output: You should generate personalized answer to the user's current question by considering this user's past post questions and detailed descriptions of these questions to learn about user's preferences. Your output should be a valid json object in ```json ``` block that contains the following fields:
    - personalized_answer: contains the personalized answer to the user's current question considering the this user's past post questions and detailed descriptions of these questions to learn about user's preferences.
<|im_end|>
<|im_start|>user

# Past post questions and detailed descriptions of these questions:
Tofu as a growing medium? I just had a strange idea of no actual significance, but I was just staring at a block of tofu and wondered if you could plant things in it. Has anyone tried this? How does/would tofu fair as a growing medium. How would plants grow differently in hard, medium, and soft tofu?

What is the functional role of the subtonic chord? In this chartthe subtonic major chord can come before the mediant and submedian chords. Does this imply that it has a tonic functionality? If so that seems counter-intuitive; it seems to share more in common with the dominant chord than the tonic. On the other hand, if it's a dominant function, why would you have a i-VII-III... progression? Wouldn't it make more sense for the VII to fall later, towards the end of the phrase.(Also I'm assuming that the VII actually refers to the bVII chord, but if I'm wrong please correct me on that)

How do I know where to place holes on an instrument? I've been trying to build a double reeded instrument out of plastic straws. I've run into a problem though, when I place fingering holes, the instrument doesn't seem to follow the $$f=/frac{nv}{4L}$$ formula. Is there a formula that would allow me to calculate where along the instrument I should place the holes?

Dill, cilantro, and fennel cross pollinating I've read several conflicting pieces of information on the growing of dill, cilantro, and fennel near one another. I've read that fennel and dill will grow well together and make good companion plants, however I've also read that they will cross pollinate to make a foul-smelling hybrid. I've read that dill and cilantro will cross pollinate to create a rather disgusting culinary useless hybrid, but I've also read that they can be beneficial to one another's growth. I have not, however, read anything on cilantro and fennel growing together. How do these three plants fare when grown with one another, and is there any risk of cross pollination or hybridization?To cut costs I am planning on using the seeds again. I (personally) don't particularly care about hybrids or GMOs, I just want to be able to use the plants as herbs. However, should the hybrids not be culinarily useful, I would begin to care.
# Current post question:
How narrow or broad should I look for undergraduate research?
<|im_end|>
<|im_start|>assistant

None

Processed prompts:   0%|          | 0/424 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s]
Processed prompts:   0%|          | 1/424 [00:17<2:00:20, 17.07s/it, est. speed input: 28.47 toks/s, output: 4.28 toks/s]
Processed prompts:   0%|          | 2/424 [00:17<50:41,  7.21s/it, est. speed input: 87.02 toks/s, output: 8.69 toks/s]  
Processed prompts:   1%|          | 3/424 [00:18<30:44,  4.38s/it, est. speed input: 113.24 toks/s, output: 13.65 toks/s]
Processed prompts:   1%|          | 4/424 [00:18<18:55,  2.70s/it, est. speed input: 155.93 toks/s, output: 19.05 toks/s]
Processed prompts:   1%|          | 5/424 [00:18<12:27,  1.78s/it, est. speed input: 192.65 toks/s, output: 24.47 toks/s]
Processed prompts:   2%|▏         | 7/424 [00:19<06:50,  1.02it/s, est. speed input: 247.73 toks/s, output: 35.25 toks/s]
Processed prompts:   2%|▏         | 10/424 [00:19<03:24,  2.03it/s, est. speed input: 417.38 toks/s, output: 52.56 toks/s]
Processed prompts:   3%|▎         | 12/424 [00:19<02:34,  2.67it/s, est. speed input: 604.66 toks/s, output: 63.58 toks/s]
Processed prompts:   3%|▎         | 14/424 [00:19<02:03,  3.32it/s, est. speed input: 658.78 toks/s, output: 74.61 toks/s]
Processed prompts:   4%|▍         | 18/424 [00:20<01:19,  5.12it/s, est. speed input: 805.03 toks/s, output: 97.50 toks/s]
Processed prompts:   5%|▍         | 21/424 [00:20<00:59,  6.79it/s, est. speed input: 886.66 toks/s, output: 114.84 toks/s]
Processed prompts:   5%|▌         | 23/424 [00:20<00:51,  7.83it/s, est. speed input: 958.00 toks/s, output: 126.24 toks/s]
Processed prompts:   6%|▌         | 25/424 [00:20<00:50,  7.97it/s, est. speed input: 1023.02 toks/s, output: 136.90 toks/s]
Processed prompts:   7%|▋         | 29/424 [00:20<00:41,  9.62it/s, est. speed input: 1235.43 toks/s, output: 159.21 toks/s]
Processed prompts:   8%|▊         | 32/424 [00:21<00:36, 10.72it/s, est. speed input: 1319.48 toks/s, output: 175.88 toks/s]
Processed prompts:   8%|▊         | 35/424 [00:21<00:38, 10.24it/s, est. speed input: 1451.66 toks/s, output: 191.46 toks/s]
Processed prompts:   9%|▉         | 38/424 [00:21<00:37, 10.31it/s, est. speed input: 1528.54 toks/s, output: 207.09 toks/s]
Processed prompts:   9%|▉         | 40/424 [00:21<00:34, 11.15it/s, est. speed input: 1602.76 toks/s, output: 218.07 toks/s]
Processed prompts:  10%|█         | 44/424 [00:22<00:32, 11.53it/s, est. speed input: 1704.55 toks/s, output: 239.02 toks/s]
Processed prompts:  11%|█         | 47/424 [00:22<00:29, 13.00it/s, est. speed input: 1821.01 toks/s, output: 255.45 toks/s]
Processed prompts:  12%|█▏        | 49/424 [00:22<00:31, 11.92it/s, est. speed input: 1880.97 toks/s, output: 265.08 toks/s]
Processed prompts:  13%|█▎        | 54/424 [00:22<00:27, 13.46it/s, est. speed input: 2060.54 toks/s, output: 291.44 toks/s]
Processed prompts:  14%|█▍        | 60/424 [00:23<00:25, 14.15it/s, est. speed input: 2274.71 toks/s, output: 322.12 toks/s]
Processed prompts:  16%|█▌        | 66/424 [00:23<00:27, 12.99it/s, est. speed input: 2534.49 toks/s, output: 350.56 toks/s]
Processed prompts:  16%|█▌        | 68/424 [00:23<00:27, 12.72it/s, est. speed input: 2575.58 toks/s, output: 359.88 toks/s]
Processed prompts:  18%|█▊        | 75/424 [00:24<00:25, 13.96it/s, est. speed input: 2771.39 toks/s, output: 394.44 toks/s]
Processed prompts:  18%|█▊        | 78/424 [00:24<00:23, 14.45it/s, est. speed input: 2876.59 toks/s, output: 409.15 toks/s]
Processed prompts:  19%|█▉        | 80/424 [00:24<00:23, 14.53it/s, est. speed input: 2924.96 toks/s, output: 418.73 toks/s]
Processed prompts:  19%|█▉        | 82/424 [00:24<00:23, 14.28it/s, est. speed input: 2972.21 toks/s, output: 427.98 toks/s]
Processed prompts:  20%|█▉        | 84/424 [00:25<00:26, 12.79it/s, est. speed input: 3024.72 toks/s, output: 436.05 toks/s]
Processed prompts:  21%|██        | 88/424 [00:25<00:26, 12.81it/s, est. speed input: 3181.72 toks/s, output: 454.03 toks/s]
Processed prompts:  21%|██        | 90/424 [00:25<00:26, 12.78it/s, est. speed input: 3217.03 toks/s, output: 462.95 toks/s]
Processed prompts:  22%|██▏       | 92/424 [00:25<00:25, 12.88it/s, est. speed input: 3301.83 toks/s, output: 471.93 toks/s]
Processed prompts:  23%|██▎       | 96/424 [00:26<00:24, 13.48it/s, est. speed input: 3461.52 toks/s, output: 490.18 toks/s]
Processed prompts:  24%|██▎       | 100/424 [00:26<00:21, 15.33it/s, est. speed input: 3583.58 toks/s, output: 509.71 toks/s]
Processed prompts:  24%|██▍       | 103/424 [00:26<00:23, 13.63it/s, est. speed input: 3631.35 toks/s, output: 521.64 toks/s]
Processed prompts:  25%|██▌       | 107/424 [00:26<00:23, 13.60it/s, est. speed input: 3796.03 toks/s, output: 538.92 toks/s]
Processed prompts:  26%|██▌       | 111/424 [00:27<00:21, 14.38it/s, est. speed input: 3921.05 toks/s, output: 556.99 toks/s]
Processed prompts:  27%|██▋       | 115/424 [00:27<00:18, 16.67it/s, est. speed input: 4127.52 toks/s, output: 576.71 toks/s]
Processed prompts:  28%|██▊       | 117/424 [00:27<00:19, 15.50it/s, est. speed input: 4182.67 toks/s, output: 584.67 toks/s]
Processed prompts:  29%|██▉       | 123/424 [00:27<00:20, 15.02it/s, est. speed input: 4316.67 toks/s, output: 610.32 toks/s]
Processed prompts:  30%|███       | 128/424 [00:28<00:17, 16.73it/s, est. speed input: 4458.79 toks/s, output: 633.81 toks/s]
Processed prompts:  31%|███       | 132/424 [00:28<00:17, 16.31it/s, est. speed input: 4510.19 toks/s, output: 650.78 toks/s]
Processed prompts:  32%|███▏      | 135/424 [00:28<00:17, 16.78it/s, est. speed input: 4571.66 toks/s, output: 664.20 toks/s]
Processed prompts:  33%|███▎      | 138/424 [00:28<00:18, 15.78it/s, est. speed input: 4597.85 toks/s, output: 676.10 toks/s]
Processed prompts:  33%|███▎      | 140/424 [00:29<00:26, 10.72it/s, est. speed input: 4638.55 toks/s, output: 677.26 toks/s]
Processed prompts:  34%|███▍      | 144/424 [00:29<00:23, 11.93it/s, est. speed input: 4741.15 toks/s, output: 693.77 toks/s]
Processed prompts:  35%|███▍      | 147/424 [00:29<00:23, 12.01it/s, est. speed input: 4838.73 toks/s, output: 704.98 toks/s]
Processed prompts:  36%|███▌      | 151/424 [00:29<00:21, 12.71it/s, est. speed input: 4909.88 toks/s, output: 721.02 toks/s]
Processed prompts:  37%|███▋      | 155/424 [00:30<00:22, 12.08it/s, est. speed input: 5021.86 toks/s, output: 734.84 toks/s]
Processed prompts:  38%|███▊      | 159/424 [00:30<00:22, 11.81it/s, est. speed input: 5086.72 toks/s, output: 748.72 toks/s]
Processed prompts:  39%|███▉      | 165/424 [00:31<00:21, 12.31it/s, est. speed input: 5260.26 toks/s, output: 770.95 toks/s]
Processed prompts:  39%|███▉      | 167/424 [00:31<00:21, 11.92it/s, est. speed input: 5274.16 toks/s, output: 777.23 toks/s]
Processed prompts:  40%|████      | 171/424 [00:31<00:17, 14.40it/s, est. speed input: 5371.34 toks/s, output: 795.63 toks/s]
Processed prompts:  41%|████      | 174/424 [00:31<00:15, 15.82it/s, est. speed input: 5417.36 toks/s, output: 809.01 toks/s]
Processed prompts:  42%|████▏     | 178/424 [00:31<00:13, 18.84it/s, est. speed input: 5488.31 toks/s, output: 828.36 toks/s]
Processed prompts:  43%|████▎     | 183/424 [00:31<00:11, 21.73it/s, est. speed input: 5620.94 toks/s, output: 852.57 toks/s]
Processed prompts:  45%|████▍     | 190/424 [00:31<00:07, 29.30it/s, est. speed input: 5801.51 toks/s, output: 889.91 toks/s]
Processed prompts:  47%|████▋     | 199/424 [00:32<00:05, 39.75it/s, est. speed input: 6082.41 toks/s, output: 939.24 toks/s]
Processed prompts:  49%|████▊     | 206/424 [00:32<00:04, 44.28it/s, est. speed input: 6260.54 toks/s, output: 977.34 toks/s]
Processed prompts:  50%|████▉     | 211/424 [00:32<00:04, 43.69it/s, est. speed input: 6353.78 toks/s, output: 1003.93 toks/s]
Processed prompts:  51%|█████▏    | 218/424 [00:32<00:04, 48.18it/s, est. speed input: 6588.68 toks/s, output: 1042.80 toks/s]
Processed prompts:  53%|█████▎    | 224/424 [00:32<00:04, 41.74it/s, est. speed input: 6748.99 toks/s, output: 1073.90 toks/s]
Processed prompts:  54%|█████▍    | 229/424 [00:32<00:04, 42.40it/s, est. speed input: 6882.25 toks/s, output: 1101.57 toks/s]
Processed prompts:  55%|█████▌    | 234/424 [00:32<00:04, 39.78it/s, est. speed input: 7006.11 toks/s, output: 1128.45 toks/s]
Processed prompts:  56%|█████▋    | 239/424 [00:33<00:04, 41.37it/s, est. speed input: 7105.57 toks/s, output: 1153.89 toks/s]
Processed prompts:  58%|█████▊    | 244/424 [00:33<00:10, 16.72it/s, est. speed input: 7084.63 toks/s, output: 1158.23 toks/s]
Processed prompts:  58%|█████▊    | 248/424 [00:33<00:09, 17.86it/s, est. speed input: 7210.93 toks/s, output: 1174.30 toks/s]
Processed prompts:  59%|█████▉    | 251/424 [00:34<00:08, 19.39it/s, est. speed input: 7309.47 toks/s, output: 1186.04 toks/s]
Processed prompts:  60%|█████▉    | 254/424 [00:34<00:08, 19.91it/s, est. speed input: 7442.88 toks/s, output: 1194.86 toks/s]
Processed prompts:  61%|██████    | 257/424 [00:34<00:09, 18.30it/s, est. speed input: 7486.79 toks/s, output: 1201.84 toks/s]
Processed prompts:  61%|██████▏   | 260/424 [00:34<00:08, 19.18it/s, est. speed input: 7524.53 toks/s, output: 1211.87 toks/s]
Processed prompts:  62%|██████▏   | 263/424 [00:34<00:10, 15.33it/s, est. speed input: 7559.74 toks/s, output: 1213.06 toks/s]
Processed prompts:  63%|██████▎   | 269/424 [00:34<00:07, 21.54it/s, est. speed input: 7698.88 toks/s, output: 1237.98 toks/s]
Processed prompts:  65%|██████▌   | 276/424 [00:35<00:05, 28.79it/s, est. speed input: 7836.67 toks/s, output: 1266.12 toks/s]
Processed prompts:  66%|██████▌   | 280/424 [00:35<00:05, 27.68it/s, est. speed input: 7886.92 toks/s, output: 1276.09 toks/s]
Processed prompts:  68%|██████▊   | 290/424 [00:35<00:03, 40.05it/s, est. speed input: 8100.61 toks/s, output: 1312.38 toks/s]
Processed prompts:  70%|██████▉   | 295/424 [00:35<00:03, 40.11it/s, est. speed input: 8184.05 toks/s, output: 1330.22 toks/s]
Processed prompts:  72%|███████▏  | 306/424 [00:35<00:02, 54.77it/s, est. speed input: 8399.27 toks/s, output: 1369.13 toks/s]
Processed prompts:  74%|███████▍  | 315/424 [00:35<00:01, 62.47it/s, est. speed input: 8607.59 toks/s, output: 1401.87 toks/s]
Processed prompts:  76%|███████▌  | 323/424 [00:35<00:01, 66.67it/s, est. speed input: 8793.27 toks/s, output: 1434.05 toks/s]
Processed prompts:  79%|███████▊  | 333/424 [00:35<00:01, 71.26it/s, est. speed input: 8995.19 toks/s, output: 1471.35 toks/s]
Processed prompts:  82%|████████▏ | 348/424 [00:36<00:00, 88.02it/s, est. speed input: 9449.68 toks/s, output: 1533.21 toks/s]
Processed prompts:  84%|████████▍ | 358/424 [00:36<00:00, 72.61it/s, est. speed input: 9698.18 toks/s, output: 1567.49 toks/s]
Processed prompts:  87%|████████▋ | 367/424 [00:36<00:00, 72.48it/s, est. speed input: 9904.18 toks/s, output: 1609.75 toks/s]
Processed prompts:  89%|████████▉ | 378/424 [00:36<00:00, 78.77it/s, est. speed input: 10228.90 toks/s, output: 1657.56 toks/s]
Processed prompts:  92%|█████████▏| 388/424 [00:36<00:00, 82.55it/s, est. speed input: 10538.12 toks/s, output: 1702.56 toks/s]
Processed prompts:  94%|█████████▎| 397/424 [00:36<00:00, 81.50it/s, est. speed input: 10792.84 toks/s, output: 1746.01 toks/s]
Processed prompts:  96%|█████████▌| 406/424 [00:36<00:00, 74.73it/s, est. speed input: 10994.91 toks/s, output: 1789.65 toks/s]
Processed prompts:  98%|█████████▊| 414/424 [00:37<00:00, 54.49it/s, est. speed input: 11163.03 toks/s, output: 1824.19 toks/s]
Processed prompts:  99%|█████████▉| 421/424 [00:37<00:00, 31.92it/s, est. speed input: 11289.93 toks/s, output: 1848.37 toks/s]
Processed prompts: 100%|██████████| 424/424 [00:38<00:00, 11.09it/s, est. speed input: 11187.12 toks/s, output: 1843.05 toks/s]
[rank0]:[W709 14:58:45.974678610 ProcessGroupNCCL.cpp:1250] Warning: WARNING: process group has NOT been destroyed before we destruct ProcessGroupNCCL. On normal program exit, the application should call destroy_process_group to ensure that any pending NCCL operations have finished in this process. In rare cases this process can exit before this point and block the progress of another member of the process group. This constraint has always been present,  but this warning has only been added since PyTorch 2.4 (function operator())
Experiment complete! Output can be found at data/out/rag/asym/sc_rag_ae_lp_test_4_output.json
Cleaned temporary files.
